{"version":3,"sources":["messages.js","utils/geometry.js","functions/viewPortFunctions.js","handlers/MouseHandler.js","components/colors.js","components/shapes/ShapeStyle.js","components/shapes/Shape.js","components/shapes/cursors/Cursor.js","components/shapes/cursors/SelectCursor.js","reducers/functions.js","components/shapes/PlaceErrors.js","locale/ru.js","components/ToolBar.js","components/shapes/PropertyData.js","components/shapes/TextShape.js","actions/ModelActions.js","reducers/materialReducer.js","components/shapes/shapes.js","components/shapes/MultiTextShape.js","components/shapes/FasadeShape.js","reducers/panels.js","components/ViewPort.js","customHooks/useEvents.js","customHooks/useDoubleClick.js","keyHandlers/KeyHandler.js","keyHandlers/CancelKeyHandler.js","keyHandlers/options.js","keyHandlers/DeleteKeyHandler.js","handlers/TouchManager.js","actions/AppActions.js","actions/EventsActions.js","actions/ScreenActions.js","actions/ShapeActions.js","actions/UserActions.js","customHooks/useActions.js","actions/actions.js","components/ViewPortContainer.js","functions/viewPortHandlers.js","components/shapes/PanelShape.js","components/shapes/DoublePanelShape.js","reducers/createNewState.js","components/shapes/cursors/DimensionCursor.js","components/shapes/cursors/DragCursor.js","components/shapes/DrawerBlockShape.js","components/shapes/DrawerShape.js","components/shapes/TubeShape.js","handlers/PanelCreateHandler.js","handlers/PanelMoveHandler.js","components/shapes/Dimension.js","components/shapes/SinglePanelDimension.js","handlers/SinglePanelDimensionCreateHandler.js","components/shapes/RectangleShape.js","handlers/FasadeSelectRectHandler.js","handlers/FasadeFreeHandler.js","components/shapes/TwoPanelDimension.js","handlers/TwoPanelDimensionCreateHandler.js","components/shapes/SingleFasadeDimension.js","handlers/SingleFasadeDimensionCreateHandler.js","reducers/panelReducer.js","reducers/initialState.js","functions/drawFunctions.js","components/shapes/cursors/ResizeCursor.js","handlers/PanelSelectRectHandler.js","handlers/PanelFreeHandler.js","handlers/StatusPanHandler.js","components/InputField.js","components/Modal.js","components/ComboBox.js","components/NewProjectDialog.js","components/shapes/table/TextShape.js","components/shapes/table/TableCellShape.js","components/shapes/table/TableShape.js","reducers/printPdf.js","reducers/projectReducer.js","reducers/index.js","store/configureStore.js","reducers/statusReducer.js","reducers/dialogsReducer.js","reducers/optionReducer.js","reducers/languageReducer.js","reducers/userReducer.js","customHooks/useToolTip.js","components/ToolButton.js","components/Header.js","components/MaterialBar.js","components/InformationBar.js","components/ToolButtonBar.js","components/CheckBox.js","components/MoveButtonsPanel.js","components/FasadePropertyBar.js","components/PropertyBar.js","components/LeftSideBar.js","components/DimensionsBar.js","components/FasadeDimensionsBar.js","components/Counter.js","components/FasadInstrumentsBar.js","components/InstrumentsBar.js","components/OperationsBar.js","components/ProjectBar.js","components/ToolButtonSeparator.js","components/WorkspaceBar.js","components/MainToolBar.js","components/MainContainer.js","components/Confirm.js","components/Alert.js","components/Spinner.js","components/HelpSection.js","Body.js","components/Login.js","components/Register.js","App.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","messages","NO_ERROR","ACTIVATION_SUCCEED","EMAIL_SEND_ERROR","INVALID_ACTIVATION_CODE","INVALID_EMAIL","INVALID_NAME","INVALID_PASSWORD","INVALID_USER_DATA","LOGIN_SUCCEED","NO_ACTIVATED","PASSWORDS_NOT_MATCH","REG_SUCCEED","SERVER_ERROR","USER_NAME_ALLOWED","USER_NAME_EXIST","USER_EMAIL_ALLOWED","USER_EMAIL_EXIST","USER_EMAIL_NOT_EXIST","Coord2D","x","arguments","length","undefined","y","Object","classCallCheck","this","Line","p1","p2","SLine","_this","param","createLine","a","b","c","getYbyX","NaN","getXbyY","Arc","first","second","third","chord","Math","sqrt","Rectangle","topLeft","bottomRight","width","abs","height","Vector","modulus","Intersection","createClass","key","value","line1","line2","d","d1","d2","line","sline","p","SLineSLine","Geometry","pointOnLine","rectTopLeft","rectBottomRight","lines","Array","points","forEach","l","LineSLine","push","ps","RectangleSLine","SLineFromRLine","isPointOnRayLine","rectTopLeft1","rectBottomRight1","rectTopLeft2","rectBottomRight2","lines1","lines2","l1","l2","LineLine","circle","dx","center","dy","LineShifted","radius","A","B","C","QuadEquation","res","i","CircleSLine","origin","vector","_step","k","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","_step2","_iterator2","realWidth","viewPortWidth","trunc","isNaN","borders","sx","sy","x1","y1","x2","y2","rect1","rect2","intersect","rectIntersection2","r1","r2","pointInRect","l3","l4","linesIntersection","some","innerRect","outerRect","every","c1","c2","distance","rect","left","right","top","bottom","dist","min","posX","posY","outer","isOverlapped","max","dxFront","dxBack","front","pos","dyFront","dyBack","includeTips","round","SLinePerpOnPoint","pointOnSLineProjection","point","SLineFromLine","v1","v2","v","sign","acos","scalar","p3","midp1","midPoint","midp2","pline1","pline2","arc","mp","m","limit","arcMiddlePoint","arcToPointArray","arcByTwoPointsCenter","len","angleVectors","angle","cos","sin","viewPortHeight","realHeight","realRect","screenRect","ratio","getPoint","target","getBoundingClientRect","clientX","clientY","scale","factor","anchor","viewPortData","rw","gridStep","pixelRatio","objectSpread","tl","br","gridStepPixels","setCurCoord","realPoint","screenPoint","curRealPoint","curScreenPoint","setTopLeft","getRealRect","getScreenRect","setDimensions","rh","zoomToRect","_ref","rectHeight","rectWidth","newViewPortData","marginLeft","marginRight","marginTop","marginBottom","resize","setViewPortData","canvas","wHeight","window","innerHeight","cont","document","getElementById","style","getComputedStyle","sw","Number","parseInt","sh","innerWidth","prevData","MouseHandler","state","isMobile","clickCount","curShape","coord","prevCoord","statusBar","properties","captions","toolbars","statusbar","setStatusBar","code","button","curPoint","screenToReal","_ref2","_ref3","prevPoint","mouseOnScreen","isOutRect","_ref4","_ref5","deltaY","appActions","keys","_ref6","pointerId","touchManager","addTouchEvent","_ref7","setPoint","_ref8","removeTouchEvent","MBUTTON_LEFT","MBUTTON_MIDDLE","MBUTTON_RIGHT","Color","BLUE","BLACK","GRAY","LIGHT_GRAY","DARK_GRAY","RED","DARK_ORANGE","GREEN","WHITE","SELECTED","SELECTION_AREA","GRID","SELECTED_POINT_MARKER","POINT_MARKER","ShapeStyle","color","stroke","SOLID","originColor","type","DASH","SELECTION","ACTIVE_SHAPE","INACTIVE_SHAPE","MockShape","GRID_STYLE_DASH","GRID_STYLE_SOLID","Shape","selectedStyle","highlightedStyle","errorStyle","defaultStyle","selected","inSelection","underCursor","highlighted","ctx","setState","strokeStyle","getStyle","getColor","fillStyle","setLineDash","getStroke","lineWidth","getWidth","refresh","refreshStyle","setColor","fill","setStyle","error","hasDimension","PANEL","DOUBLE_PANEL","DIMENSION","DRAWER","TUBE","FASADE","Cursor","_Shape","possibleConstructorReturn","getPrototypeOf","call","inherits","p0","realToScreen","shiftKey","altKey","SelectCursor","_Cursor","apply","beginPath","moveTo","lineTo","Status","FREE","SELECT","CREATE","DRAWING","CANCEL","PAN","MEASURE","getNewDate","Date","toISOString","substr","navigator","maxTouchPoints","PlaceErrorMessages","user","name","about","email","buttons","cancel","logout","login","signup","serverMessages","_serverMessages","defineProperty","registerForm","title","password","passwordAgain","showPass","checkName","checkEmail","loginForm","register","remember","activation","placeholder","hide","unhide","project","new","open","save","preview","savePdf","disabled","-disabled","wardrobe","depth","single","double","fasadeCount","info","materials","dspMainColor","fasadBase","fasadBaseColor","combi","fasadBases","DSP","MIRROR","SAND","LACOBEL","instruments","dimensions","createVertical","createHorizontal","createDrawer","createDrawerBlock","createTube","createSingleDimension","createTwoPanelDimensionInside","createTwoPanelDimensionOutside","divideFasadHor","divideFasadVert","createFasadeLengthDimension","createFasadeWidthDimension","operations","moveLeft","moveRight","moveUp","moveDown","resetView","distribute","property","noselected","drawerWidth","base","baseColor","nodrill","lock_width","unlock_width","lock_height","unlock_height","lock_move","unlock_move","lock_minlength","unlock_minlength","lock_maxlength","unlock_maxlength","delete","levelup","settings","showModule","deleteConfirm","print","close","move","rotate","snap","stopmeasure","pick1","pick2","viewport","tableTitle","module","count","workspace","corpus","fasades","handlers","create","_create","deleteJointedPanels","deletePanels","deleteTable","deleteRow","changeTexture","newProject","corruptedProject","corruptedDetailList","selection","crossSelect","fullSelect","selectedVertexes","of","showGrid","propBar","noPanelsSelected","NPanelsSelected","deleteButton","dataTable","gabarits","DSPcolor","DSPcorpus","DSPext","help","hotKeys","desc","ToolBar","id","_ref$expanded","expanded","_ref$expandable","expandable","caption","font","noTitle","wide","children","_ref$extStyle","extStyle","_useState","useState","_useState2","slicedToArray","expand","setExpanded","useId","contents","react_default","createElement","Fragment","className","concat","fontSize","onClick","PropertyTypes","VERTEX","NUMBER","POSITIVE_NUMBER","INTEGER_POSITIVE_NUMBER","BOOL","STRING","INPUT","LIST","RegExp","TextShape","text","vertical","CENTER","horizontal","controlPoints","fitRect","get","prototype","basePoint","_this$fitRect","fitWidth","fitHeight","_this$getTextRect2","getTextRect","_this$getTextRect","LEFT","RIGHT","TOP","BOTTOM","newPoint","rotatePoint","translate","offset","fillText","restore","textMetrics","measureText","actualBoundingBoxAscent","fontBoundingBoxDescent","_this$getTextRect3","screenToRealLength","fit","selectPoint","Map","cross","full","ModelActions","NEW_PROJECT","NEW_PROJECT_CONFIRM","SAVE_PROJECT","OPEN_PROJECT","OPEN_FAILURE","SET_PROJECT","SET_INFORMATION","SET_MATERIAL","SET_LOADED_MATERIALS","SET_WARDROBE_DIMENSIONS","LOAD_MATERIALS","SET_DELETE_CONFIRM","SET_WORKSPACE","UPDATE_STATE","updateState","data","payload","newProjectConfirm","start","saveProject","openProject","dispatch","input","accept","onchange","file","files","reader","FileReader","readAsText","onload","readerEvent","content","JSON","parse","result","click","setInformation","setWardrobeDimensions","setMaterial","mat","setLoadedMaterials","setDeleteConfirm","setWorkspace","loadMaterials","fetch","method","headers","Content-Type","then","json","catch","console","FasadBase","getFasadBases","CustomPaths","LOCK","LOCK_BOTH","LOCK_WIDTH","LOCK_HEIGHT","getCustomPath","path","_types","MultiTextShape","textShapes","MultiTextShape_createForOfIteratorHelper","t","_this$getTextOffsets","getTextOffsets","totalWidth","totalHeight","offsets","middleX","middleY","offsetX","offsetY","oneWidthOffsets","oneHeightOffsets","multiWidthOffsets","multiHeightOffsets","_this$fitRect2","_step3","oneLineWidth","oneLineHeight","multiLineWidth","multiLineHeight","_iterator3","_t$getTextRect","PI","setText","setFont","setAnchor","FasadeShape","level","parent","position","orientation","divided","HOR","baseCaption","minHeight","minWidth","selectable","deletable","fixable","fixedWidth","fixedHeight","last","Set","editable","getValue","isHeightEditable","extra","getHeightParts","setValue","setHeight","isWidthEditable","getWidthParts","setWidth","items","appData","map","hasChildren","isCombi","getBase","index","preSetBase","getBaseColor","_","setBaseColor","saveState","strokeRect","draw","lock","Path2D","realToScreenLength","text1","text2","setFitRect","fix","fixWidth","VERT","fixHeight","profiles","getProfiles","reduce","profile","shift","_this2","selectAllChildrenFasades","fasadeDimensions","initiator","newInitiatorHeight","newInitiatorBase","newParentHeight","newBase","totalProfileSize","fixedChildren","filter","freeChildren","partSize","totalSize","totalFixedChildrenSize","partFreeSize","ch","total","checkHeight","savePosition","at","newInitiatorWidth","newParentWidth","checkWidth","resizeChildrenByHeight","applyChanges","discardChanges","resizeChildrenByWidth","setBase","savedBase","savedHeight","savedWidth","cNext","getProfile","setPosition","_ref3$newBase","base1","base2","savedPosition","_ref4$width","_ref4$height","hidden","firstPoint","secondPoint","RectangleRectangle","SelectionSet","_Set","item","onAddToSelection","onDeleteFromSelection","panels_createForOfIteratorHelper","wrapNativeSuper","isPointInPanelArea","panel","isPanelIntersect","source","selectChildren","_step4","_iterator4","child","add","_step5","allSelected","_iterator5","_step6","_iterator6","bringSelectedToFront","newFasades","toConsumableArray","sort","f1","f2","has","selectAllJointedPanels","selectedPanels","jointFromBackSide","j","jointFromFrontSide","moveSelectedPanels","active","onGabaritChange","panels","from","prevPanel","_step11","maxDX","maxDY","_iterator11","newDX","newDY","_step12","_iterator12","_getWardrobeDimension","_step13","maxX","maxY","_iterator13","getWardrobeDimensions","getWardrobePrintArea","_step14","_appData$wardrobe","_iterator14","WORKSPACE","CORPUS","_d$getPosition","getPosition","ViewPort","eventHandlers","events","onPointerMove","onPointerDown","onPointerUp","onPointerLeave","onPointerEnter","onPointerCancel","onMouseMove","onMouseDown","onMouseUp","onMouseLeave","onMouseEnter","useEvents","refCanvas","useRef","useEffect","paint","current","getContext","useLayoutEffect","KEYDOWNHANDLE","addEventListener","onMouseWheel","preventDefault","display","_resize","body","oncontextmenu","scrollY","listener","scrollTo","behavior","removeEventListener","addWindowListeners","wardrobeRect","doubleClick","onDoubleClick","time","performance","now","useDoubleClick","assign","ref","cursor","onContextMenu","KeyHandler","handler","keypress","CancelKeyHandler","_KeyHandler","keyHandlers","ctrlKey","keyCode","DeleteKeyHandler","_getSelectionData","_step10","fixDisabled","deleteDisabled","_iterator10","isJoints","find","size","canBeDeleted","canBeFixed","panelCount","firstSelected","dimensionCount","getSelectionData","deleteSelectedConfirm","deleteSelectedFasadesConfirm","TouchManager","touches","prevDiff","event","findIndex","splice","AppActions","SET_LANGUAGE","REQUEST_LANGUAGE","SHOW_HELP","SHOW_CONFIRM","SHOW_ALERT","SHOW_DIALOG","setLanguage","requestLanguage","lang","stringify","capt","showHelp","show","showConfirm","messageKey","actions","showAlert","message","showDialog","dialog","blink","form","querySelector","oldColor","backgroundColor","int","setInterval","clearInterval","EventsActions","TOUCH_DOWN","TOUCH_UP","TOUCH_MOVE","TOUCH_CANCEL","LOG","touchDown","touchUp","touchMove","touchCancel","log","ScreenActions","ADD_PANEL","CANCEL_SELECTION","DELETE_CONFIRM","FLIP_ORIENTATION","PAN_SCREEN","PRINT","REPAINT","RESET_VIEW","SELECT_ALL","SELECT_PANEL","SET_CURSOR","SET_CUR_COORD","SET_DIMENSIONS","SET_PREV_STATUS","SET_RATIO","SET_REAL_WIDTH","SET_SCALE","SET_SNAP","SET_STATUS","SET_TOP_LEFT","START_SELECTION","STOP_SELECTION","addShape","shape","cancelSelection","repaint","selectPanels","setCursor","setPrevStatus","setRatio","setRealWidth","setScale","setScreenStatus","status","params","CREATE_PANEL","creator","startSelection","stopSelection","isSelectedPanels","ShapeActions","ADD_DIMENSION","ADD_FASADE_DIMENSION","CREATE_DRAWER","CREATE_DRAWERBLOCK","CREATE_FASADE_DIMENSION","CREATE_SINGLE_DIMENSION","CREATE_TWO_PANEL_DIMENSION","CREATE_TUBE","DELETE_SELECTED","DELETE_SELECTED_CONFIRM","DELETE_SELECTED_FASADES","DELETE_SELECTED_FASADES_CONFIRM","DISTRIBUTE","DIVIDE_FASAD_HOR","DIVIDE_FASAD_VERT","FIX_MIN_LENGTH","FIX_MAX_LENGTH","FIX_WIDTH","FIX_HEIGHT","MOVE_PANEL","SELECT_PARENT","SET_PANEL_STATE","SET_PROPERTY","addDimension","dimension","addFasadeDimension","createPanel","options","createFasadeDimension","createTwoPanelDimension","inside","deleteSelected","deleteSelectedFasades","fixMinLength","fixMaxLength","movePanel","movePoint","selectParent","fasade","setPanelState","setProperty","UserActions","SET_TOKEN","LOGOUT","ACTIVATE","setToken","token","activate","useActions","useDispatch","touchCount","getViewPortState","curCanvasPoint","selectDist","snapDist","snapMinDist","initialState","ViewPortContainer","props","appDataRef","useSelector","store","mouseHandler","_ref9","keyPress","_ref11","setAdditional","keyDown","pointerType","pointerMove","down","pointerDown","up","pointerUp","wheel","mouseWheel","leave","pointerLeave","PanelShape","gabarit","panelMargin","defaultMinLength","minLength","defaultMaxLength","maxLength","fixed_move","fixedLength","resizable","measurable","drillable","blocked","fixed","thickness","w","h","parallelFromBack","parallelFromFront","dl","joint","jointToBack","jointToFront","doNotMove","_this$getPosition","oldDX","oldDY","newX","newY","_this$isMoveAvailable","isMoveAvailable","PanelShape_createForOfIteratorHelper","setLength","getLength","jpos","resultNear","snapToNearest","resultJoint","snapToMinJointLength","_getJointData","jointsFromBackMinToMax","j1","j2","jointsFromFrontMinToMax","getJointData","minLengthDelta","maxLengthDelta","delta","_this$getNearest","getNearest","nearestFromBack","nearestFromFront","near","margin","minX","minY","par","reason","_step7","_iterator7","DoublePanelShape","_PanelShape","createFasades","wardrobeWidth","getFasadeWidth","fasadeBase","fasadeBaseColor","DimensionCursor","_getPrototypeOf2","_len","args","_key","ORD","getCursor","DragCursor","DRAG","hint","NODRAG","DrawerBlockShape","bottomDrawer","_i","_arr","DrawerShape","TubeShape","leftFlan","rightFlan","PanelCreateHandler","_MouseHandler","labelKey","makeCopy","activeShape","icons","countSelected","startPoint","prevStatus","prevMouseHandler","canBePlaced","findConstraints","setHidden","setType","lastPoint","drag","tm","getTouchCount","diff","PanelMoveHandler","newPanel","filterFunc","_this$activeShape$get","PanelMoveHandler_createForOfIteratorHelper","Dimension","offsetPoint","captionShape","setFillStyle","screenOffsetFirst","screenOffsetSecond","arrowSize","prevStroke","setStroke","drawArrow","setCaption","setOffsetPoint","dimLine","LineRectangle","SinglePanelDimension","_Dimension","_panel$getSingleDimen","getSingleDimensionData","_this$panel$getSingle","singleDimension","SinglePanelDimensionCreateHandler","SinglePanelDimensionCreateHandler_createForOfIteratorHelper","isUnderCursor","activePanel","_this3","_p$getSingleDimension","material","texture","selectionManager","getSelectedPanels","pop","getProperties","setProperties","currentObject","dragPos","RectangleShape","model","fillRect","refreshModel","tr","bl","PointToLineDistance","FasadeSelectRectHandler","x0","y0","setCorners","FasadeFreeHandler","_i2","_arr2","_p$isInSelectionRect","isInSelectionRect","ResizeCursor","clear","_i3","_arr3","TwoPanelDimension","panel1","panel2","getPoints","_TwoPanelDimension$ge","TwoPanelDimensionCreateHandler","TwoPanelDimensionCreateHandler_createForOfIteratorHelper","firstPanel","secondPanel","SingleFasadeDimension","_fasade$getSingleDime","_this$fasade$getSingl","SingleFasadeDimensionCreateHandler","SingleFasadeDimensionCreateHandler_createForOfIteratorHelper","panelReducer","action","newState","fasadeDimension","_step8","_iterator8","updateParallelPanels","toolButtonsPressed","getButtonPressed","panelsToDelete","_step9","_iterator9","_loop","deleteAllLinksToPanels","PanelFreeHandler","panelReducer_createForOfIteratorHelper","deleteAllChildren","partLen","divideFasadesHor","partWidth","divideFasadesVert","buttonPressed","activated","localStorage","getItem","sessionStorage","cookieToken","cookie","split","isArray","jwtDecode","FASADES","getInitialState","_createNewState","fixed_minlength","resizeable","width1","width2","createNewState","fasadBaseColors","getViewportData","information","order","plan","currentDate","activeDSPColor","dspCorpus","showLoading","statusParams","picker","lineJoin","drawFunctions_createForOfIteratorHelper","arrowTipPixels","arrow","PanelSelectRectHandler","StatusPanHandler","screenTopLeft","screenBottomRight","xInRange","yInRange","cursorPoint","INTEGER_NUMBER","InputField","prevValue","isNumber","onKeyPress","test","correct","stopPropagation","onKeyDown","onBlur","onChange","_test","onFocus","regexp","match","Modal","refHeader","_useDragElement","refElement","dragState","setDragState","useDragElement","maxWidth","wordWrap","textAlign","header","ComboBox","NewProjectDialog","_ref$start","wardrobeCaps","materialCaps","dspColors","fasadeBases","fasadeBasesCaps","fasadeBaseIndex","fasadeBaseColorIndex","_useState2$","fasadeBaseColors","typeValue","prev","underlines","weight","NORMAL","lineBreak","textWidth","BOLD","TextShape_createForOfIteratorHelper","singleTextLineHeight","prevLine","textHeight","underlineHeight","TableCellShape","_ref$underlines","_ref$frame","frame","_ref$padding","padding","_ref$align","align","_ref$weight","_this$getOwnDimension","getOwnDimensions","setBasePoint","_this$captionShape$ge","TableShape","table","tableRows","rowCount","colCount","TableShape_createForOfIteratorHelper","row","tableRow","col","printOptions","_this$getMaxCellDimen","getMaxCellDimensions","maxColWidth","maxRowHeight","maxRowTextHeight","maxSingleTextLineHeight","maxRowUnderlineHeight","rowIndex","colIndex","pageHeight","onEndPage","clearRect","topMargin","_col$getOwnDimensions","_this$getMaxCellDimen2","exportProject","printState","imgData","canv","setAttribute","pageWidth","canvWidth","canvHeight","dims","dataList","getTableDimensions","toDataURL","image","img1","img2","zip","JSZip","base64","generateAsync","FileSaver","saveAs","saveCurrentState","projectReducer","oldState","drawModule","drawModuleInCaption","detailList","primary","secondary","loadCurrentState","createStore","_statusReducer","ABORT","CANCEL_MOVING","prevCursor","statusReducer","_panelReducer","_projectReducer","_dialogsReducer","dialogsReducer","_materialReducer","materialReducer","_optionReducer","SET_DRAW_MODULE","optionReducer","_languageReducer","setCaptions","languageReducer","_userReducer","expires","userReducer","applyMiddleware","thunk","next","useToolTip","toolTip","onMouseOver","_e$target$getBounding","elementTop","elementLeft","elementHeight","innerText","_toolTip$getBoundingC","toolTipWidth","toolTipHeight","scrollX","ToolButtonType","INSTRUMENTS","ToolButton","icon","pressed","pressedStyle","unpressedStyle","_useToolTip","Header","flexWrap","gap","alignItems","MaterialBar","DSPColors","InformationBar","caps","getInfoData","TreeView","aria-label","defaultCollapseIcon","ExpandMore_default","defaultExpanded","defaultExpandIcon","ChevronRight_default","renderTree","nodes","TreeItem","nodeId","label","node","ToolButtonBar","CheckBox","checked","MoveButtonsPanel","update","enabledButtons","FasadePropertyBar","levelUpEnabled","selectedCount","noDelete","object","FasadePropertyBar_createForOfIteratorHelper","getValueElement","prop","noSelected","propCaps","PropertyBar","noFix","fixedLengthMin","fixedLengthMax","PropertyBar_createForOfIteratorHelper","LeftSideBar","DimensionsBar","_useSelector","twoInside","twoOutside","FasadeDimensionsBar","createFasadLengthDimension","createFasadWidthDimension","Counter","decreaseButton","increaseButton","flexDirection","FasadInstrumentsBar","divider","setDivider","horDivideEnable","vertDivideEnable","InstrumentsBar","hor","vert","drawer","drawerBlock","OperationsBar","distributeEnabled","jointBack","jointFront","canBeDistributed","ProjectBar","disabledAll","disTitle","ToolButtonSeparator","WorkspaceBar","spaces","MainToolBar","MainContainer","components_Header","Confirm","Alert","Spinner","HelpSection","react","fontWeight","href","Body","components_Spinner","require","Login","refName","refPass","refDialog","logging","requestLogin","success","history","setTimeout","onSubmit","pass","required","Register","refEmail","refPass1","refPass2","errCode","fetching","regSucceedCallback","regFailCallback","regErrorCallback","changeInputs","pass1","pass2","checkResult","check","fetchData","isNameExist","isEmailExist","url","onSuccess","onFail","onError","App","es","react_router_dom","react_router","component","container","createRoot","render","clone","obj","newObj","cloneProp","enumerable","round4","devicePixelRatio"],"mappings":"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","file":"static/js/main.1f1c66c9.chunk.js","sourcesContent":["const messages = {\r\n    NO_ERROR: \"NO_ERROR\",\r\n    ACTIVATION_SUCCEED: \"ACTIVATION_SUCCEED\",\r\n    EMAIL_SEND_ERROR: \"EMAIL_SEND_ERROR\",\r\n    INVALID_ACTIVATION_CODE: \"INVALID_ACTIVATION_CODE\",\r\n    INVALID_EMAIL: \"INVALID_EMAIL\",\r\n    INVALID_NAME: \"INVALID_NAME\",\r\n    INVALID_PASSWORD: \"INVALID_PASSWORD\",\r\n    INVALID_USER_DATA: \"INVALID_USER_DATA\",\r\n    LOGIN_SUCCEED: \"LOGIN_SUCCEED\",\r\n    NO_ACTIVATED: \"NO_ACTIVATED\",\r\n    PASSWORDS_NOT_MATCH: \"PASSWORDS_NOT_MATCH\",\r\n    REG_SUCCEED:\"REG_SUCCEED\",\r\n    SERVER_ERROR: \"SERVER_ERROR\",\r\n    USER_NAME_ALLOWED: \"USER_NAME_ALLOWED\",\r\n    USER_NAME_EXIST: \"USER_NAME_EXIST\",\r\n    USER_EMAIL_ALLOWED: \"USER_EMAIL_ALLOWED\",\r\n    USER_EMAIL_EXIST: \"USER_EMAIL_EXIST\",\r\n    USER_EMAIL_NOT_EXIST: \"USER_EMAIL_NOT_EXIST\",\r\n  }\r\n\r\nexport default messages","\r\nexport class Coord2D {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\nexport class Point2D {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nexport class Line {\r\n    constructor(p1, p2) {\r\n        if (arguments.length === 2) {\r\n            this.p1 = p1;\r\n            this.p2 = p2;\r\n        }\r\n        if (arguments.length === 4) {\r\n            this.p1 = { x: arguments[0], y: arguments[1] }\r\n            this.p2 = { x: arguments[2], y: arguments[3] }\r\n        }\r\n    }\r\n\r\n}\r\nexport class SLine {\r\n    constructor() {\r\n        let param = arguments;\r\n        let createLine = (p1, p2) => {\r\n            this.a = p1.y - p2.y;\r\n            this.b = p2.x - p1.x;\r\n            this.c = p1.x * p2.y - p1.y * p2.x;\r\n        };\r\n        switch (param.length) {\r\n            case (0): createLine(new Coord2D(), new Coord2D()); break;\r\n            case (1): createLine(param[0].p1, param[0].p2); break;\r\n            case (2): createLine(param[0], param[1]); break;\r\n            case (3): this.a = param[0]; this.b = param[1]; this.c = param[2]; break;\r\n            default:\r\n        }\r\n        this.getYbyX = function (x) {\r\n            if (this.b !== 0) return -(this.a * x + this.c) / this.b; else return NaN;\r\n        }\r\n        this.getXbyY = function (y) {\r\n            if (this.a !== 0) return -(this.b * y + this.c) / this.a; else return NaN;\r\n        }\r\n    }\r\n}\r\n\r\nexport class RLine {\r\n\r\n    constructor(p1 = new Coord2D(), p2 = new Coord2D()) {\r\n        this.origin = p1;\r\n        this.vector = new Vector(p1, p2);\r\n        // this.vector.x=p2.x-p1.x;\r\n        // this.vector.y=p2.y-p1.y;\r\n        this.directionPoint = { x: this.origin.x + this.vector.x, y: this.origin.y + this.vector.y }\r\n    }\r\n\r\n    getYbyX(x) {\r\n        if (this.b !== 0) {\r\n            let y = -(this.a * x + this.c) / this.b;\r\n            if (((x - this.origin.x) * this.vector.x) >= 0 && ((y - this.origin.y) * this.vector.y) >= 0) return y;\r\n            return NaN;\r\n        }\r\n        else return NaN;\r\n    }\r\n\r\n    getXbyY(y) {\r\n        if (this.a !== 0) {\r\n            let x = -(this.b * y + this.c) / this.a;\r\n            if (((x - this.origin.x) * this.vector.x) >= 0 && ((y - this.origin.y) * this.vector.y) >= 0) return y;\r\n            return NaN;\r\n        } else return NaN;\r\n    }\r\n\r\n}\r\n\r\nexport class Arc {\r\n    constructor(first, second, third) {\r\n        this.first = first;\r\n        this.second = second;\r\n        this.third = third;\r\n        this.chord = Math.sqrt((second.x - first.x) * (second.x - first.x) + (second.y - first.y) * (second.y - first.y));\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class Rectangle {\r\n    constructor(topLeft = new Coord2D(), bottomRight = new Coord2D()) {\r\n        this.topLeft = {};\r\n        this.bottomRight = {};\r\n        this.topLeft.x = topLeft.x > bottomRight.x ? bottomRight.x : topLeft.x;\r\n        this.topLeft.y = topLeft.y < bottomRight.y ? bottomRight.y : topLeft.y;\r\n        this.width = Math.abs(bottomRight.x - topLeft.x);\r\n        this.height = Math.abs(bottomRight.y - topLeft.y);\r\n        this.bottomRight.x = this.topLeft.x + this.width;\r\n        this.bottomRight.y = this.topLeft.y - this.height;\r\n    }\r\n\r\n}\r\n\r\nexport class Circle {\r\n    constructor(center = new Coord2D(), radius = 0) {\r\n        this.center = center;\r\n        this.radius = radius;\r\n    }\r\n\r\n}\r\n\r\nexport class Triangle {\r\n    constructor(points = [new Coord2D(), new Coord2D(), new Coord2D()]) {\r\n        this.points = points;\r\n    }\r\n    getOuterCircle() {\r\n        let line1 = Geometry.SLinePerpOnPoint(new SLine(this.points[0], this.points[1]), Geometry.midPoint(this.points[0], this.points[1]));\r\n        let line2 = Geometry.SLinePerpOnPoint(new SLine(this.points[0], this.points[2]), Geometry.midPoint(this.points[0], this.points[2]));\r\n        let p = Intersection.SLineSLine(line1, line2);\r\n        if (p === null) p = Geometry.midPoint(this.points[0], this.points[1]);\r\n        let circle = new Circle(p, Geometry.distance(p, this.points[0]));\r\n        return circle;\r\n    }\r\n\r\n}\r\n\r\nexport class Vector {\r\n    constructor(p1 = new Coord2D(), p2 = new Coord2D()) {\r\n        this.x = p2.x - p1.x;\r\n        this.y = p2.y - p1.y;\r\n        this.modulus = Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n}\r\nexport class Intersection {\r\n    static SLineSLine(line1, line2) {\r\n        let d = line1.a * line2.b - line1.b * line2.a;\r\n        if (d === 0) return null;\r\n        let d1 = -line1.c * line2.b - (-line2.c * line1.b);\r\n        let d2 = -line2.c * line1.a - (-line1.c * line2.a);\r\n        return new Coord2D(d1 / d, d2 / d);\r\n    }\r\n    static LineSLine(line, sline) {\r\n        let p = Intersection.SLineSLine(sline, new SLine(line));\r\n        if (p === null) return null;\r\n        if (!Geometry.pointOnLine(p, line.p1, line.p2)) return null;\r\n        return p;\r\n    }\r\n    static RectangleSLine(rectTopLeft, rectBottomRight, line) {\r\n        let lines = new Array(4);\r\n        let points = [];\r\n        lines[0] = new Line(rectTopLeft.x, rectTopLeft.y, rectBottomRight.x, rectTopLeft.y);\r\n        lines[1] = new Line(rectTopLeft.x, rectBottomRight.y, rectBottomRight.x, rectBottomRight.y);\r\n        lines[2] = new Line(rectTopLeft.x, rectTopLeft.y, rectTopLeft.x, rectBottomRight.y);\r\n        lines[3] = new Line(rectBottomRight.x, rectTopLeft.y, rectBottomRight.x, rectBottomRight.y);\r\n        lines.forEach(l => {\r\n            const p = Intersection.LineSLine(l, line)\r\n            if (p && points.length < 2) points.push(p);\r\n        });\r\n        return points;\r\n    }\r\n    static RectangleRLine(rectTopLeft, rectBottomRight, line) {\r\n        const ps = Intersection.RectangleSLine(rectTopLeft, rectBottomRight, Geometry.SLineFromRLine(line));\r\n        const points = [];\r\n        ps.forEach(p => { if (Geometry.isPointOnRayLine(line, p)) points.push(p) });\r\n        return points;\r\n    }\r\n    static RectangleRectangle(rectTopLeft1, rectBottomRight1, rectTopLeft2, rectBottomRight2) {\r\n        const lines1 = [new Line(rectTopLeft1.x, rectTopLeft1.y, rectBottomRight1.x, rectTopLeft1.y),\r\n        new Line(rectBottomRight1.x, rectTopLeft1.y, rectBottomRight1.x, rectBottomRight1.y),\r\n        new Line(rectTopLeft1.x, rectBottomRight1.y, rectBottomRight1.x, rectBottomRight1.y),\r\n        new Line(rectTopLeft1.x, rectTopLeft1.y, rectTopLeft1.x, rectBottomRight1.y)];\r\n        const lines2 = [new Line(rectTopLeft2.x, rectTopLeft2.y, rectBottomRight2.x, rectTopLeft2.y),\r\n        new Line(rectBottomRight2.x, rectTopLeft2.y, rectBottomRight2.x, rectBottomRight2.y),\r\n        new Line(rectTopLeft2.x, rectBottomRight2.y, rectBottomRight2.x, rectBottomRight2.y),\r\n        new Line(rectTopLeft2.x, rectTopLeft2.y, rectTopLeft2.x, rectBottomRight2.y)];\r\n        const ps = [];\r\n        lines1.forEach(l1 => {\r\n            lines2.forEach((l2) => {\r\n                const p = Intersection.LineLine(l1, l2);\r\n                if (p) ps.push(p);\r\n            })\r\n        })\r\n        return ps;\r\n    }\r\n    static LineRectangle(line, rectTopLeft, rectBottomRight) {\r\n        let lines = new Array(4);\r\n        let points = [];\r\n        lines[0] = new Line(rectTopLeft.x, rectTopLeft.y, rectBottomRight.x, rectTopLeft.y);\r\n        lines[1] = new Line(rectTopLeft.x, rectBottomRight.y, rectBottomRight.x, rectBottomRight.y);\r\n        lines[2] = new Line(rectTopLeft.x, rectTopLeft.y, rectTopLeft.x, rectBottomRight.y);\r\n        lines[3] = new Line(rectBottomRight.x, rectTopLeft.y, rectBottomRight.x, rectBottomRight.y);\r\n        lines.forEach(l => {\r\n            const p = Intersection.LineLine(line, l)\r\n            if (p && points.length < 2) points.push(p);\r\n        });\r\n        return points;\r\n    }\r\n    static LineLine(l1, l2) {\r\n        const p = Intersection.SLineSLine(new SLine(l1), new SLine(l2));\r\n        if (p) {\r\n            if (Geometry.pointOnLine(p, l1.p1, l1.p2) && Geometry.pointOnLine(p, l2.p1, l2.p2)) return p;\r\n        }\r\n        return null;\r\n    }\r\n    static CircleSLine(circle, line) {\r\n        let dx = -circle.center.x;\r\n        let dy = -circle.center.y;\r\n        let sline = Geometry.LineShifted(line, dx, dy);\r\n        let a = sline.a;\r\n        let b = sline.b;\r\n        let c = sline.c;\r\n        let r = circle.radius;\r\n        if (b === 0) {\r\n            a = sline.b;\r\n            b = sline.a;\r\n        }\r\n        let A = a * a + b * b;\r\n        let B = 2 * a * c;\r\n        let C = c * c - r * r * b * b;\r\n        let x = Geometry.QuadEquation(A, B, C);\r\n        if (x === null) return null;\r\n        let res = new Array(x.length);\r\n        for (let i = 0; i < x.length; i++) {\r\n            res[i] = new Coord2D();\r\n            if (sline.b === 0) {\r\n                res[i].y = x[i];\r\n                res[i].x = -(a * x[i] + c) / b;\r\n            } else {\r\n                res[i].x = x[i];\r\n                res[i].y = -(a * x[i] + c) / b;\r\n            }\r\n            res[i].x = res[i].x - dx;\r\n            res[i].y = res[i].y - dy;\r\n        }\r\n        return res;\r\n    }\r\n    static CircleRLine(circle, line) {\r\n        let points = Intersection.CircleSLine(circle, new SLine(line.origin, new Coord2D(line.origin.x + line.vector.x, line.origin.y + line.vector.y)));\r\n        if (points === null) return null;\r\n        let k = 0;\r\n        let i = 0;\r\n        for (let p of points) {\r\n\r\n            if (Geometry.isPointOnRayLine(line, p)) k++; else points[i] = null;\r\n            i++;\r\n        }\r\n        if (k === 0) return null;\r\n        let res = new Array(k);\r\n        k = 0;\r\n        for (let p of points) if (p != null) {\r\n            res[k++] = p;\r\n        }\r\n        return res;\r\n    }\r\n}\r\nexport default class Geometry {\r\n\r\n    static realToScreenLength(value, realWidth, viewPortWidth) {\r\n        return Math.trunc(value / (realWidth / viewPortWidth));\r\n    }\r\n    static screenToRealLength(value, realWidth, viewPortWidth) {\r\n        return Math.trunc(value * (realWidth / viewPortWidth));\r\n    }\r\n    static SLineFromRLine(line) {\r\n        return new SLine(line.origin, new Coord2D(line.origin.x + line.vector.x, line.origin.y + line.vector.y));\r\n    }\r\n    static SLineFromLine(line) {\r\n        return new SLine(line.p1, line.p2);\r\n    }\r\n    static SLineByTwoPoints(p1, p2) {\r\n        return new SLine(p1, p2);\r\n    }\r\n\r\n    static SLinePerpOnPoint(line, p) {\r\n        return new SLine(-line.b, line.a, -line.a * p.y + line.b * p.x);\r\n    }\r\n\r\n    static LineShifted(line, dx, dy) {\r\n        let p = new Array(2);\r\n        for (let i = 0; i < 2; i++) {\r\n            let x = i;\r\n            let y = line.getYbyX(x);\r\n            if (isNaN(y)) {\r\n                y = i;\r\n                x = line.getXbyY(y);\r\n            }\r\n            x = x + dx;\r\n            y = y + dy;\r\n            p[i] = new Coord2D(x, y);\r\n        }\r\n        return new SLine(p[0], p[1]);\r\n    }\r\n\r\n\r\n    static pointInRect(p, rectTopLeft, rectBottomRight, borders = true) {\r\n        let sx = (p.x - rectBottomRight.x) * (p.x - rectTopLeft.x);\r\n        let sy = (p.y - rectBottomRight.y) * (p.y - rectTopLeft.y);\r\n        let x = borders ? sx <= 0 : sx < 0\r\n        let y = borders ? sy <= 0 : sy < 0\r\n        return (x && y);\r\n    }\r\n    static pointInRectByPoints(x, y, x1, y1, x2, y2) {\r\n        if ((x >= x1 && x <= x2) && (y <= y1 && y >= y2)) return true;\r\n        return false;\r\n    }\r\n    static linesIntersection(l1, l2) {\r\n        const p = Intersection.SLineSLine(new SLine(l1), new SLine(l2));\r\n        return (Geometry.pointOnLine(p, l1.p1, l1.p2, false) && Geometry.pointOnLine(p, l2.p1, l2.p2, false));\r\n    }\r\n\r\n    static rectIntersection(rect1, rect2) {\r\n        let res = false;\r\n        res = intersect(rect1, rect2)\r\n        if (!res) { res = intersect(rect2, rect1) }\r\n        if (!res) { res = Geometry.rectIntersection2(rect1, rect2) }\r\n        if (!res) { res = Geometry.rectIntersection2(rect2, rect1) }\r\n        return res;\r\n        function intersect(r1, r2) {\r\n            if (Geometry.pointInRect(r1.topLeft, r2.topLeft, r2.bottomRight, false)) return true;\r\n            if (Geometry.pointInRect(r1.bottomRight, r2.topLeft, r2.bottomRight, false)) return true;\r\n            if (Geometry.pointInRect({ x: r1.topLeft.x, y: r1.bottomRight.y }, r2.topLeft, r2.bottomRight, false)) return true;\r\n            if (Geometry.pointInRect({ x: r1.bottomRight.x, y: r1.topLeft.y }, r2.topLeft, r2.bottomRight, false)) return true;\r\n            return false;\r\n        }\r\n    }\r\n    static rectIntersection2(rect1, rect2) {\r\n        const d = { p1: rect1.topLeft, p2: rect1.bottomRight }\r\n        const l1 = { p1: rect2.topLeft, p2: { x: rect2.topLeft.x, y: rect2.bottomRight.y } }\r\n        const l2 = { p1: rect2.topLeft, p2: { x: rect2.bottomRight.x, y: rect2.topLeft.y } }\r\n        const l3 = { p1: rect2.bottomRight, p2: { x: rect2.topLeft.x, y: rect2.bottomRight.y } }\r\n        const l4 = { p1: rect2.bottomRight, p2: { x: rect2.bottomRight.x, y: rect2.topLeft.y } }\r\n        return [\r\n            Geometry.linesIntersection(d, l1),\r\n            Geometry.linesIntersection(d, l2),\r\n            Geometry.linesIntersection(d, l3),\r\n            Geometry.linesIntersection(d, l4),\r\n        ].some(i => i);\r\n    }\r\n\r\n    static rectInRect(innerRect, outerRect) {\r\n        return [\r\n            Geometry.pointInRect(innerRect.topLeft, outerRect.topLeft, outerRect.bottomRight, true),\r\n            Geometry.pointInRect({ x: innerRect.topLeft.x, y: innerRect.bottomRight.y }, outerRect.topLeft, outerRect.bottomRight, true),\r\n            Geometry.pointInRect({ x: innerRect.bottomRight.x, y: innerRect.topLeft.y }, outerRect.topLeft, outerRect.bottomRight, true),\r\n            Geometry.pointInRect(innerRect.bottomRight, outerRect.topLeft, outerRect.bottomRight, true),\r\n        ].every(p => p);\r\n    }\r\n    static rectToRectDist(rect1, rect2) {\r\n        const c1 = { x: (rect1.topLeft.x + rect1.bottomRight.x) / 2, y: (rect1.topLeft.y + rect1.bottomRight.y) / 2 }\r\n        const c2 = { x: (rect2.topLeft.x + rect2.bottomRight.x) / 2, y: (rect2.topLeft.y + rect2.bottomRight.y) / 2 }\r\n        return Geometry.distance(c1, c2)\r\n    }\r\n    static minPointToRectDist(p, rect) {\r\n        var left = Math.abs(p.x - rect.topLeft.x)\r\n        var right = Math.abs(p.x - rect.bottomRight.x)\r\n        var top = Math.abs(p.y - rect.topLeft.y)\r\n        var bottom = Math.abs(p.y - rect.bottomRight.y)\r\n        const dx = { dist: Math.min(left, right), posX: left < right ? rect.topLeft.x : rect.bottomRight.x }\r\n        const dy = { dist: Math.min(top, bottom), posY: top < bottom ? rect.topLeft.y : rect.bottomRight.y }\r\n        return { dx, dy };\r\n    }\r\n\r\n    static minRectDist(rect1, rect2, outer = true) {\r\n        function isOverlapped(line1, line2) {\r\n            let d = Math.max(line1.p1, line1.p2, line2.p1, line2.p2) - Math.min(line1.p1, line1.p2, line2.p1, line2.p2)\r\n            return d < (Math.abs(line1.p1 - line1.p2) + Math.abs(line2.p1 - line2.p2))\r\n        }\r\n        let dx = { dist: NaN }, dy = { dist: NaN };\r\n        if (isOverlapped({ p1: rect1.topLeft.y, p2: rect1.bottomRight.y }, { p1: rect2.topLeft.y, p2: rect2.bottomRight.y })) {\r\n            let dxFront = outer ? rect2.bottomRight.x - rect1.topLeft.x : rect1.topLeft.x - rect2.topLeft.x\r\n            let dxBack = outer ? rect2.topLeft.x - rect1.bottomRight.x : rect2.bottomRight.x - rect1.bottomRight.x\r\n            dx.front = Math.abs(dxFront) < Math.abs(dxBack)\r\n            if (outer) dx.pos = dx.front ? rect2.bottomRight.x : rect2.topLeft.x; else dx.pos = dx.front ? rect2.topLeft.x : rect2.bottomRight.x;\r\n            dx.dist = dx.front ? dxFront : dxBack\r\n        }\r\n        if (isOverlapped({ p1: rect1.topLeft.x, p2: rect1.bottomRight.x }, { p1: rect2.topLeft.x, p2: rect2.bottomRight.x })) {\r\n            let dyFront = outer ? rect2.bottomRight.y - rect1.topLeft.y : rect2.topLeft.y - rect1.topLeft.y\r\n            let dyBack = outer ? rect2.topLeft.y - rect1.bottomRight.y : rect2.bottomRight.y - rect1.bottomRight.y\r\n            dy.front = Math.abs(dyFront) < Math.abs(dyBack)\r\n            if (outer) dy.pos = dy.front ? rect2.bottomRight.y : rect2.topLeft.y; else dy.pos = dy.front ? rect2.topLeft.y : rect2.bottomRight.y;\r\n            dy.dist = dy.front ? dyFront : dyBack\r\n        }\r\n        return { dx, dy }\r\n    }\r\n    static pointOnLine(p, p1, p2, includeTips = true) {\r\n        if (!p || !p1 || !p2) return false;\r\n        const sx = Math.round((p.x - p1.x) * (p.x - p2.x) * 100000) / 100000;\r\n        const sy = Math.round((p.y - p1.y) * (p.y - p2.y) * 100000) / 100000;\r\n        const res = includeTips ? (sx <= 0 && sy <= 0) : ((sx < 0 && sy <= 0) || (sx <= 0 && sy < 0))\r\n        return res;\r\n    }\r\n\r\n    static pointOnSLineProjection(p, line) {\r\n        return Intersection.SLineSLine(line, Geometry.SLinePerpOnPoint(line, p));\r\n    }\r\n    static PointToSLineDistance(p, line) {\r\n        let res = Geometry.distance(p, Geometry.pointOnSLineProjection(p, line));\r\n        return res;\r\n    }\r\n\r\n    static PointToRLineDistance(p, line) {\r\n        let point = Geometry.pointOnSLineProjection(p, Geometry.SLineFromRLine(line));\r\n        let res;\r\n        if (Geometry.isPointOnRayLine(line, point)) res = Geometry.distance(p, point); else res = Geometry.distance(p, line.origin);\r\n        return res;\r\n    }\r\n    static PointToLineDistance(p, line) {\r\n        let point = Geometry.pointOnSLineProjection(p, Geometry.SLineFromLine(line));\r\n        let res;\r\n        if (Geometry.pointOnLine(point, line.p1, line.p2)) res = Geometry.distance(p, point);\r\n        else res = Math.min(Geometry.distance(p, line.p1), Geometry.distance(p, line.p2));\r\n        return res;\r\n    }\r\n    static midPoint(p1, p2) {\r\n        return { x: (p2.x + p1.x) / 2, y: (p2.y + p1.y) / 2 };\r\n    }\r\n\r\n    static scalar(v1, v2) {\r\n        return v1.x * v2.x + v1.y * v2.y;\r\n    }\r\n\r\n    static modulus(v) {\r\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n    }\r\n\r\n    static angleVectors(v1, v2) {\r\n        const sign = Math.sign(v1.x * v2.y - v2.x * v1.y)\r\n        //return Math.atan((v1.x*v2.y - v1.y*v2.x) / (v1.x*v2.x + v1.y*v2.y))\r\n        //return Math.atan2(v.y,v.x)\r\n        return Math.acos(this.scalar(v1, v2) / (v1.modulus * v2.modulus)) * sign;\r\n    }\r\n\r\n    static arcCenterPoint(p1, p2, p3) {\r\n        let line1 = new SLine(p1, p2);\r\n        let line2 = new SLine(p2, p3);\r\n        let midp1 = Geometry.midPoint(p1, p2);\r\n        let midp2 = Geometry.midPoint(p2, p3);\r\n        let pline1 = Geometry.SLinePerpOnPoint(line1, midp1);\r\n        let pline2 = Geometry.SLinePerpOnPoint(line2, midp2);\r\n        return Intersection.SLineSLine(pline1, pline2);\r\n    }\r\n\r\n    static isPointOnRayLine(line, point) {\r\n        return (((point.x - line.origin.x) * line.vector.x) >= 0 && ((point.y - line.origin.y) * line.vector.y) >= 0);\r\n    }\r\n\r\n    static arcMiddlePoint(arc) {\r\n        let mp = Geometry.midPoint(arc.first, arc.third);\r\n        let m = Math.sqrt((mp.x - arc.center.x) * (mp.x - arc.center.x) + (mp.y - arc.center.y) * (mp.y - arc.center.y));\r\n        return new Coord2D(arc.radius / m + arc.center.x, arc.radius / m + arc.center.y);\r\n    }\r\n\r\n    static arcToPointArray(arc, limit) {\r\n        if (arc.chord <= limit) {\r\n            let res = new Array(2);\r\n            res[0] = arc.first;\r\n            res[1] = arc.third;\r\n            return res;\r\n        }\r\n        let mp = Geometry.arcMiddlePoint(arc);\r\n        let first = Geometry.arcToPointArray(Geometry.arcByTwoPointsCenter(arc.first, mp, arc.center), limit);\r\n        let second = Geometry.arcToPointArray(Geometry.arcByTwoPointsCenter(mp, arc.third, arc.center), limit);\r\n        let len = first.length - 1 + second.length;\r\n        let res = new Array(len);\r\n        for (let i = 0; i <= len; i++) {\r\n            if (i < first.length - 1) res[i] = first[i];\r\n            else res[i] = second[i];\r\n        }\r\n        return res;\r\n    }\r\n\r\n    static arcByTwoPointsCenter(p1, p2, c) {\r\n        let mp = Geometry.midPoint(p1, p2);\r\n        let m = Math.sqrt((mp.x - c.x) * (mp.x - c.x) + (mp.y - c.y) * (mp.y - c.y));\r\n        let r = Math.sqrt((p1.x - c.x) * (p1.x - c.x) + (p1.y - c.y) * (p1.y - c.y));\r\n        return new Arc(p1, new Coord2D(r / m + c.x, r / m + c.y), p2);\r\n    }\r\n\r\n    static arcLength(arc) {\r\n        let v1 = new Vector(arc.center, arc.first);\r\n        let v2 = new Vector(arc.center, arc.third);\r\n        let a = Geometry.angleVectors(v1, v2);\r\n        return a * arc.radius;\r\n    }\r\n\r\n    static QuadEquation(a, b, c) {\r\n        if (a === 0) return null;\r\n        let d = b * b - 4 * a * c;\r\n        if (d < 0) return null;\r\n        let res = [];\r\n        if (d === 0) {\r\n            res = [];\r\n            res[0] = -b / (2 * a);\r\n            return res;\r\n        }\r\n        res = [];\r\n        res[0] = (-b + Math.sqrt(d)) / (2 * a);\r\n        res[1] = (-b - Math.sqrt(d)) / (2 * a);\r\n        return res;\r\n    }\r\n    static distance(p1, p2) {\r\n        return Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y));\r\n    }\r\n    static rotatePoint(point, angle, center) {\r\n        let p = { x: point.x - center.x, y: point.y - center.y };\r\n        let res = {};\r\n        res.x = p.x * Math.cos(angle) - p.y * Math.sin(angle) + center.x;\r\n        res.y = p.x * Math.sin(angle) + p.y * Math.cos(angle) + center.y;\r\n        return res;\r\n    }\r\n    static screenToReal(x, y, viewPortWidth, viewPortHeight, topLeft, bottomRight) {\r\n        let realWidth = bottomRight.x - topLeft.x;\r\n        let realHeight = topLeft.y - bottomRight.y;\r\n        let rx = x / viewPortWidth * realWidth + topLeft.x;\r\n        let ry = topLeft.y - y / viewPortHeight * realHeight;\r\n        return { x: rx, y: ry };\r\n    }\r\n    static realToScreen(point, realRect, screenRect) {\r\n        let ratio = realRect.width / screenRect.width;\r\n        let x = Math.trunc((point.x - realRect.topLeft.x) / ratio);\r\n        let y = -Math.trunc((point.y - realRect.topLeft.y) / ratio);\r\n        return { x, y };\r\n    }\r\n}\r\n\r\n\r\n","import { Rectangle } from \"../utils/geometry\";\r\n\r\nexport function getPoint(e) {\r\n  let rect = e.target.getBoundingClientRect();\r\n  return { x: e.clientX - rect.left, y: e.clientY - rect.top };\r\n}\r\n\r\nexport function scale(factor, anchor, viewPortData) {\r\n  const { realWidth, viewPortWidth, viewPortHeight, topLeft } = viewPortData;\r\n  const rw = realWidth * factor;\r\n  var gridStep = viewPortData.gridStep;\r\n  const pixelRatio = rw / viewPortWidth;\r\n  const realHeight = viewPortHeight * pixelRatio;\r\n  var dx = anchor.x - topLeft.x;\r\n  var dy = anchor.y - topLeft.y;\r\n  if (realHeight < 500) return { ...viewPortData };\r\n  dx = dx * factor;\r\n  dy = dy * factor;\r\n  //new topLeft\r\n  const tl = { x: anchor.x - dx, y: anchor.y - dy };\r\n  const br = {};\r\n  br.x = tl.x + rw;\r\n  br.y = tl.y - realHeight;\r\n  //new gridStep\r\n  if (gridStep / pixelRatio < 10) {\r\n    if (gridStep < 1000000) gridStep = gridStep * 10;\r\n  } else if (gridStep / pixelRatio > 100)\r\n    if (gridStep > 0.001) gridStep = gridStep / 10;\r\n  const gridStepPixels = Math.round(gridStep / pixelRatio);\r\n  return {\r\n    ...viewPortData,\r\n    realWidth: rw,\r\n    realHeight,\r\n    topLeft: tl,\r\n    bottomRight: br,\r\n    pixelRatio,\r\n    gridStepPixels,\r\n    gridStep,\r\n  };\r\n}\r\n\r\nexport function setCurCoord(realPoint, screenPoint, viewPortData) {\r\n  return {\r\n    ...viewPortData,\r\n    curRealPoint: realPoint,\r\n    curScreenPoint: screenPoint,\r\n  };\r\n}\r\n\r\nexport function setTopLeft(topLeft, viewPortData) {\r\n  var bottomRight = {};\r\n  bottomRight.x = topLeft.x + viewPortData.realWidth;\r\n  bottomRight.y = topLeft.y - viewPortData.realHeight;\r\n  return { ...viewPortData, topLeft, bottomRight };\r\n}\r\nexport function getRealRect(topLeft, bottomRight) {\r\n  let realRect = new Rectangle();\r\n  realRect.topLeft = topLeft;\r\n  realRect.bottomRight = bottomRight;\r\n  realRect.width = bottomRight.x - topLeft.x;\r\n  realRect.height = topLeft.y - bottomRight.y;\r\n  return realRect;\r\n}\r\n\r\nexport function getScreenRect(viewPortWidth, viewPortHeight) {\r\n  let screenRect = new Rectangle();\r\n  screenRect.topLeft.x = 0;\r\n  screenRect.topLeft.y = 0;\r\n  screenRect.width = viewPortWidth;\r\n  screenRect.height = viewPortHeight;\r\n  return screenRect;\r\n}\r\n\r\nexport function getRealAndScreenRect(viewPortData) {\r\n  return {\r\n    realRect: getRealRect(viewPortData.topLeft, viewPortData.bottomRight),\r\n    screenRect: getScreenRect(viewPortData.viewPortWidth, viewPortData.viewPortHeight)\r\n  }\r\n}\r\n\r\nexport function setDimensions(width, height, realWidth, viewPortData) {\r\n  const rh = (height * realWidth) / width;\r\n  return {\r\n    ...viewPortData,\r\n    viewPortWidth: width,\r\n    viewPortHeight: height,\r\n    realWidth: realWidth,\r\n    ratio: width / height,\r\n    pixelRatio: realWidth / viewPortData.viewPortWidth,\r\n    realHeight: rh,\r\n    bottomRight: {\r\n      x: viewPortData.topLeft.x + realWidth,\r\n      y: viewPortData.topLeft.y - rh,\r\n    },\r\n  };\r\n}\r\n\r\nexport function zoomToRect({ topLeft, bottomRight }, viewPortData) {\r\n  const rectHeight = topLeft.y - bottomRight.y\r\n  const rectWidth = bottomRight.x - topLeft.x\r\n  const ratio = rectWidth / rectHeight\r\n  const realWidth = ratio < viewPortData.ratio ? rectHeight * viewPortData.ratio : rectWidth\r\n\r\n  const newViewPortData = setDimensions(viewPortData.viewPortWidth, viewPortData.viewPortHeight, realWidth, viewPortData);\r\n  const point = {\r\n    x: (topLeft.x + bottomRight.x) / 2,\r\n    y: (topLeft.y + bottomRight.y) / 2,\r\n  };\r\n  let viewPortWidth = newViewPortData.realWidth - (newViewPortData.marginLeft + newViewPortData.marginRight) * newViewPortData.pixelRatio;\r\n  let viewPortHeight = newViewPortData.realHeight - (newViewPortData.marginTop + newViewPortData.marginBottom) * newViewPortData.pixelRatio;\r\n  const tl = {\r\n    x: point.x - viewPortWidth / 2 - newViewPortData.marginLeft * newViewPortData.pixelRatio,\r\n    y: point.y + viewPortHeight / 2 + newViewPortData.marginTop * newViewPortData.pixelRatio,\r\n  };\r\n  const br = {};\r\n  br.x = tl.x + newViewPortData.realWidth;\r\n  br.y = tl.y - newViewPortData.realHeight;\r\n  return { ...newViewPortData, topLeft: tl, bottomRight: br };\r\n}\r\n\r\nexport function addWindowListeners(viewPortData, setViewPortData, appActions, canvas) {\r\n  document.getElementById(\"spinner\").style.display = \"none\";\r\n  const { sw, sh } = resize(viewPortData, setViewPortData, canvas);\r\n  setViewPortData((prevData) => setDimensions(sw, sh, 10000, prevData));\r\n  //setViewPortData((prevData) => scale(2, { x: 0, y: 0 }, prevData));\r\n\r\n\r\n  document.body.oncontextmenu = () => true;\r\n  document.addEventListener(\"load\", () => {\r\n    ///zoomToTable({topLeft:{x: 0, y: 2400}, bottomRight: {x: 3000, y: 0}}, viewPortData)\r\n  });\r\n  window.addEventListener(\"resize\", () => {\r\n    resize(viewPortData, setViewPortData, canvas);\r\n  });\r\n  window.addEventListener(\"scroll\", () => {\r\n    if (window.scrollY >= 10) {\r\n      document.getElementById(\"goTop\").style.display = \"block\";\r\n      const listener = document\r\n        .getElementById(\"goTop\")\r\n        .addEventListener(\"click\", (e) => {\r\n          window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n          e.target.removeEventListener(\"click\", listener);\r\n        });\r\n    }\r\n    if (window.scrollY < 10) {\r\n      document.getElementById(\"goTop\").style.display = \"none\";\r\n    }\r\n  });\r\n}\r\n\r\nfunction resize(viewPortData, setViewPortData, canvas) {\r\n  const wHeight = window.innerHeight;\r\n  const cont = document.getElementById(\"canvas-container\")\r\n  const style = getComputedStyle(cont)\r\n  const sw = Number.parseInt(style.width);\r\n  let sh =\r\n    window.innerHeight <= window.innerWidth\r\n      ? wHeight * 0.8\r\n      : sw\r\n  setViewPortData((prevData) =>\r\n    setDimensions(sw, sh, prevData.realWidth, prevData)\r\n  );\r\n  canvas.width = sw;\r\n  canvas.height = sh;\r\n  canvas.style.width = sw + \"px\";\r\n  canvas.style.height = sh + \"px\";\r\n  return { sw, sh };\r\n}\r\n","import Geometry from \"../utils/geometry\";\r\nimport { scale } from \"../functions/viewPortFunctions\";\r\nexport class MouseHandler {\r\n    static MBUTTON_LEFT = 0\r\n    static MBUTTON_MIDDLE = 1\r\n    static MBUTTON_RIGHT = 2\r\n    constructor(state){\r\n        this.isMobile = state.isMobile\r\n        this.clickCount = 0;\r\n        this.curShape = null;\r\n        this.coord = {x: 0, y: 0}\r\n        this.prevCoord = this.coord\r\n        this.statusBar = [];\r\n        this.properties = [];\r\n        this.captions = (state||state.captions)?state.captions.toolbars.statusbar:{}\r\n\r\n    }\r\n    setCaptions(captions){\r\n        this.captions = captions\r\n        this.setStatusBar()\r\n    }\r\n    keypress(code){\r\n        if(code === \"Space\"){\r\n            return true;\r\n        }\r\n    }\r\n    click({button, curPoint, viewPortData}){\r\n        this.clickCount++;\r\n        this.coord = Geometry.screenToReal(curPoint.x, curPoint.y, viewPortData.viewPortWidth, viewPortData.viewPortHeight, viewPortData.topLeft, viewPortData.bottomRight);\r\n        this.prevCoord = this.coord\r\n    }\r\n    doubleClick({button, curPoint, viewPortData}){\r\n        this.coord = Geometry.screenToReal(curPoint.x, curPoint.y, viewPortData.viewPortWidth, viewPortData.viewPortHeight, viewPortData.topLeft, viewPortData.bottomRight);\r\n    }\r\n    isOutRect(p, viewPortData){\r\n        return p.x < viewPortData.marginLeft || p.x > viewPortData.viewPortWidth - viewPortData.marginRight\r\n         ||p.y < viewPortData.marginTop || p.y > viewPortData.viewPortHeight - viewPortData.marginBottom;\r\n     }\r\n     move({curPoint, viewPortData}){\r\n        this.prevPoint={...this.curPoint}\r\n        this.curPoint={...curPoint}\r\n        this.coord = Geometry.screenToReal(this.curPoint.x, this.curPoint.y, viewPortData.viewPortWidth, viewPortData.viewPortHeight, viewPortData.topLeft, viewPortData.bottomRight);\r\n        this.coord.x = Math.trunc(this.coord.x);\r\n        this.coord.y = Math.trunc(this.coord.y);\r\n        this.mouseOnScreen = !this.isOutRect(this.curPoint, viewPortData);\r\n        if(!this.mouseOnScreen){\r\n            this.curPoint.x=this.prevPoint.x;\r\n            this.curPoint.y=this.prevPoint.y;\r\n        }\r\n     }\r\n     mouseOnScreen(viewPortData){\r\n         return !this.isOutRect(this.curPoint, viewPortData);\r\n     }\r\n     down({curPoint, viewPortData}){\r\n        this.coord=Geometry.screenToReal(curPoint.x, curPoint.y, viewPortData.viewPortWidth, viewPortData.viewPortHeight, viewPortData.topLeft, viewPortData.bottomRight);\r\n     }\r\n     up(){}\r\n     leave(){\r\n         this.mouseOnScreen = false;\r\n     }\r\n     wheel({deltaY, curPoint, viewPortData, setViewPortData, appActions, keys}){\r\n        let point = Geometry.screenToReal(curPoint.x, curPoint.y, viewPortData.viewPortWidth, viewPortData.viewPortHeight, viewPortData.topLeft, viewPortData.bottomRight);\r\n        if((deltaY > 0) && (viewPortData.realWidth <= 9000)) setViewPortData(prevData => scale(1.2, point, prevData))\r\n        if((deltaY < 0) && (viewPortData.pixelRatio >= 0.001)) setViewPortData(prevData => scale(1/1.2, point, prevData));\r\n     }\r\n     touchDown({pointerId, curPoint, viewPortData}){\r\n        viewPortData.touchManager.addTouchEvent({pointerId, curPoint})\r\n        //this.touchEvents.push({pointerId, curPoint})\r\n\r\n     }\r\n     touchMove({pointerId, curPoint, viewPortData}){\r\n        viewPortData.touchManager.setPoint(pointerId, curPoint)\r\n        this.curPoint = {...curPoint}\r\n        this.coord = Geometry.screenToReal(this.curPoint.x, this.curPoint.y, viewPortData.viewPortWidth, viewPortData.viewPortHeight, viewPortData.topLeft, viewPortData.bottomRight);\r\n\r\n     }\r\n     touchUp({pointerId, viewPortData}){\r\n        viewPortData.touchManager.removeTouchEvent(pointerId)\r\n\r\n     }\r\n    }","export const Color={\r\n    BLUE:\"#0000FF\",\r\n    BLACK:\"#000000\",\r\n    GRAY:\"#D0D0D0\",\r\n    LIGHT_GRAY:\"#EEEEEE\",\r\n    DARK_GRAY:\"#505050\",\r\n    RED:\"#FF0000\",\r\n    DARK_ORANGE:\"#FFB000\",\r\n    GREEN:\"#00FF00\",\r\n    WHITE:\"#FFFFFF\",\r\n    SELECTED:\"#0000FF\",\r\n    SELECTION_AREA:'#000000',\r\n    GRID:\"#E0E0E0\",\r\n    SELECTED_POINT_MARKER:\"#FF0000\",\r\n    POINT_MARKER:\"#0000FF\",\r\n}","import { Color } from \"../colors\";\r\n\r\nexport default class ShapeStyle {\r\n    static DASH=[1,3];\r\n    static SOLID=[0];\r\n    static SELECTION=[1,3];\r\n    static ACTIVE_SHAPE=new ShapeStyle(Color.BLACK,ShapeStyle.SOLID,2);\r\n    static INACTIVE_SHAPE=new ShapeStyle(Color.BLACK,ShapeStyle.SOLID,1);\r\n    static MockShape=new ShapeStyle(Color.DARK_GRAY,ShapeStyle.SOLID);\r\n    static GRID_STYLE_DASH = new ShapeStyle(Color.GRAY, ShapeStyle.DASH);\r\n    static GRID_STYLE_SOLID = new ShapeStyle(Color.GRAY, ShapeStyle.SOLID);\r\n    constructor(color=Color.BLACK,stroke=ShapeStyle.SOLID,width=1){\r\n        this.color=color;\r\n        this.originColor=this.color;\r\n        this.width=width;\r\n        this.stroke=stroke;\r\n\r\n    }\r\n    getDefault(){\r\n        return new ShapeStyle(Color.BLACK,ShapeStyle.SOLID);\r\n    }\r\n    getColor() {\r\n        return this.color;\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n    }\r\n    getType(){return this.type;}\r\n    getStroke() {\r\n        return this.stroke;\r\n    }\r\n\r\n    setStroke(stroke) {\r\n        this.stroke = stroke;\r\n    }\r\n    getWidth(){\r\n        return this.width;\r\n    }\r\n    setWidth(width){\r\n        this.width=width;\r\n    }\r\n\r\n}","import { Color } from '../colors';\r\nimport ShapeStyle from './ShapeStyle';\r\nexport default class Shape {\r\n    static PANEL = \"PANEL\"\r\n    static DOUBLE_PANEL = \"DOUBLE_PANEL\"\r\n    static DIMENSION = \"DIMENSION\"\r\n    static DRAWER = \"DRAWER\"\r\n    static TUBE = \"TUBE\"\r\n    static FASADE = \"FASADE\"\r\n    \r\n    constructor() {\r\n        this.style = new ShapeStyle(Color.BLACK, ShapeStyle.SOLID);\r\n        this.selectedStyle = new ShapeStyle(Color.SELECTED, ShapeStyle.SOLID, 3);\r\n        this.highlightedStyle = new ShapeStyle(Color.BLACK, ShapeStyle.SOLID, 3);\r\n        this.errorStyle = new ShapeStyle(Color.RED, ShapeStyle.SOLID)\r\n        this.defaultStyle = new ShapeStyle(Color.BLACK, ShapeStyle.SOLID, 1)\r\n        this.state = { selected: false, inSelection: false, underCursor: false, highlighted: false };\r\n        this.properties = [];\r\n\r\n    }\r\n\r\n    getProperties(){\r\n        this.properties.forEach(p => p.value = this[p.key])\r\n        return this.properties\r\n      }\r\n    setProperty({key, value}){\r\n        this[key] = value\r\n    }\r\n    refreshStyle(ctx) {\r\n        this.setState(this.state)\r\n        ctx.strokeStyle = this.getStyle().getColor();\r\n        ctx.fillStyle = this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth = this.getStyle().getWidth();\r\n    }\r\n    draw(ctx, realRect, screenRect) {\r\n        this.refresh(realRect, screenRect);\r\n        this.refreshStyle(ctx)\r\n    }\r\n\r\n    hasChildren(){\r\n        return false\r\n    }\r\n    setColor(color) {\r\n        this.style.setColor(color);\r\n        this.fillStyle = color\r\n    }\r\n    getColor() {\r\n        return this.style.getColor();\r\n    }\r\n    getStyle() {\r\n        return this.style;\r\n    }\r\n\r\n    setStyle(style) {\r\n        this.style = style;\r\n\r\n    }\r\n\r\n    setFillStyle(fill) {\r\n        this.fillStyle = fill;\r\n    }\r\n    onAddToSelection(){\r\n        this.state.selected = true\r\n      }\r\n      \r\n    onDeleteFromSelection(){\r\n        this.state.selected = false\r\n    }\r\n    setState(state) {\r\n        this.state = { ...this.state, ...state };\r\n        if (this.state.selected === true) {\r\n            this.setStyle(this.selectedStyle);\r\n            \r\n            return;\r\n        } else {\r\n            this.setStyle(this.defaultStyle);\r\n            if (this.state.highlighted) this.setStyle(this.highlightedStyle)\r\n        }\r\n        if (this.state.highlighted) this.setStyle(this.highlightedStyle);\r\n        if (this.state.error) this.setStyle(this.errorStyle);\r\n    }\r\n    getState() {\r\n        return this.state;\r\n    }\r\n    getSingleDimensionData(){\r\n\r\n        return {hasDimension: false}\r\n      }\r\n}","import Shape from \"../Shape\";\r\nimport Geometry from \"../../../utils/geometry\";\r\n\r\nexport default class Cursor extends Shape{\r\n    constructor(point){\r\n        super();\r\n        this.p=point;\r\n    }\r\n\r\n    refresh(realRect,  screenRect){\r\n        this.p0 = Geometry.realToScreen(this.p,realRect,screenRect);\r\n    }\r\n    setPosition(point) {\r\n        this.p=point;\r\n    }\r\n    setAdditional({shiftKey,altKey}){\r\n        this.shiftKey=shiftKey;\r\n        this.altKey=altKey;\r\n    }\r\n}\r\n","import Cursor from \"./Cursor\";\r\n\r\nexport default class SelectCursor extends Cursor{\r\n\r\n    draw(ctx, realRect,  screenRect){\r\n        this.refresh(realRect,screenRect);\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=2//this.getStyle().getWidth();\r\n        let size=10;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x-size+0.5,this.p0.y+0.5);\r\n        ctx.lineTo(this.p0.x+size+0.5,this.p0.y+0.5);\r\n        ctx.moveTo(this.p0.x+0.5,this.p0.y-size+0.5);\r\n        ctx.lineTo(this.p0.x+0.5,this.p0.y+size+0.5);\r\n        ctx.stroke();\r\n    }\r\n}\r\n","export const Status = {\r\n    FREE: 'FREE',\r\n    SELECT: 'SELECT',\r\n    CREATE: 'CREATE',\r\n    DRAWING: 'DRAWING',\r\n    CANCEL: 'CANCEL',\r\n    PAN: 'PAN',\r\n    MEASURE: 'MEASURE',\r\n}\r\n\r\nexport const getNewDate = ()=>{\r\n    return new Date().toISOString().substr(0, 10)\r\n}\r\n\r\n\r\nexport function isMobile(){\r\n    return (navigator.maxTouchPoints > 1) \r\n}\r\n\r\n\r\n\r\n","export const PlaceErrorMessages = {\r\n    OUTSIDE_AREA: 'OUT_OF_AREA',\r\n    ON_PANEL:'ON_PANEL',\r\n    NO_JOINTS:'NO_JOINTS',\r\n    DONT_FIT:'DONT_FIT'\r\n};","import { PlaceErrorMessages } from '../components/shapes/PlaceErrors.js'\r\nimport messages from '../messages.js'\r\n\r\nexport const captions = {\r\n  \"user\": { \"name\": \"Guest\" },\r\n  \"about\": {\r\n    \"name\": \"Автор: Тахмазов Борис\",\r\n    \"email\": \"tboris1983@gmail.com\"\r\n  },\r\n  \"buttons\": {\r\n    \"cancel\": \"Отмена\",\r\n    \"logout\": \"Выход\",\r\n    \"login\": \"Войти\",\r\n    \"signup\": \"Создать аккаунт\",\r\n  },\r\n  \"serverMessages\": {\r\n    [messages.NO_ERROR]: \"\",\r\n    [messages.ACTIVATION_SUCCEED]: \"Активация прошла успешно\",\r\n    [messages.EMAIL_SEND_ERROR]: \"Ошибка при отправке e-mail\",\r\n    [messages.INVALID_ACTIVATION_CODE]: \"Неверный код активации\",\r\n    [messages.INVALID_EMAIL]: \"E-mail неверного формата\",\r\n    [messages.INVALID_NAME]: \"Имя содержит некорректные символы или слишком короткое\",\r\n    [messages.INVALID_PASSWORD]: \"Пароль содержит некорректные символы или слишком короткий\",\r\n    [messages.INVALID_USER_DATA]: \"Неправильные имя, e-mail или пароль\",\r\n    [messages.LOGIN_SUCCEED]: \"Вход выполнен\",\r\n    [messages.NO_ACTIVATED]: \"Пользователь не активирован\",\r\n    [messages.PASSWORDS_NOT_MATCH]: \"Пароли не совпадают\",\r\n    [messages.REG_SUCCEED]: \"Регистрация прошла успешно. Введите код активации из полученного e-mail\",\r\n    [messages.SERVER_ERROR]: \"Ошибка сервера\",\r\n    [messages.USER_EMAIL_ALLOWED]: \"E-mail свободен\",\r\n    [messages.USER_EMAIL_EXIST]: \"E-mail уже зарегистрирован\",\r\n    [messages.USER_NAME_ALLOWED]: \"Имя свободно\",\r\n    [messages.USER_NAME_EXIST]: \"Имя уже зарегистрировано\",\r\n    [messages.USER_EMAIL_NOT_EXIST]: \"E-mail не существует\"\r\n  },\r\n  \"registerForm\": {\r\n    \"title\": \"Регистрация\",\r\n    \"name\": \"Имя (мин. 4 символа)\",\r\n    \"email\": \"E-Mail\",\r\n    \"password\": \"Пароль (мин. 6 символов)\",\r\n    \"passwordAgain\": \"Пароль повторно\",\r\n    \"login\": \"Вход\",\r\n    \"cancel\": \"Отмена\",\r\n    \"showPass\": \"Показать пароль\",\r\n    \"checkName\": \"Проверить имя\",\r\n    \"checkEmail\": \"Проверить e-mail\"\r\n  },\r\n  \"loginForm\": {\r\n    \"title\": \"Вход\",\r\n    \"name\": \"Имя или E-mail\",\r\n    \"password\": \"Пароль\",\r\n    \"showPass\": \"Показать пароль\",\r\n    \"cancel\": \"Отмена\",\r\n    \"register\": \"Регистрация\",\r\n    \"remember\": \"Запомнить\"\r\n  },\r\n  \"activation\": {\r\n    \"title\": \"Активация\",\r\n    \"placeholder\": \"Введите код активации\"\r\n  },\r\n  \"toolbars\": {\r\n    \"hide\": \"Свернуть\",\r\n    \"unhide\": \"Развернуть\",\r\n    \"project\": {\r\n      \"title\": \"Проект\",\r\n      \"new\": \"Новый проект\",\r\n      \"open\": \"Открыть проект\",\r\n      \"save\": \"Сохранить проект\",\r\n      \"preview\": \"Печать отчета\",\r\n      \"savePdf\": \"Сохранить отчет\",\r\n      \"disabled\": \"\",\r\n      \"-disabled\": \" (недоступно для неавторизованных пользователей)\",\r\n      \"wardrobe\": {\r\n        \"width\": \"Ширина\",\r\n        \"depth\": \"Глубина\",\r\n        \"height\": \"Высота\",\r\n        \"type\":{\r\n          \"type\": \"Тип\",\r\n          \"single\": \"Одинарный\",\r\n          \"double\": \"Двойной\",\r\n        },\r\n        \"fasadeCount\": \"Кол-во фасадов\"\r\n      }\r\n    },\r\n    \"info\": {\r\n      \"title\": \"Общая информация\",\r\n      \"wardrobe\": {\r\n        \"title\": \"Габариты\",\r\n        \"width\": \"Ширина\",\r\n        \"depth\": \"Глубина\",\r\n        \"height\": \"Высота\",\r\n      },\r\n      \"materials\": {\r\n        \"title\": \"Материалы\",\r\n        \"dspMainColor\": \"Цвет корпуса ДСП\",\r\n        \"fasadBase\": \"Основа фасадов\",\r\n        \"fasadBaseColor\": \"Цвет фасадов\",\r\n        \"depth\": \"Глубина\",\r\n        \"height\": \"Высота\",\r\n        \"combi\": \"Комби\",\r\n        \"fasadBases\" : {\r\n          \"DSP\": \"ДСП\",\r\n          \"MIRROR\": \"Зеркало\",\r\n          \"SAND\": \"Песок\",\r\n          \"LACOBEL\": \"Лакобель\",\r\n        }\r\n      }\r\n\r\n    },\r\n    \"instruments\": {\r\n      \"title\": \"Детали\",\r\n      \"dimensions\": \"Размеры\",\r\n      \"createVertical\": \"Добавить вертикальную деталь\",\r\n      \"createHorizontal\": \"Добавить горизонтальную деталь\",\r\n      \"createDrawer\": \"Добавить ящик\",\r\n      \"createDrawerBlock\": \"Добавить ящичный блок\",\r\n      \"createTube\": \"Добавить трубу\",\r\n      \"createSingleDimension\": \"Добавить размер для одной детали\",\r\n      \"createTwoPanelDimensionInside\": \"Добавить размер между деталями изнутри\",\r\n      \"createTwoPanelDimensionOutside\": \"Добавить размер между деталями снаружи\",\r\n      \"divideFasadHor\": \"Разделить фасад по высоте\",\r\n      \"divideFasadVert\": \"Разделить фасад по ширине\",\r\n      \"createFasadeLengthDimension\": \"Добавить размер фасада по высоте\",\r\n      \"createFasadeWidthDimension\": \"Добавить размер фасада по ширине\",\r\n    },\r\n    \"operations\":{\r\n      \"title\": \"Операции\",\r\n      \"moveLeft\": \"Двигать влево\",\r\n      \"moveRight\": \"Двигать вправо\",\r\n      \"moveUp\": \"Двигать вверх\",\r\n      \"moveDown\": \"Двигать вниз\",\r\n      \"resetView\": \"Центрировать вид\",\r\n      \"distribute\": \"Расставить равномерно\",\r\n    },\r\n    \"property\": {\r\n      \"title\": \"Свойства\",\r\n      \"noselected\": \"Нет выделенных объектов\",\r\n      \"selected\": \"Выделено объектов: \",\r\n      \"name\": \"Название\",\r\n      \"length\": \"Длина\",\r\n      \"height\": \"Высота\",\r\n      \"drawerWidth\": \"Ширина проема\",\r\n      \"depth\": \"Глубина\",\r\n      \"width\": \"Ширина\",\r\n      \"base\": \"Основа\",\r\n      \"baseColor\": \"Цвет\",\r\n      \"nodrill\": \"Не сверлить\",\r\n      \"lock_width\": \"Зафиксировать ширину\",\r\n      \"unlock_width\": \"Разблокировать ширину\",\r\n      \"lock_height\": \"Зафиксировать высоту\",\r\n      \"unlock_height\": \"Разблокировать высоту\",\r\n      \"lock_move\": \"Блокировать перемещение\",\r\n      \"unlock_move\": \"Разблокировать перемещение\",\r\n      \"lock_minlength\": \"Сделать текущий размер минимальным\",\r\n      \"unlock_minlength\": \"Убрать минимальный размер\",\r\n      \"lock_maxlength\": \"Сделать текущий размер максимальным\",\r\n      \"unlock_maxlength\": \"Убрать максимальный размер\",\r\n      \"delete\": \"Удалить\",\r\n      \"levelup\": \"Перейти на уровень выше\",\r\n    },\r\n    \"settings\": {\r\n      \"title\": \"Настройки\",\r\n      \"showModule\": \"отображать модуль на детали\",\r\n      \"deleteConfirm\": \"спрашивать перед удалением\"\r\n    },\r\n    \"print\": {\r\n      \"title\": \"Просмотр печати\",\r\n      \"close\": \"Закрыть\"\r\n    },\r\n    \"statusbar\": {\r\n      \"move\": \"двигать рабочее поле\",\r\n      \"scale\": \"масштаб\",\r\n      \"rotate\": \"развернуть деталь\",\r\n      \"snap\": \"привязка вкл/выкл\",\r\n      \"stopmeasure\": \"выход из режима измерения\",\r\n      \"pick1\": \"выберите 1-ю точку прямоугольника внутри раскладки\",\r\n      \"pick2\": \"выберите 2-ю точку прямоугольника внутри раскладки\"\r\n    },\r\n    \"viewport\": {\r\n      \"tableTitle\": \"Раскладка\",\r\n      \"module\": \"Модуль\",\r\n      \"length\": \"Длина\",\r\n      \"width\": \"Ширина\",\r\n      \"count\": \"Кол-во\",\r\n    },\r\n    \"workspace\": {\r\n      \"corpus\": \"КОРПУС\",\r\n      \"fasades\": \"ФАСАДЫ\"\r\n    }\r\n  },\r\n  \"handlers\": {\r\n    \"create\": {\r\n      [PlaceErrorMessages.OUTSIDE_AREA]: \"выходит за границы\",\r\n      [PlaceErrorMessages.ON_PANEL]: \"попадает на деталь\",\r\n      [PlaceErrorMessages.NO_JOINTS]: \"нет соединения\",\r\n      [PlaceErrorMessages.DONT_FIT]: \"не помещается в размер\",\r\n    }\r\n  },\r\n  \"title\": \"Конструктор шкафов-купе\",\r\n  \"messages\": {\r\n    \"deleteJointedPanels\": \"Будут также удалены все сопряженные детали. Продолжить?\",\r\n    \"deletePanels\": \"Удалить выбранные объекты?\",\r\n    \"deleteTable\": \"Удалить выбранную раскладку?\",\r\n    \"deleteRow\": \"Удалить строку?\",\r\n    \"changeTexture\": \"Некоторые детали повернуты против текстуры. Перевернуть обратно?\",\r\n    \"newProject\": \"Создать новый проект?\",\r\n    \"corruptedProject\": \"Файл не соответствующего формата\",\r\n    \"corruptedDetailList\": \"Файл не соответствующего формата\",\r\n    \"logout\": \"Вы хотите выйти?\"\r\n  },\r\n  \"selection\": {\r\n    \"crossSelect\": \"Partial selection\",\r\n    \"fullSelect\": \"Full selection\",\r\n    \"selectedVertexes\": {\r\n      \"of\": \"of\",\r\n      \"selected\": \"Points selected\"\r\n    }\r\n  },\r\n  \"showGrid\": \"Show grid\",\r\n  \"propBar\": \"Properties\",\r\n  \"noPanelsSelected\": \"Нет выделенных деталей\",\r\n  \"NPanelsSelected\": \" panels selected\",\r\n  \"deleteButton\": \"Delete\",\r\n  \"print\": {\r\n    \"title\": \"Заказ\",\r\n    \"dataTable\": {\r\n      \"title\" : \"Спецификация\",\r\n      \"gabarits\" : \"1.Габариты изделия (общий)\",\r\n      \"width\" : \"1.ширина:\",\r\n      \"depth\" : \"2.глубина:\",\r\n      \"height\" : \"3.высота:\",\r\n      \"single\" : \"(цельный)\",\r\n      \"double\" : \"(сдвоеннный)\",\r\n      \"DSPcolor\" : \"2.Цвет ДСП\",\r\n      \"DSPcorpus\" : \"1.ДСП (корпус):\",\r\n      \"DSPext\" : \"2.ДСП (дополн):\",\r\n    }\r\n  },\r\n  \"help\": {\r\n    \"title\": \"Справка\",\r\n    \"hotKeys\": [\r\n      { \"key\": \"ESC\", \"desc\": \"Отмена операции\" },\r\n      { \"key\": \"Delete\", \"desc\": \"Удалить выбранные детали\" },\r\n      { \"key\": \"Колесико мыши\", \"desc\": \"Масштаб +/-\" },\r\n      { \"key\": \"Средняя кнопка мыши\", \"desc\": \"Двигать рабочее поле\" },\r\n    ]\r\n  }\r\n}\r\n","import React, { useId, useState } from 'react';\r\n\r\nexport default function ToolBar({ id, expanded = true, expandable = true, caption, font, noTitle, wide, children, extStyle = {} }) {\r\n        const [expand, setExpanded] = useState(expanded)\r\n        if(!id) id = useId()\r\n        const contents = expand ? children : <></>\r\n        return <div id={id} className={`${wide?'toolbar-wide':'toolbar'} noselect`} style={extStyle}>\r\n                {!noTitle ?\r\n                        <>\r\n                        <div className={`${expandable?'toolbar-header-expandable':'toolbar-header'}`} style={{ fontSize: font }} onClick={() => { if(expandable) setExpanded(!expand) }}>\r\n                                <div className={\"noselect\"} >{caption}&nbsp;&nbsp;</div>\r\n                        </div>\r\n                        <hr />\r\n                        </>\r\n                        : <></>}\r\n                {contents}\r\n        </div>\r\n}\r\n\r\n","export const PropertyTypes = {\r\n    VERTEX: 'vertex',\r\n    NUMBER: 'NUMBER',\r\n    POSITIVE_NUMBER: 'POSITIVE_NUMBER',\r\n    INTEGER_POSITIVE_NUMBER: 'INTEGER_POSITIVE_NUMBER',\r\n    BOOL: 'BOOL',\r\n    STRING: 'STRING',\r\n    INPUT: 'INPUT',\r\n    LIST: 'LIST'\r\n};\r\nexport const RegExp = {\r\n    NUMBER: /^-?\\d+\\.?\\d*$/,\r\n    INTEGER_POSITIVE_NUMBER: /^[1-9]{1}\\d*$/,\r\n    POSITIVE_NUMBER: /^\\d+\\.?\\d*$/,\r\n    STRING: /.*/\r\n} ","import Geometry from \"../../utils/geometry\";\r\nimport Shape from \"./Shape\";\r\n\r\nexport default class TextShape extends Shape {\r\n  static CENTER = 0;\r\n  static LEFT = 1;\r\n  static RIGHT = 2;\r\n  static TOP = 3;\r\n  static BOTTOM = 4;\r\n  constructor(\r\n    text = \"\",\r\n    point = { x: -3000, y: 0 },\r\n    angle = 0,\r\n    anchor = { vertical: TextShape.CENTER, horizontal: TextShape.CENTER }\r\n  ) {\r\n    super();\r\n    this.p = point;\r\n    this.controlPoints = [this.p];\r\n    this.text = text;\r\n    this.anchor = anchor;\r\n    this.angle = angle;\r\n    this.fitRect = { width: 1000, height: 1000 };\r\n  }\r\n\r\n\r\n  draw(ctx, realRect, screenRect, fontSize, vertical) {\r\n    super.draw(ctx, realRect, screenRect);\r\n    ctx.save();\r\n\r\n    let basePoint = { ...this.p0 };\r\n\r\n    var { width, height } = this.fitRect;\r\n    const fitWidth = this.fitRect.width//Math.max(this.fitRect.width, this.fitRect.height);\r\n    const fitHeight = this.fitRect.height//Math.min(this.fitRect.width, this.fitRect.height);\r\n    if (!fontSize) {\r\n      for (fontSize = 14; fontSize > 5; fontSize -= 1) {\r\n        ctx.font = `${fontSize}px serif`;\r\n        ({ width, height } = this.getTextRect(ctx, ctx.font));\r\n        if (fitWidth >= width && fitHeight >= height) break;\r\n      }\r\n      this.font = ctx.font;\r\n    } else {\r\n      ctx.font = `${fontSize}px serif`;\r\n      ({ width, height } = this.getTextRect(ctx, ctx.font));\r\n    }\r\n    switch (this.anchor.horizontal) {\r\n      case TextShape.CENTER:\r\n        basePoint.x =\r\n          this.angle === 0 ? this.p0.x - width / 2 : this.p0.x + height / 2;\r\n        break;\r\n      case TextShape.LEFT:\r\n        basePoint.x = this.p0.x + 5;\r\n        break;\r\n      case TextShape.RIGHT:\r\n        basePoint.x = this.p0.x - width;\r\n        break;\r\n      default:\r\n    }\r\n    switch (this.anchor.vertical) {\r\n      case TextShape.CENTER:\r\n        basePoint.y =\r\n          this.angle === 0 ? this.p0.y + height / 2 : this.p0.y + width / 2;\r\n        break;\r\n      case TextShape.TOP:\r\n        basePoint.y = this.angle === 0 ? this.p0.y + height : this.p0.x + width;\r\n        break;\r\n      case TextShape.BOTTOM:\r\n        basePoint.y = this.p0.y;\r\n        break;\r\n      default:\r\n    }\r\n    const newPoint = Geometry.rotatePoint(basePoint, this.angle, {\r\n      x: 0,\r\n      y: 0,\r\n    });\r\n    ctx.translate(basePoint.x - newPoint.x, basePoint.y - newPoint.y);\r\n    ctx.rotate(this.angle);\r\n    const offset = vertical?fontSize/2:0 \r\n    //basePoint.x += offset.x\r\n    basePoint.y -= offset\r\n    ctx.fillText(this.text, basePoint.x, basePoint.y);\r\n    ctx.restore();\r\n  }\r\n  getTextRect(ctx, font) {\r\n    ctx.font = font;\r\n    const textMetrics = ctx.measureText(this.text);\r\n    return {\r\n      width: textMetrics.width,\r\n      height:\r\n        textMetrics.actualBoundingBoxAscent +\r\n        textMetrics.fontBoundingBoxDescent,\r\n    };\r\n  }\r\n  getRealTextRect(ctx, font, realRect, screenRect){\r\n    let {width, height} = this.getTextRect(ctx, font)\r\n    width = Geometry.screenToRealLength(width, realRect.bottomRight.x - realRect.topLeft.x, screenRect.width)\r\n    height = Geometry.screenToRealLength(height, realRect.bottomRight.x - realRect.topLeft.x, screenRect.width)\r\n    return {width, height}\r\n  }\r\n  \r\n  refresh(realRect, screenRect) {\r\n    this.p0 = Geometry.realToScreen(this.p, realRect, screenRect);\r\n  }\r\n  setFitRect(fitRect, fit = true) {\r\n    this.fitRect = { ...fitRect };\r\n    this.fit = fit;\r\n  }\r\n  rotate(angle) {\r\n    this.angle = angle;\r\n  }\r\n  getMarkers() {\r\n    let list = [];\r\n    return list;\r\n  }\r\n  setText(text) {\r\n    this.text = text;\r\n  }\r\n  setFont(font) {\r\n    this.font = font;\r\n  }\r\n  setPoint(point) {\r\n    this.p = point;\r\n  }\r\n  setAnchor(anchor) {\r\n    this.anchor = { ...this.anchor, ...anchor };\r\n  }\r\n  setActivePoint(key) {\r\n    super.setActivePoint();\r\n    if (key === \"P1\") this.selectPoint(0);\r\n  }\r\n  getProperties() {\r\n    let prop = new Map();\r\n    return prop;\r\n  }\r\n  getDistance(point) {\r\n    return null;\r\n  }\r\n  isInSelectionRect(topLeft, bottomRight) {\r\n    return { cross: false, full: false };\r\n  }\r\n  toString() {\r\n    return `Line P1(${this.line.p1.x},${this.line.p1.y}) P2(${this.line.p2.x},${this.line.p2.y})`;\r\n  }\r\n}\r\n","export const ModelActions = {\r\n    NEW_PROJECT: \"NEW_PROJECT\",\r\n    NEW_PROJECT_CONFIRM: \"NEW_PROJECT_CONFIRM\",\r\n    SAVE_PROJECT: \"SAVE_PROJECT\",\r\n    OPEN_PROJECT: \"OPEN_PROJECT\",\r\n    OPEN_FAILURE: \"OPEN_FAILURE\",\r\n    SET_PROJECT: \"SET_PROJECT\",\r\n    SET_INFORMATION: 'SET_INFORMATION',\r\n    SET_MATERIAL: 'SET_MATERIAL',\r\n    SET_LOADED_MATERIALS: 'SET_LOADED_MATERIALS',\r\n    SET_WARDROBE_DIMENSIONS: 'SET_WARDROBE_DIMENSIONS',\r\n    LOAD_MATERIALS: 'LOAD_MATERIALS',\r\n    SET_DELETE_CONFIRM: 'SET_DELETE_CONFIRM',\r\n    SET_WORKSPACE: 'SET_WORKSPACE',\r\n    UPDATE_STATE: \"UPDATE_STATE\",\r\n    updateState() {\r\n        return {\r\n            type: ModelActions.UPDATE_STATE\r\n        }\r\n    },\r\n    newProject(data) {\r\n        return {\r\n            type: ModelActions.NEW_PROJECT,\r\n            payload: data\r\n        }\r\n    },\r\n    newProjectConfirm(start) {\r\n        return {\r\n            type: ModelActions.NEW_PROJECT_CONFIRM,\r\n            payload: start\r\n        }\r\n    },\r\n    saveProject() {\r\n        return {\r\n            type: ModelActions.SAVE_PROJECT\r\n        }\r\n    },\r\n    openProject() {\r\n        return (dispatch) => {\r\n            var input = document.createElement('input');\r\n            input.type = 'file';\r\n            input.accept = \".json\";\r\n            input.onchange = e => {\r\n                const file = e.target.files[0];\r\n                var reader = new FileReader();\r\n                reader.readAsText(file, 'UTF-8');\r\n\r\n                // here we tell the reader what to do when it's done reading...\r\n                reader.onload = readerEvent => {\r\n                    try {\r\n                        var content = JSON.parse(readerEvent.target.result);\r\n                    } catch (e) {\r\n                        content = {}\r\n                    }\r\n                    dispatch({ type: ModelActions.SET_PROJECT, payload: content });\r\n                }\r\n            }\r\n            input.click();\r\n        }\r\n    },\r\n    setInformation: (info) => {\r\n        return {\r\n            type: ModelActions.SET_INFORMATION,\r\n            payload: info,\r\n        }\r\n    },\r\n    setWardrobeDimensions: (dimensions) => {\r\n        return {\r\n            type: ModelActions.SET_WARDROBE_DIMENSIONS,\r\n            payload: dimensions,\r\n        }\r\n    },\r\n    setMaterial: (mat) => {\r\n        return {\r\n            type: ModelActions.SET_MATERIAL,\r\n            payload: mat,\r\n        }\r\n    },\r\n    setLoadedMaterials: (mat) => {\r\n        return {\r\n            type: ModelActions.SET_LOADED_MATERIALS,\r\n            payload: mat\r\n        }\r\n    },\r\n    setDeleteConfirm: (value) => {\r\n        return {\r\n            type: ModelActions.SET_DELETE_CONFIRM,\r\n            payload: value\r\n        }\r\n    },\r\n    setWorkspace: (value) => {\r\n        return {\r\n            type: ModelActions.SET_WORKSPACE,\r\n            payload: value\r\n        }\r\n    },\r\n    loadMaterials(dispatch){\r\n        fetch('/materials',\r\n        {\r\n            method: 'POST', headers: { \"Content-Type\": \"application/json\" },\r\n            //body: JSON.stringify({ name, password })\r\n        })\r\n        .then(res =>\r\n            res.json())\r\n        .then(res => {\r\n                dispatch(ModelActions.setLoadedMaterials(res));\r\n        })\r\n        .catch(e => { console.error(e);});\r\n        return {\r\n            type: ModelActions.LOAD_MATERIALS\r\n        }\r\n    }\r\n}\r\n","import { ModelActions } from \"../actions/ModelActions\";\r\n\r\nexport const FasadBase = {\r\n    DSP: \"DSP\",\r\n    MIRROR: \"MIRROR\",\r\n    SAND: \"SAND\",\r\n    LACOBEL: \"LACOBEL\"\r\n}\r\n\r\n\r\nexport const getFasadBases = () => [FasadBase.DSP, FasadBase.MIRROR, FasadBase.SAND, FasadBase.LACOBEL]\r\n\r\nexport default function materialReducer(state, action){\r\n    switch (action.type){\r\n        case ModelActions.SET_MATERIAL:\r\n            return { result: true, newState: {...state, materials: {...state.materials, ...action.payload}} };\r\n\r\n        case ModelActions.SET_LOADED_MATERIALS:\r\n            return { result: true, newState: {...state, materials: {...state.materials, ...action.payload}} };\r\n\r\n        default: {\r\n            return {result: false, newState: state}\r\n        }\r\n    }\r\n}","export const CustomPaths = {\r\n    LOCK: \"LOCK\",\r\n    LOCK_BOTH: \"LOCK_BOTH\",\r\n    LOCK_WIDTH: \"LOCK_WIDTH\",\r\n    LOCK_HEIGHT: \"LOCK_HEIGHT\"\r\n}\r\nexport function getCustomPath(p, path) {\r\n    const types = {\r\n        [CustomPaths.LOCK]: `M${p.x-5} ${p.y}l0.58 0 0 -1.78c0,-0.91 0.37,-1.74 0.97,-2.34 0.6,-0.6 1.43,-0.97 2.34,-0.97 0.92,0 1.74,0.37 2.34,0.97 0.6,0.6 0.97,1.43 0.97,2.34l0 1.78 0.28 0c0.3,0 0.58,0.13 0.78,0.33 0.2,0.2 0.32,0.47 0.32,0.77l0 6.42c0,0.3 -0.12,0.58 -0.32,0.78 -0.2,0.2 -0.48,0.32 -0.78,0.32l-7.48 0c-0.3,0 -0.58,-0.12 -0.78,-0.32 -0.2,-0.2 -0.32,-0.48 -0.32,-0.78l0 -6.42c0,-0.3 0.12,-0.57 0.32,-0.77 0.2,-0.2 0.48,-0.33 0.78,-0.33zm3.85 2.11c0.59,0 1.07,0.48 1.07,1.06 0,0.48 -0.32,0.89 -0.76,1.02l0.76 2.47 -2.13 0 0.75 -2.47c-0.43,-0.13 -0.75,-0.54 -0.75,-1.02 0,-0.58 0.48,-1.06 1.06,-1.06zm-2.05 -2.11l4.19 0 0 -1.78c0,-0.58 -0.24,-1.1 -0.62,-1.48 -0.37,-0.38 -0.9,-0.62 -1.48,-0.62 -0.58,0 -1.1,0.24 -1.48,0.62 -0.38,0.38 -0.61,0.9 -0.61,1.48l0 1.78zm5.68 0.58l-7.48 0c-0.14,0 -0.28,0.06 -0.37,0.15 -0.1,0.1 -0.16,0.23 -0.16,0.37l0 6.42c0,0.15 0.06,0.28 0.16,0.37 0.09,0.1 0.23,0.16 0.37,0.16l7.48 0c0.15,0 0.28,-0.06 0.37,-0.16 0.1,-0.09 0.16,-0.22 0.16,-0.37l0 -6.42c0,-0.14 -0.06,-0.27 -0.16,-0.37 -0.09,-0.09 -0.22,-0.15 -0.37,-0.15z`,\r\n        [CustomPaths.LOCK_BOTH]: `M${p.x-5} ${p.y}l0.98 0 0 -3.57c0,-1.83 0.75,-3.48 1.94,-4.68 1.21,-1.2 2.86,-1.94 4.69,-1.94 1.82,0 3.48,0.74 4.68,1.94 1.2,1.2 1.94,2.85 1.94,4.68l0 3.57 0.74 0c0.6,0 1.15,0.25 1.55,0.65 0.41,0.4 0.65,0.95 0.65,1.55l0 12.84c0,0.61 -0.24,1.16 -0.64,1.56 -0.41,0.4 -0.96,0.65 -1.56,0.65l-14.97 0c-0.6,0 -1.15,-0.25 -1.55,-0.65 -0.4,-0.4 -0.65,-0.95 -0.65,-1.56l0 -12.84c0,-0.6 0.25,-1.15 0.65,-1.55 0.4,-0.4 0.95,-0.65 1.55,-0.65zm4.27 6.57l-5.01 2.14 5.01 2.14 0 -1.52 2.59 0 0 1.34 -1.52 0 2.14 5 2.14 -5 -1.52 0 0 -1.34 2.49 0 0 1.52 5 -2.14 -5 -2.14 0 1.52 -2.49 0 0 -1.34 1.52 0 -2.14 -5 -2.14 5 1.52 0 0 1.34 -2.59 0 0 -1.52zm-0.86 -6.57l8.39 0 0 -3.57c0,-1.16 -0.47,-2.2 -1.23,-2.96 -0.76,-0.76 -1.81,-1.23 -2.96,-1.23 -1.16,0 -2.21,0.47 -2.97,1.22 -0.76,0.77 -1.23,1.81 -1.23,2.97l0 3.57zm11.56 1.15l-14.97 0c-0.29,0 -0.55,0.12 -0.74,0.31 -0.19,0.19 -0.31,0.45 -0.31,0.74l0 12.84c0,0.3 0.12,0.56 0.31,0.75 0.19,0.19 0.45,0.31 0.74,0.31l14.97 0c0.29,0 0.56,-0.12 0.74,-0.31 0.2,-0.19 0.31,-0.45 0.31,-0.75l0 -12.84c0,-0.29 -0.11,-0.55 -0.3,-0.74 -0.19,-0.19 -0.46,-0.31 -0.75,-0.31z`,\r\n        [CustomPaths.LOCK_WIDTH]: `M${p.x-5} ${p.y}l0.98 0 0 -3.57c0,-1.83 0.75,-3.48 1.94,-4.68 1.21,-1.2 2.86,-1.94 4.69,-1.94 1.82,0 3.48,0.74 4.68,1.94 1.2,1.2 1.94,2.85 1.94,4.68l0 3.57 0.74 0c0.6,0 1.16,0.25 1.55,0.65 0.41,0.4 0.65,0.95 0.65,1.56l0 12.83c0,0.61 -0.24,1.16 -0.64,1.56 -0.4,0.4 -0.96,0.65 -1.56,0.65l-14.97 0c-0.6,0 -1.15,-0.25 -1.55,-0.65 -0.4,-0.4 -0.65,-0.95 -0.65,-1.56l0 -12.83c0,-0.61 0.25,-1.16 0.65,-1.56 0.4,-0.4 0.95,-0.65 1.55,-0.65zm3.41 0l8.39 0 0 -3.57c0,-1.16 -0.47,-2.2 -1.23,-2.96 -0.76,-0.76 -1.81,-1.23 -2.96,-1.23 -1.16,0 -2.21,0.47 -2.97,1.22 -0.76,0.77 -1.23,1.81 -1.23,2.97l0 3.57zm11.56 1.15l-14.97 0c-0.29,0 -0.55,0.12 -0.74,0.31 -0.19,0.19 -0.31,0.45 -0.31,0.75l0 12.83c0,0.3 0.12,0.56 0.31,0.75 0.19,0.19 0.45,0.31 0.74,0.31l14.97 0c0.29,0 0.56,-0.12 0.75,-0.31 0.19,-0.19 0.31,-0.45 0.31,-0.75l0 -12.83c0,-0.3 -0.12,-0.56 -0.31,-0.75 -0.19,-0.19 -0.46,-0.31 -0.75,-0.31zm-4.62 9.87l5 -2.14 -5 -2.14 0 1.52 -5.74 0 0 -1.52 -5 2.14 5 2.14 0 -1.52 5.74 0 0 1.52z`,\r\n        [CustomPaths.LOCK_HEIGHT]: `M${p.x-5} ${p.y}l0.98 0 0 -3.57c0,-1.83 0.75,-3.48 1.94,-4.68 1.21,-1.2 2.86,-1.94 4.69,-1.94 1.82,0 3.48,0.74 4.68,1.94 1.2,1.2 1.94,2.85 1.94,4.68l0 3.57 0.74 0c0.6,0 1.16,0.25 1.55,0.65 0.41,0.4 0.65,0.95 0.65,1.56l0 12.83c0,0.61 -0.24,1.16 -0.64,1.56 -0.4,0.4 -0.96,0.65 -1.56,0.65l-14.97 0c-0.6,0 -1.15,-0.25 -1.55,-0.65 -0.4,-0.4 -0.65,-0.95 -0.65,-1.56l0 -12.83c0,-0.61 0.25,-1.16 0.65,-1.56 0.4,-0.4 0.95,-0.65 1.55,-0.65zm3.41 0l8.39 0 0 -3.57c0,-1.16 -0.47,-2.2 -1.23,-2.96 -0.76,-0.76 -1.81,-1.23 -2.96,-1.23 -1.16,0 -2.21,0.47 -2.97,1.22 -0.76,0.77 -1.23,1.81 -1.23,2.97l0 3.57zm11.56 1.15l-14.97 0c-0.29,0 -0.55,0.12 -0.74,0.31 -0.19,0.19 -0.31,0.45 -0.31,0.75l0 12.83c0,0.3 0.12,0.56 0.31,0.75 0.19,0.19 0.45,0.31 0.74,0.31l14.97 0c0.29,0 0.56,-0.12 0.75,-0.31 0.19,-0.19 0.31,-0.45 0.31,-0.75l0 -12.83c0,-0.3 -0.12,-0.56 -0.31,-0.75 -0.19,-0.19 -0.46,-0.31 -0.75,-0.31zm-5.35 5.6l-2.14 -5 -2.14 5 1.52 0 0 3.83 -1.52 0 2.14 5 2.14 -5 -1.52 0 0 -3.83 1.52 0z`,\r\n    }\r\n    return types[path]\r\n}","import Geometry from \"../../utils/geometry\";\r\nimport Shape from \"./Shape\";\r\nimport TextShape from \"./TextShape\";\r\n\r\nexport default class MultiTextShape extends Shape {\r\n  static CENTER = 0;\r\n  static LEFT = 1;\r\n  static RIGHT = 2;\r\n  static TOP = 3;\r\n  static BOTTOM = 4;\r\n  constructor(\r\n    text = [\"\"],\r\n    point = { x: -3000, y: 0 },\r\n    angle = 0,\r\n    anchor = { vertical: TextShape.CENTER, horizontal: TextShape.CENTER }\r\n  ) {\r\n    super();\r\n    this.textShapes = []\r\n    for(let t of text){\r\n      this.textShapes.push(new TextShape(t, point, angle, anchor))\r\n    }\r\n    this.p = point;\r\n    this.controlPoints = [this.p];\r\n    this.text = text;\r\n    this.anchor = anchor;\r\n    this.angle = angle;\r\n    this.fitRect = { width: 1000, height: 1000 };\r\n  }\r\n\r\n\r\n  draw(ctx, realRect, screenRect, fontSize, vertical) {\r\n    super.draw(ctx, realRect, screenRect);\r\n    let basePoint = { ...this.p0 };\r\n    var { width: totalWidth, height: totalHeight, offsets, angle } = this.getTextOffsets(ctx, fontSize)\r\n    const middleX = angle === 0 ? totalWidth / 2 : totalHeight / 2\r\n    const middleY = angle === 0 ? totalHeight / 2 : totalWidth / 2 \r\n    const newPoint = Geometry.rotatePoint(basePoint, angle, {x: 0, y: 0});\r\n    let i = 0 \r\n    let offsetX = 0\r\n    let offsetY = 0\r\n    for(let t of this.textShapes){\r\n        ctx.save();\r\n        ctx.translate(basePoint.x - newPoint.x - middleX, basePoint.y - newPoint.y + middleY);\r\n        ctx.rotate(angle);\r\n        ctx.fillText(t.text, basePoint.x + offsetX, basePoint.y + offsetY);\r\n        ctx.restore();\r\n        offsetX += offsets.width[i]\r\n        offsetY += offsets.height[i]\r\n        i++\r\n    }\r\n  }\r\n\r\n  getTextOffsets(ctx, fontSize) {\r\n    var { width, height } = this.fitRect;\r\n    let fitWidth = width\r\n    let fitHeight = height\r\n    let oneWidthOffsets = []\r\n    let oneHeightOffsets = []\r\n    let multiWidthOffsets = []\r\n    let multiHeightOffsets = []\r\n    for (fontSize = 14; fontSize > 5; fontSize -= 1) {\r\n      ;({ width, height } = this.fitRect)\r\n      oneWidthOffsets = []\r\n      oneHeightOffsets = []\r\n      multiWidthOffsets = []\r\n      multiHeightOffsets = []\r\n      ctx.font = `${fontSize}px serif`;\r\n      let oneLineWidth = 0\r\n      let oneLineHeight = 0\r\n      let multiLineWidth = 0\r\n      let multiLineHeight = 0\r\n      for(let t of this.textShapes){\r\n        ({ width, height } = t.getTextRect(ctx, ctx.font));\r\n        oneLineWidth += width\r\n        oneWidthOffsets.push(width)\r\n        oneLineHeight = Math.max(oneLineHeight, height)\r\n        oneHeightOffsets.push(0)\r\n        multiLineWidth = Math.max(multiLineWidth, width)\r\n        multiWidthOffsets.push(0)\r\n        multiLineHeight += height\r\n        multiHeightOffsets.push(height)\r\n      }\r\n      \r\n      if (fitWidth >= oneLineWidth && fitHeight >= oneLineHeight) return {width: oneLineWidth, height: oneLineHeight, offsets: {width: oneWidthOffsets, height: oneHeightOffsets}, angle: 0};\r\n      if (fitHeight >= oneLineWidth && fitWidth >= oneLineHeight) return {width: oneLineWidth, height: oneLineHeight, offsets: {width: oneWidthOffsets, height: oneHeightOffsets}, angle: - Math.PI / 2};\r\n      if (fitWidth >= multiLineWidth && fitHeight >= multiLineHeight) return {width: multiLineWidth, height: multiLineHeight, offsets: {width: multiWidthOffsets, height: multiHeightOffsets}, angle: 0};\r\n      if (fitHeight >= multiLineWidth && fitWidth >= multiLineHeight) return {width: multiLineWidth, height: multiLineHeight, offsets: {width: multiWidthOffsets, height: multiHeightOffsets}, angle: - Math.PI / 2};\r\n    }\r\n    return {width, height, offsets: {width: oneWidthOffsets, height: oneHeightOffsets}};\r\n  }\r\n\r\n  refresh(realRect, screenRect) {\r\n    this.p0 = Geometry.realToScreen(this.p, realRect, screenRect);\r\n  }\r\n  setFitRect(fitRect, fit = true) {\r\n    this.fitRect = { ...fitRect };\r\n    this.fit = fit;\r\n  }\r\n  rotate(angle) {\r\n    this.angle = angle;\r\n  }\r\n\r\n  setText(text) {\r\n    let i = 0 \r\n    this.textShapes.forEach(t => {t.setText(text[i]); i++})\r\n  }\r\n  setFont(font) {\r\n    this.font = font\r\n    this.textShapes.forEach(t => t.setFont(font))\r\n  }\r\n  setPoint(point) {\r\n    this.p = point;\r\n    this.textShapes.forEach(t => t.setPoint(point))\r\n  }\r\n  setAnchor(anchor) {\r\n    this.anchor = { ...this.anchor, ...anchor };\r\n    this.textShapes.forEach(t => t.setAnchor(anchor))\r\n  }\r\n\r\n}\r\n","import Geometry, { Intersection } from \"../../utils/geometry\";\r\nimport Shape from \"./Shape\";\r\nimport ShapeStyle from \"./ShapeStyle\";\r\nimport { Color } from \"../colors\";\r\nimport { getProfile, selectAllChildrenFasades} from \"../../reducers/panels\";\r\nimport { PropertyTypes } from \"./PropertyData\";\r\nimport TextShape from \"./TextShape\";\r\nimport { FasadBase, getFasadBases } from \"../../reducers/materialReducer\";\r\nimport { CustomPaths, getCustomPath } from \"./shapes\";\r\nimport MultiTextShape from \"./MultiTextShape\";\r\nexport default class FasadeShape extends Shape {\r\n  static VERT = \"vert\"\r\n  static HOR = \"hor\"\r\n  type = Shape.FASADE;\r\n  constructor(data) {\r\n    super();\r\n    this.height = data.height;\r\n    this.width = data.width;\r\n    this.level = data.level === undefined ? 0 : data.level;\r\n    this.parent = data.parent;\r\n    this.base = data.base === undefined ? \"\" : data.base;\r\n    this.baseColor = data.baseColor === undefined ? FasadBase.MIRROR : data.baseColor;\r\n    if (this.level === 0) this.caption = new TextShape('ФАСАД', {x: data.position.x + data.width / 2, y: data.position.y - 50})\r\n    const orientation = (this.parent && this.parent.divided) || FasadeShape.HOR\r\n    this.baseCaption = new MultiTextShape([this.base, \" \" + this.base + this.base], {x:0, y:0}, orientation === FasadeShape.HOR ? 0 : -Math.PI / 2)\r\n    this.children = []\r\n    this.divided = data.divided\r\n    this.minHeight = 100\r\n    this.minWidth = 100\r\n    this.name = data.name || \"ФАСАД\"\r\n    this.state.selectable = data.selectable === undefined ? true : data.selectable;\r\n    this.state.deletable = data.deletable === undefined ? true : data.deletable;\r\n    this.state.fixable = this.level > 0\r\n    this.state.fixedWidth = data.fixedWidth === undefined ? false : data.fixedWidth;\r\n    this.state.fixedHeight = data.fixedHeight === undefined ? false : data.fixedHeight;\r\n    const position = data.position || { x: 0, y: 0 };\r\n    const last = { x: position.x + this.width, y: position.y + this.height };\r\n    this.rect = { ...position, last, width: this.width, height: this.height };\r\n    this.setStyle(new ShapeStyle(Color.BLACK, ShapeStyle.SOLID));\r\n    this.dimensions = new Set();\r\n    this.properties = [\r\n      { key: \"name\", \r\n        type: PropertyTypes.STRING, \r\n        editable: () => false, \r\n        getValue: () => this.name\r\n      },\r\n      { key: \"height\", \r\n        type: PropertyTypes.INTEGER_POSITIVE_NUMBER, \r\n        editable: () => this.isHeightEditable(), \r\n        extra: () => this.getHeightParts(), \r\n        getValue: () => this.height, \r\n        setValue: (value) => {this.setHeight(value)}\r\n      },\r\n      { key: \"width\", \r\n        type: PropertyTypes.INTEGER_POSITIVE_NUMBER, \r\n        editable: () => this.isWidthEditable(), \r\n        extra: () => this.getWidthParts(), \r\n        getValue: () => this.width, \r\n        setValue: (value) => {this.setWidth(value)}\r\n      },\r\n      { key: \"base\", \r\n        type: PropertyTypes.LIST, \r\n        items: (appData) => getFasadBases().map(b => appData.captions.toolbars.info.materials.fasadBases[b]), \r\n        editable: () => !this.hasChildren(), \r\n        getValue: (appData) => (this.isCombi() ? appData.captions.toolbars.info.materials.combi : appData.captions.toolbars.info.materials.fasadBases[this.getBase()]), \r\n        setValue: (index) => {this.preSetBase(getFasadBases()[index])}},\r\n      { key: \"baseColor\", \r\n        type: PropertyTypes.LIST, \r\n        items: (appData) => appData.materials[this.base].map(m => m.name), \r\n        editable: () => !this.hasChildren(), \r\n        getValue: () => this.getBaseColor(), \r\n        setValue: (_, value) => this.setBaseColor(value)\r\n      },\r\n    ]\r\n  }\r\n\r\n  draw(ctx, realRect, screenRect, print = false, captions) {\r\n    this.captions = captions\r\n    let saveState = {...this.state}\r\n    if(print) this.state = {...this.state, selected: false, highlighted: false}  \r\n    super.draw(ctx, realRect, screenRect);\r\n    const topLeft = Geometry.realToScreen(this.rect, realRect, screenRect);\r\n    const bottomRight = Geometry.realToScreen(this.rect.last, realRect, screenRect);\r\n    const width = bottomRight.x - topLeft.x;\r\n    const height = bottomRight.y - topLeft.y;\r\n    let x = topLeft.x\r\n    let y = topLeft.y\r\n    ctx.strokeRect(x, y, width, height);\r\n    if(this.caption) this.caption.draw(ctx, realRect, screenRect, 14)\r\n    if(this.baseCaption && !this.hasChildren()) this.baseCaption.draw(ctx, realRect, screenRect)\r\n    if(!print && (this.state.fixedWidth || this.state.fixedHeight)) {\r\n      ctx.lineWidth = 1\r\n      let lock = (this.state.fixedWidth && !this.state.fixedHeight) ? CustomPaths.LOCK_WIDTH : 0\r\n      lock = (!this.state.fixedWidth && this.state.fixedHeight) ? CustomPaths.LOCK_HEIGHT : lock\r\n      lock = (this.state.fixedWidth && this.state.fixedHeight) ? CustomPaths.LOCK_BOTH : lock\r\n      const path = new Path2D(getCustomPath({x: x + width / 2, y: y + height / 2}, lock))\r\n      ctx.fill(path);\r\n    }\r\n    if(print) this.state = {...saveState}\r\n  }\r\n\r\n  refresh(realRect, screenRect) {\r\n    this.rect.height = this.height;\r\n    this.rect.width = this.width;\r\n    this.rect.last = {\r\n      x: this.rect.x + this.rect.width,\r\n      y: this.rect.y + this.rect.height,\r\n    };\r\n    if(this.baseCaption){\r\n      const width  = Geometry.realToScreenLength(this.width, realRect.bottomRight.x - realRect.topLeft.x, screenRect.width)\r\n      const height  = Geometry.realToScreenLength(this.height, realRect.bottomRight.x - realRect.topLeft.x, screenRect.width)\r\n      const text1 = (this.captions && this.captions.toolbars.info.materials.fasadBases[this.base]) || this.base\r\n      const text2 = this.getBaseColor()\r\n      this.baseCaption.setText([text1, \" \" + text2])\r\n      this.baseCaption.setFitRect({width, height})\r\n      this.baseCaption.setPoint({x: (this.rect.x + this.rect.last.x) / 2, y: (this.rect.y + this.rect.last.y) / 2})\r\n    }\r\n  }\r\n\r\n  fixWidth(fix){\r\n    if(this.state.fixable) this.state.fixedWidth = fix\r\n    if(this.hasChildren()){\r\n      if(this.divided === FasadeShape.HOR) {\r\n        this.children.forEach(c => c.fixWidth(fix))\r\n      }\r\n    }\r\n  }\r\n  fixHeight(fix){\r\n    if(this.state.fixable) this.state.fixedHeight = fix\r\n    if(this.hasChildren()){\r\n      if(this.divided === FasadeShape.VERT) {\r\n        this.children.forEach(c => c.fixHeight(fix))\r\n      }\r\n    }\r\n  }\r\n  getHeightParts(){\r\n    var s = \"\"\r\n    if(this.hasChildren() && this.divided === FasadeShape.HOR){\r\n      const profiles = this.getProfiles()\r\n      s = this.children.reduce((a, i) => {\r\n        const profile = profiles.shift()\r\n        return a + i.height +( profile ? `+${profile}+` : \"\")\r\n      }, \"\")\r\n      s = ` (${s})`\r\n    }\r\n    return s\r\n  }\r\n\r\n  getWidthParts(){\r\n    var s = \"\"\r\n    if(this.hasChildren() && this.divided === FasadeShape.VERT){\r\n      const profiles = this.getProfiles()\r\n      s = this.children.reduce((a, i) => {\r\n        const profile = profiles.shift()\r\n        return a + i.width + (profile ? `+${profile}+` : \"\")\r\n      }, \"\")\r\n      s = ` (${s})`\r\n    }\r\n    return s\r\n  }\r\n\r\n  isHeightEditable(){\r\n    if(this.level === 0) return false\r\n    if(this.state.fixedHeight) return false\r\n    return this.parent.divided === FasadeShape.VERT ? this.level > 1: true \r\n  }\r\n\r\n  isWidthEditable(){\r\n    if(this.level === 0) return false\r\n    if(this.state.fixedWidth) return false\r\n    return this.parent.divided === FasadeShape.HOR ? this.level > 1: true \r\n  }\r\n\r\n  isCombi(){\r\n    return this.hasChildren() && this.level === 0 && !this.children.every(c => c.base === this.children[0].base)\r\n  }\r\n\r\n  hasChildren(){\r\n    return this.children.length > 0\r\n  }\r\n  deleteAllChildren(state){\r\n    if(!this.hasChildren()) return\r\n    const children = selectAllChildrenFasades(this.children)\r\n    children.forEach(c => {\r\n          state.fasades.delete(c); \r\n          c.dimensions.forEach(d => state.fasadeDimensions.delete(d))\r\n        })\r\n    this.children = []\r\n  }\r\n  resizeChildrenByHeight({initiator, newInitiatorHeight, newInitiatorBase, newParentHeight}){\r\n    const profiles = this.getProfiles({initiator, newBase: newInitiatorBase})\r\n    const totalProfileSize = profiles.reduce((a, p) => a + p, 0)\r\n    const fixedChildren = this.children.filter(c => ((c === initiator) && newInitiatorHeight) || c.state.fixedHeight)\r\n    const freeChildren = this.children.filter(c => ((c !== initiator) || !newInitiatorHeight) && !c.state.fixedHeight)\r\n    if(freeChildren.length === 0) return false\r\n    const totalSize = newParentHeight || this.height\r\n    const totalFixedChildrenSize = fixedChildren.reduce((a, c) => {\r\n                let childSize = (c === initiator) ? (newInitiatorHeight || c.height) : c.height\r\n                return a + childSize\r\n                }, 0)\r\n    const partFreeSize = Math.round((totalSize - totalFixedChildrenSize - totalProfileSize) / freeChildren.length)\r\n    let x = this.rect.x\r\n    let y = this.rect.y\r\n    let dy = 0\r\n    const ch = this.children\r\n    let total = 0\r\n    let partSize\r\n    for(let i = 0; i < ch.length - 1; i++) {\r\n      partSize = (ch[i] === initiator) ? (newInitiatorHeight || partFreeSize) : ch[i].height\r\n      if(ch[i] !== initiator && !ch[i].state.fixedHeight) partSize = partFreeSize\r\n      if(!ch[i].checkHeight(partSize)) return false\r\n      dy += partSize + profiles[i]\r\n      total += partSize + profiles[i]\r\n      ch[i].savePosition(x, y)\r\n      y += dy \r\n    }\r\n    partSize = totalSize - total\r\n    if(!ch.at(-1).checkHeight(partSize)) return false\r\n    ch.at(-1).savePosition(x, y)\r\n    return true\r\n  }\r\n\r\n  resizeChildrenByWidth({initiator, newInitiatorWidth, newInitiatorBase, newParentWidth}){\r\n    const profiles = this.getProfiles({initiator, newBase: newInitiatorBase})\r\n    const totalProfileSize = profiles.reduce((a, p) => a + p, 0)\r\n    const fixedChildren = this.children.filter(c => ((c === initiator) && newInitiatorWidth) || c.state.fixedWidth)\r\n    const freeChildren = this.children.filter(c => ((c !== initiator) || !newInitiatorWidth) && !c.state.fixedWidth)\r\n    if(freeChildren.length === 0) return false\r\n    const totalSize = newParentWidth || this.width\r\n    const totalFixedChildrenSize = fixedChildren.reduce((a, c) => {\r\n                let childSize = (c === initiator) ? (newInitiatorWidth || c.width) : c.width\r\n                return a + childSize\r\n                }, 0)\r\n    const partFreeSize = Math.round((totalSize - totalFixedChildrenSize - totalProfileSize) / freeChildren.length)\r\n    let x = this.rect.x\r\n    let y = this.rect.y\r\n    let dx = 0\r\n    const ch = this.children\r\n    let total = 0\r\n    let partSize\r\n    for(let i = 0; i < ch.length - 1; i++) {\r\n      partSize = (ch[i] === initiator) ? (newInitiatorWidth || partFreeSize) : ch[i].width\r\n      if(ch[i] !== initiator && !ch[i].state.fixedWidth) partSize = partFreeSize\r\n      if(!ch[i].checkWidth(partSize)) return false\r\n      dx += partSize + profiles[i]\r\n      total += partSize + profiles[i]\r\n      ch[i].savePosition(x, y)\r\n      x += dx\r\n    }\r\n    partSize = totalSize - total\r\n    if(!ch.at(-1).checkWidth(partSize)) return false\r\n    ch.at(-1).savePosition(x, y)\r\n    return true\r\n  }\r\n\r\n  setHeight(height){\r\n    if(this.parent.divided === FasadeShape.HOR) {\r\n        const result = this.parent.resizeChildrenByHeight({initiator: this, newInitiatorHeight: height})\r\n        if(result) this.parent.applyChanges(); else this.discardChanges()\r\n      }else{\r\n        const result = this.parent.parent.resizeChildrenByHeight({initiator: this.parent, newInitiatorHeight: height})\r\n        if(result) this.parent.parent.applyChanges(); else this.discardChanges()\r\n      }\r\n  }\r\n  setWidth(width){\r\n    if(this.parent.divided === FasadeShape.VERT) {\r\n        const result = this.parent.resizeChildrenByWidth({initiator: this, newInitiatorWidth: width})\r\n        if(result) this.parent.applyChanges(); else this.discardChanges()\r\n      }else{\r\n        const result = this.parent.parent.resizeChildrenByWidth({initiator: this.parent, newInitiatorWidth: width})\r\n        if(result) this.parent.parent.applyChanges(); else this.discardChanges()\r\n      }\r\n  }\r\n\r\n\r\n  preSetBase(base){\r\n    let parent = this\r\n    while (parent.level > 1) parent = parent.parent\r\n    parent.setBase(base)\r\n  }\r\n\r\n  setBase(base){\r\n    if(this.hasChildren()) this.children.forEach(c => c.setBase(base))\r\n    if(!this.parent) {\r\n      this.base = base;\r\n      return\r\n    }\r\n    let result\r\n    if(this.parent.divided === FasadeShape.VERT) {\r\n        result = this.parent.resizeChildrenByWidth({initiator: this, newInitiatorBase: base})\r\n      }else{\r\n        result = this.parent.resizeChildrenByHeight({initiator: this, newInitiatorBase: base})\r\n      }\r\n    if(!result) return this.discardChanges()\r\n    this.savedBase = base\r\n    this.parent.applyChanges()\r\n  }\r\n\r\n  getBase(){\r\n    return this.hasChildren() ? this.children[0].base : this.base\r\n  }\r\n  getBaseColor(){\r\n    return this.hasChildren() ? this.children[0].baseColor : this.baseColor\r\n  }\r\n  setBaseColor(baseColor){\r\n    this.baseColor = baseColor\r\n    if(this.hasChildren()) this.children.forEach(c => c.setBaseColor(baseColor))\r\n  }\r\n\r\n  checkHeight(height){\r\n    if(height < this.minHeight) return false\r\n    if(this.state.fixedHeight && height !== this.height) return false\r\n    if(this.hasChildren()){\r\n      if(this.divided === FasadeShape.HOR) {\r\n          const result = this.resizeChildrenByHeight({newParentHeight: height})\r\n          if(result) this.savedHeight = height\r\n          return result\r\n        }\r\n      if(this.children.some(c => !c.checkHeight(height))) return false \r\n    }\r\n    this.savedHeight = height\r\n    return true\r\n  }\r\n\r\n  checkWidth(width){\r\n    if(width < this.minWidth) return false\r\n    if(this.state.fixedWidth && width !== this.width) return false \r\n    if(this.hasChildren()){\r\n      if(this.divided === FasadeShape.VERT) {\r\n        const result = this.resizeChildrenByWidth({newParentWidth: width})\r\n        if(result) this.savedWidth = width\r\n        return result\r\n      }\r\n      if(this.children.some(c => !c.checkWidth(width))) return false \r\n    }\r\n    this.savedWidth = width\r\n    return true\r\n  }\r\n\r\n  applyChanges(){\r\n    if(this.savedBase) this.base = this.savedBase\r\n    if(this.savedWidth) this.width = this.savedWidth\r\n    if(this.savedHeight) this.height = this.savedHeight\r\n    //if(this.savedPosition) this.setPosition(this.savedPosition.x, this.savedPosition.y)\r\n    //this.savedPosition = null\r\n    this.savedHeight = null\r\n    this.savedWidth = null\r\n    this.savedBase = null\r\n    let x = this.rect.x \r\n    let y = this.rect.y\r\n    if(this.hasChildren()) {\r\n        let width\r\n        let height\r\n        for(let i = 0; i < this.children.length - 1; i++){\r\n                let c = this.children[i]\r\n                let cNext = this.children[i + 1]\r\n                let profile = getProfile(c.base, cNext.base)\r\n                width = c.savedWidth || c.width\r\n                height = c.savedHeight || c.height\r\n                c.setPosition(x, y, {width, height})\r\n                if(this.divided === FasadeShape.VERT) {\r\n                  x += width + profile\r\n                }else{\r\n                  y += height + profile\r\n                }\r\n                c.applyChanges()\r\n              }\r\n        width = this.children.at(-1).savedWidth || this.children.at(-1).width\r\n        height = this.children.at(-1).savedHeight || this.children.at(-1).height\r\n        this.children.at(-1).setPosition(x, y, {width, height})\r\n        this.children.at(-1).applyChanges()\r\n      }\r\n  }\r\n\r\n  discardChanges(){\r\n    this.savedHeight = null\r\n    this.savedWidth = null\r\n    this.savedBase = null\r\n  }\r\n\r\n  getProfiles({initiator, newBase = initiator && initiator.base} = {}){\r\n    let profiles = []\r\n    for(let i=0; i < this.children.length - 1; i++) {\r\n      const base1 = this.children[i] === initiator ? (newBase || this.children[i].base) : this.children[i].base\r\n      const base2 = this.children[i + 1] === initiator ? (newBase || this.children[i + 1].base) : this.children[i + 1].base\r\n      profiles.push(getProfile(base1, base2))\r\n    }\r\n    return profiles\r\n  }\r\n\r\n  getProperties() {\r\n    return super.getProperties()\r\n\r\n  }\r\n  savePosition(x, y) {\r\n    this.savedPosition = {x, y}\r\n  }\r\n\r\n  setPosition(x, y, {width = 0, height = 0}) {\r\n    this.rect.x = x;\r\n    this.rect.y = y;\r\n    this.rect.last = { x: x + width || this.width, y: y + height || this.height };\r\n  }\r\n  getPosition() {\r\n    return this.rect;\r\n  }\r\n  setHidden(hidden) {\r\n    this.state.hidden = hidden;\r\n  }\r\n  getSingleDimensionData(vertical){\r\n    const firstPoint = vertical ? {x: this.rect.x + this.width / 2, y: this.rect.y} : {x: this.rect.x, y: this.rect.y + this.height / 2}\r\n    const secondPoint = vertical ? {x: this.rect.x + this.width / 2, y: this.rect.last.y} : {x: this.rect.last.x, y: this.rect.last.y - this.height / 2}\r\n    const midPoint = { x: (firstPoint.x + secondPoint.x) / 2, y: (firstPoint.y + secondPoint.y) / 2 }\r\n    return {firstPoint, secondPoint, midPoint}\r\n  }\r\n\r\n  isInSelectionRect({ topLeft, bottomRight }) {\r\n    const inRect = [\r\n      Geometry.pointInRect(this.rect, topLeft, bottomRight),\r\n      Geometry.pointInRect(this.rect.last, topLeft, bottomRight),\r\n    ];\r\n    const full = inRect.every((i) => i === true);\r\n    const cross = Intersection.RectangleRectangle(topLeft, bottomRight, this.rect, this.rect.last).length > 0;\r\n    return { cross, full };\r\n  }\r\n\r\n  isUnderCursor(p, pixelRatio) {\r\n    const mult = 1;\r\n    return (\r\n      p.x >= this.rect.x - pixelRatio * mult &&\r\n      p.x <= this.rect.x + this.rect.width + pixelRatio * mult &&\r\n      p.y >= this.rect.y - pixelRatio * mult &&\r\n      p.y <= this.rect.y + this.rect.height + pixelRatio * mult\r\n    );\r\n  }\r\n}\r\n","import FasadeShape from \"../components/shapes/FasadeShape\";\r\nimport Shape from \"../components/shapes/Shape\";\r\nimport { WORKSPACE } from \"./initialState\";\r\nimport { FasadBase } from \"./materialReducer\";\r\n\r\nexport class SelectionSet extends Set{\r\n    add(item){\r\n      const res = super.add(item)\r\n      if(item && item.onAddToSelection) item.onAddToSelection(res)\r\n      return res \r\n    }\r\n    delete(item){\r\n      const res = super.delete(item)\r\n      if(item && item.onDeleteFromSelection) item.onDeleteFromSelection(res)\r\n      return res\r\n    }\r\n    has(item){\r\n      return super.has(item)\r\n    }\r\n    clear(){\r\n      for(let p of this) if(p.onDeleteFromSelection) p.onDeleteFromSelection()\r\n      return super.clear()\r\n    }\r\n}\r\n\r\nexport function isPointInPanelArea(point, panel) {\r\n  let d;\r\n  if (panel.vertical)\r\n    d = (point.y - panel.rect.last.y) * (point.y - panel.rect.y);\r\n  else\r\n    d = (point.x - panel.rect.last.x) * (point.x - panel.rect.x);\r\n  return d <= 0;\r\n}\r\n\r\nexport function isPanelIntersect(source, target) {\r\n  let d;\r\n  if (source.vertical)\r\n    d = Math.max(source.rect.last.y, target.rect.last.y) - Math.min(source.rect.y, target.rect.y);\r\n  else\r\n    d = Math.max(source.rect.last.x, target.rect.last.x) - Math.min(source.rect.x, target.rect.x);\r\n  return d <= source.length + target.length;\r\n}\r\n\r\nexport function canBeDistributed(selected) {\r\n  let panels = Array.from(selected)\r\n  if(panels.some(p => (p.type !== Shape.PANEL)\r\n    || (p.jointFromBackSide.size !== 0)\r\n    || (p.jointFromFrontSide.size !== 0)\r\n    || (p.state.fixed_move === true))\r\n    ) return false\r\n\r\n  if (!panels.every(p => p.vertical) && !panels.every(p => !p.vertical)) return false\r\n  if (panels.length === 0) return false\r\n  const jointBack = panels[0].jointToBack\r\n  const jointFront = panels[0].jointToFront\r\n  if (!panels.every(p => p.jointToBack === jointBack)) return false\r\n  if (!panels.every(p => p.jointToFront === jointFront)) return false\r\n  if (panels[0].vertical)\r\n    panels.sort((p1, p2) => p1.rect.x - p2.rect.x);\r\n  else\r\n    panels.sort((p1, p2) => p1.rect.y - p2.rect.y);\r\n  for (let i = 0; i < panels.length - 1; i++) {\r\n    if (panels[i].getNearest().nearestFromFront !== panels[i + 1]) return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport function distribute(selected){\r\n  const panels = Array.from(selected)\r\n\r\n  if (panels[0].vertical){\r\n    panels.sort((p1, p2) => p1.rect.x - p2.rect.x);\r\n    panels.forEach(p => p.moveTo(-10000, 0))\r\n    const d = Math.round((panels.at(-1).getNearest().nearestFromFront.rect.x - panels.at(-1).rect.last.x) / (panels.length + 1))\r\n    for(let i = panels.length - 1; i >= 0; i--) panels[i].moveTo(d * (i + 1), 0)\r\n  }\r\n  else{\r\n    panels.sort((p1, p2) => p1.rect.y - p2.rect.y);\r\n    panels.forEach(p => p.moveTo(0, -10000))\r\n    const d = Math.round((panels.at(-1).getNearest().nearestFromFront.rect.y - panels.at(-1).rect.last.y) / (panels.length + 1))\r\n    for(let i = panels.length - 1; i >= 0; i--) panels[i].moveTo(0, d * (i + 1))\r\n  }\r\n\r\n}\r\n\r\nexport function divideFasadesHor(fasades, count){\r\n  const newFasades = new Set()\r\n  for(let f of fasades){\r\n    if (f.level > 2) continue\r\n    f.divided = FasadeShape.HOR\r\n    const profile = f.base === FasadBase.DSP ? 1 : 3\r\n    const partLen = Math.round((f.height - profile * (count - 1)) / count )\r\n    let total = 0\r\n    let pos = f.getPosition()\r\n    let options = {\r\n      width: f.width, \r\n      level: f.level + 1, \r\n      parent: f, \r\n      base: f.base, \r\n      baseColor: f.baseColor,\r\n      name: \"Элемент фасада\",\r\n      position: {x: pos.x, y: pos.y}\r\n    }\r\n    for(let i = 1; i < count; i++){\r\n      options.height = partLen\r\n      let fasade = new FasadeShape(options)\r\n      newFasades.add(fasade)\r\n      f.children.push(fasade)\r\n      total += (partLen + profile)\r\n      options.position.y = pos.y + total\r\n      \r\n    }\r\n    options.height = f.height - total\r\n    options.position.y = pos.y + total\r\n    let fasade = new FasadeShape(options)\r\n    newFasades.add(fasade)\r\n    f.children.push(fasade)\r\n    \r\n    f.state.selectable = false\r\n  }\r\n  return newFasades\r\n}\r\n\r\nexport function divideFasadesVert(fasades, count){\r\n  const newFasades = new Set()\r\n  for(let f of fasades){\r\n    if (f.level > 2) continue\r\n    f.divided = FasadeShape.VERT\r\n    const profile = f.base === FasadBase.DSP ? 1 : 3\r\n    const partWidth = Math.round((f.width - profile * (count - 1)) / count )\r\n    let total = 0\r\n    let pos = f.getPosition()\r\n    let options = {\r\n      height: f.height, \r\n      level: f.level + 1, \r\n      parent: f, \r\n      base: f.base, \r\n      baseColor: f.baseColor,\r\n      name: \"Элемент фасада\",\r\n      position: {x: pos.x, y: pos.y}\r\n    }\r\n    for(let i = 1; i < count; i++){\r\n      options.width = partWidth\r\n      let fasade = new FasadeShape(options)\r\n      newFasades.add(fasade)\r\n      f.children.push(fasade)\r\n      total += (partWidth + profile)\r\n      options.position.x = pos.x + total\r\n      \r\n    }\r\n    options.width = f.width - total\r\n    options.position.x = pos.x + total\r\n    let fasade = new FasadeShape(options)\r\n    newFasades.add(fasade)\r\n    f.children.push(fasade)\r\n    \r\n    f.state.selectable = false\r\n  }\r\n  return newFasades\r\n}\r\n\r\nexport function getProfile(base1, base2){\r\n  if(base1 === FasadBase.DSP && base2 === FasadBase.DSP) return 1\r\n  return 3\r\n  //if(type1 !== type2) return 3\r\n  //if(type1 === FasadBase.GLASS && type2 === FasadBase.GLASS) return 3\r\n}\r\n\r\nexport function selectAllChildrenFasades(selected){\r\n  function selectChildren(parent){\r\n    const children = new Set()\r\n    for(let c of parent.children){\r\n      if (c.hasChildren()) {\r\n        selectChildren(c).forEach(child => children.add(child))\r\n        c.children = []\r\n        c.state.selectable = true\r\n      }\r\n      else children.add(c)\r\n    }\r\n    children.add(parent)\r\n    return children\r\n  }\r\n  const allSelected = new Set()\r\n  for(let s of selected){\r\n    if(s.type !== Shape.FASADE) continue\r\n    for(let c of s.parent.children)\r\n      if (c.hasChildren()) {\r\n        selectChildren(c).forEach(child => allSelected.add(child));\r\n        c.children = []\r\n        c.state.selectable = true\r\n      }\r\n        else allSelected.add(c)\r\n    s.parent.children = []\r\n    s.parent.state.selectable = true\r\n  }\r\n  return allSelected\r\n}\r\n\r\nexport function bringSelectedToFront(fasades, selected){\r\n  const newFasades = [...fasades]\r\n  newFasades.sort((f1, f2) => !selected.has(f2) ? 1 : -1)\r\n  return new Set(newFasades)\r\n}\r\n\r\n\r\nexport function updateParallelPanels(panels) {\r\n  for (let source of panels)\r\n    for (let target of panels) {\r\n      if (source === target) continue;\r\n      if (!(source.vertical === target.vertical)) continue;\r\n      if (!isPanelIntersect(source, target)) continue;\r\n      if (source.vertical) {\r\n        if (target.rect.x + target.thickness <= source.rect.x)\r\n          source.parallelFromBack.add(target);\r\n        if (target.rect.x >= source.rect.x + source.thickness)\r\n          source.parallelFromFront.add(target);\r\n      } else {\r\n        if (target.rect.y + target.thickness <= source.rect.y)\r\n          source.parallelFromBack.add(target);\r\n        if (target.rect.y >= source.rect.y + source.thickness)\r\n          source.parallelFromFront.add(target);\r\n      }\r\n    }\r\n}\r\n\r\nexport function getJointData(p) {\r\n  const jointFromBackSide = Array.from(p.jointFromBackSide);\r\n  const jointFromFrontSide = Array.from(p.jointFromFrontSide);\r\n  const jointsFromBackMinToMax = jointFromBackSide.sort((j1, j2) => j1.getLength() - j2.getLength())\r\n  const jointsFromFrontMinToMax = jointFromFrontSide.sort((j1, j2) => j1.getLength() - j2.getLength())\r\n  return { jointsFromBackMinToMax, jointsFromFrontMinToMax };\r\n}\r\n\r\nexport function selectAllJointedPanels(panel, selectedPanels) {\r\n  panel.jointFromBackSide.forEach((j) => {\r\n    selectedPanels.add(j);\r\n    selectAllJointedPanels(j, selectedPanels);\r\n  });\r\n  panel.jointFromFrontSide.forEach((j) => {\r\n    selectedPanels.add(j);\r\n    selectAllJointedPanels(j, selectedPanels);\r\n  });\r\n}\r\n\r\nexport function deleteAllLinksToPanels(panels, panelsToDelete) {\r\n  for (let p of panels) {\r\n    panelsToDelete.forEach((d) => {\r\n      p.jointFromBackSide.delete(d);\r\n      p.jointFromFrontSide.delete(d);\r\n      p.parallelFromBack.delete(d);\r\n      p.parallelFromFront.delete(d);\r\n    });\r\n  }\r\n}\r\n\r\nexport function getSelectionData(selected) {\r\n  let panels = [];\r\n  let dimensions = [];\r\n  let fixDisabled = false;\r\n  let deleteDisabled = false;\r\n  for (let s of selected) {\r\n    if (!s.state.deletable) deleteDisabled = true;\r\n    if (!s.state.fixable) fixDisabled = true;\r\n    if (s.type === Shape.PANEL || s.type === Shape.DRAWER) panels.push(s);\r\n    if (s.type === Shape.DIMENSION) {\r\n      dimensions.push(s);\r\n    }\r\n  }\r\n\r\n  if (panels.length + dimensions.length === 0) {\r\n    fixDisabled = true;\r\n    deleteDisabled = true;\r\n  }\r\n  const isJoints = panels.find(\r\n    (p) => p.jointFromBackSide.size > 0 || p.jointFromFrontSide.size > 0\r\n  );\r\n  return {\r\n    canBeDeleted: !deleteDisabled,\r\n    canBeFixed: !fixDisabled,\r\n    panelCount: panels.length,\r\n    firstSelected: panels[0],\r\n    dimensionCount: dimensions.length,\r\n    isJoints,\r\n  };\r\n}\r\n\r\nexport function moveSelectedPanels(dx, dy, active, selected, onGabaritChange = () => { }) {\r\n  const vertical = active.vertical;\r\n  if ((dx === 0 && vertical) || (dy === 0 && !vertical)) return;\r\n  const panels = Array.from(selected).filter((s) => s.vertical === vertical && s.type !== Shape.DIMENSION);\r\n  if (vertical) {\r\n    panels.sort((p1, p2) => dx < 0 ? p1.rect.x - p2.rect.x : p2.rect.x - p1.rect.x);\r\n  } else\r\n    panels.sort((p1, p2) => dy < 0 ? p1.rect.y - p2.rect.y : p2.rect.y - p1.rect.y);\r\n  let maxDX = 1000000;\r\n  let maxDY = 1000000;\r\n  let prevPanel\r\n  for (let p of panels) {\r\n    const res = p.moveTo(dx, dy, onGabaritChange, true, prevPanel);\r\n    if (vertical && Math.abs(res.newDX) < Math.abs(maxDX)) {\r\n      maxDX = res.newDX;\r\n    }\r\n    if (!vertical && Math.abs(res.newDY) < Math.abs(maxDY)) {\r\n      maxDY = res.newDY;\r\n    }\r\n    prevPanel = p\r\n  }\r\n  for (let p of panels) {\r\n    p.moveTo(maxDX, maxDY, onGabaritChange);\r\n  }\r\n}\r\n\r\nexport function getWardrobeDimensions({ panels }) {\r\n  let maxX = 0;\r\n  let maxY = 0;\r\n  for (let p of panels) {\r\n    if (p.vertical) {\r\n      maxX = p.rect.last.x > maxX ? p.rect.last.x : maxX;\r\n    } else maxY = p.rect.last.y > maxY ? p.rect.last.y : maxY;\r\n  }\r\n  return { maxX, maxY };\r\n}\r\n\r\nexport function setWardrobeDimensions(appData, appActions) {\r\n  const { maxX, maxY } = getWardrobeDimensions(appData);\r\n  appActions.setWardrobeDimensions({ width: maxX, height: maxY });\r\n}\r\n\r\nexport function getWardrobePrintArea(appData) {\r\n  const { width, height } = appData.wardrobe\r\n  const rect = { topLeft: { x: 0, y: height }, bottomRight: { x: width, y: 0 } }\r\n  const dimensions = appData.workspace === WORKSPACE.CORPUS ? appData.dimensions : appData.fasadeDimensions\r\n  for (let d of dimensions) {\r\n    const { x, y } = d.getPosition()\r\n    if (d.vertical) {\r\n      if (x < rect.topLeft.x) rect.topLeft.x = x\r\n      if (x > rect.bottomRight.x) rect.bottomRight.x = x\r\n    } else {\r\n      if (y < rect.bottomRight.y) rect.bottomRight.y = y\r\n      if (y > rect.topLeft.y) rect.topLeft.y = y\r\n    }\r\n  }\r\n  rect.topLeft.x -= 150\r\n  rect.topLeft.y += 150\r\n  rect.bottomRight.x += 150\r\n  rect.bottomRight.y -= 100\r\n  return rect\r\n}","import React, { useEffect, useLayoutEffect, useRef } from 'react';\r\nimport ToolBar from './ToolBar.js';\r\nimport { paint } from '../functions/drawFunctions.js';\r\nimport { addWindowListeners, zoomToRect } from '../functions/viewPortFunctions.js';\r\nimport useEvents from '../customHooks/useEvents.js';\r\nimport useDoubleClick from '../customHooks/useDoubleClick.js';\r\nimport { getWardrobePrintArea } from '../reducers/panels.js';\r\n\r\nexport default function ViewPort({ viewPortData, setViewPortData, appActions, appData, eventHandlers }) {\r\n    const events = useEvents(appData.isMobile, eventHandlers)\r\n    const refCanvas = useRef()\r\n    useEffect(() => {\r\n        const ctx = refCanvas.current.getContext('2d')\r\n        paint(ctx, viewPortData, appData)\r\n    }, [appData, viewPortData])\r\n    useLayoutEffect(() => {\r\n        window.KEYDOWNHANDLE = true\r\n        refCanvas.current.addEventListener(\"wheel\", (e) => {\r\n            eventHandlers.onMouseWheel(e);\r\n            e.preventDefault();\r\n        })\r\n        addWindowListeners(viewPortData, setViewPortData, appActions, refCanvas.current)\r\n    }, [])\r\n    useEffect(() => {\r\n        const wardrobeRect = getWardrobePrintArea(appData)\r\n        setViewPortData((prevData) => zoomToRect({ ...wardrobeRect }, prevData));\r\n    }, [appData.resetView])\r\n    const doubleClick = useDoubleClick(eventHandlers, (e) => eventHandlers.onDoubleClick(e))\r\n    return <ToolBar id={\"canvas-container\"} noTitle={true} wide={false}>\r\n        <canvas ref={refCanvas} id=\"canvas\" style={{ width: `${viewPortData.viewPortWidth}px`, height: `${viewPortData.viewPortHeight}px`, cursor: 'none' }} width={viewPortData.viewPortWidth} height={viewPortData.viewPortHeight}\r\n            {...events}\r\n            onClick={doubleClick}\r\n            onDoubleClick={(e) => { eventHandlers.onDoubleClick(e) }}\r\n            onContextMenu={(e) => { e.preventDefault() }}\r\n        >\r\n        </canvas>\r\n    </ToolBar>\r\n}\r\n\r\n","\r\nexport default function useEvents(isMobile, eventHandlers){\r\n    if(isMobile) return {\r\n        onPointerMove: (e) => { eventHandlers.onPointerMove(e) },\r\n        onPointerDown: (e) => { eventHandlers.onPointerDown(e) },\r\n        onPointerUp: (e) => { eventHandlers.onPointerUp(e) },\r\n        onPointerLeave: (e) => { eventHandlers.onPointerLeave(e) },\r\n        onPointerEnter: (e) => { eventHandlers.onPointerEnter(e) },\r\n        onPointerCancel: (e) => { eventHandlers.onPointerUp(e) },\r\n    }\r\n    else\r\n    return {\r\n        onMouseMove: (e) => { eventHandlers.onPointerMove(e) },\r\n        onMouseDown: (e) => { eventHandlers.onPointerDown(e) },\r\n        onMouseUp: (e) => { eventHandlers.onPointerUp(e) },\r\n        onMouseLeave: (e) => { eventHandlers.onPointerLeave(e) },\r\n        onMouseEnter: (e) => { eventHandlers.onPointerEnter(e) },\r\n    }\r\n}","import { useRef } from \"react\";\r\n\r\nexport default function useDoubleClick(eventHandlers, onDoubleClick){\r\n    const clickCount = useRef(0)\r\n    const time = useRef() \r\n    return (e)=>{\r\n        if(clickCount.current === 0) {\r\n            time.current = performance.now();\r\n            clickCount.current++\r\n            }\r\n            else{\r\n                if((performance.now() - time.current) < 200) {\r\n                    onDoubleClick(e)\r\n                }\r\n                clickCount.current = 0\r\n            }\r\n        eventHandlers.onClick(e)\r\n    }\r\n}","export default class KeyHandler {\r\n\r\n    keyPress(e, { handler }) {\r\n        if (handler.keypress(e.code))\r\n            if (e.target === document.body) e.preventDefault();\r\n    };\r\n\r\n    keyUp(e, { appData }) {\r\n        //appData.cursor.setAdditional({ shiftKey: e.shiftKey, altKey: e.altKey });\r\n    };\r\n\r\n    keyDown(e, { appData, appActions}) {\r\n        if (window.KEYDOWNHANDLE === false) return;\r\n    }\r\n}\r\n\r\n","import KeyHandler from \"./KeyHandler\";\r\n\r\nexport default class CancelKeyHandler extends KeyHandler {\r\n    keyPress(e, { handler }) {\r\n        super.keyPress(e, {handler})\r\n    };\r\n\r\n    keyUp(e, { appData }) {\r\n        super.keyUp(e)\r\n    };\r\n\r\n    keyDown(e, { appData, appActions }) {\r\n        if (super.keyDown(e, { appData, appActions })) return\r\n        appActions.cancel()\r\n    }\r\n}","import CancelKeyHandler from \"./CancelKeyHandler\";\r\nimport DeleteKeyHandler from \"./DeleteKeyHandler\";\r\n\r\nexport const keyHandlers = [\r\n    { ctrlKey: false, shiftKey: false, altKey: false, keyCode: 46, handler: DeleteKeyHandler },\r\n    { ctrlKey: false, shiftKey: false, altKey: false, keyCode: 27, handler: CancelKeyHandler },\r\n]","import { WORKSPACE } from \"../reducers/initialState\";\r\nimport { getSelectionData } from \"../reducers/panels\";\r\nimport KeyHandler from \"./KeyHandler\";\r\n\r\nexport default class DeleteKeyHandler extends KeyHandler {\r\n    keyPress(e, { handler }) {\r\n        super.keyPress(e, { handler })\r\n    };\r\n\r\n    keyUp(e, { appData }) {\r\n        super.keyUp(e)\r\n    };\r\n\r\n    keyDown(e, { appData, appActions }) {\r\n        if (super.keyDown(e, { appData, appActions })) return\r\n        const { canBeDeleted, isJoints } = getSelectionData(appData.selectedPanels)\r\n        if (canBeDeleted) \r\n                    if(appData.workspace === WORKSPACE.CORPUS) \r\n                            appActions.deleteSelectedConfirm({ isJoints });\r\n                            else appActions.deleteSelectedFasadesConfirm();\r\n    }\r\n}","export default class TouchManager{\r\n    touches = []\r\n    prevDiff = -1\r\n    addTouchEvent(event){\r\n        this.touches.push(event)\r\n    }\r\n    removeTouchEvent(pointerId){\r\n        const index = this.touches.findIndex((event) => event.pointerId === pointerId);\r\n        if(index >= 0) this.touches.splice(index, 1);\r\n        this.prevDiff = -1\r\n    }\r\n    setPoint(pointerId, point){\r\n        const index = this.touches.findIndex((event) => event.pointerId === pointerId);\r\n        if(index >= 0) this.touches[index].curPoint = point\r\n    }\r\n    getTouchCount(){\r\n        return this.touches.length\r\n    }\r\n}","export const AppActions = {\r\n  SET_LANGUAGE: \"SET_LANGUAGE\",\r\n  REQUEST_LANGUAGE: \"REQUEST_LANGUAGE\",\r\n  SHOW_HELP: \"SHOW_HELP\",\r\n  SHOW_CONFIRM: \"SHOW_CONFIRM\",\r\n  SHOW_ALERT: \"SHOW_ALERT\",\r\n  SHOW_DIALOG: \"SHOW_DIALOG\",\r\n  setLanguage(captions) {\r\n    return {\r\n      type: AppActions.SET_LANGUAGE,\r\n      payload: captions,\r\n    };\r\n  },\r\n  requestLanguage(lang) {\r\n    return (dispatch) => {\r\n      fetch(\"/lang\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ lang: lang }),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((capt) => dispatch(AppActions.setLanguage(capt)))\r\n        .catch((e) => {\r\n          console.error(e);\r\n        });\r\n    };\r\n  },\r\n  showHelp(show) {\r\n    return {\r\n      type: AppActions.SHOW_HELP,\r\n      payload: show,\r\n    };\r\n  },\r\n  showConfirm(show, messageKey = \"\", actions = []) {\r\n    return {\r\n      type: AppActions.SHOW_CONFIRM,\r\n      payload: { show, messageKey, actions },\r\n    };\r\n  },\r\n  showAlert(show, message) {\r\n    return {\r\n      type: AppActions.SHOW_ALERT,\r\n      payload: { show, message },\r\n    };\r\n  },\r\n  showDialog(show, dialog) {\r\n    return {\r\n      type: AppActions.SHOW_DIALOG,\r\n      payload: { show, dialog },\r\n    };\r\n  },\r\n  blink() {\r\n    const form = document.querySelector(\".modal-container > .toolbar-modal\");\r\n    const oldColor = form.style.backgroundColor;\r\n    var count = 0;\r\n    const int = setInterval(() => {\r\n      if (form.style.backgroundColor === oldColor)\r\n        form.style.backgroundColor = \"red\";\r\n      else form.style.backgroundColor = oldColor;\r\n      if (++count > 3) {\r\n        clearInterval(int);\r\n        form.style.backgroundColor = oldColor;\r\n      }\r\n    }, 10);\r\n  },\r\n};\r\n","const EventsActions = {\r\n    TOUCH_DOWN: 'TOUCH_DOWN',\r\n    TOUCH_UP: 'TOUCH_UP',\r\n    TOUCH_MOVE: 'TOUCH_MOVE',\r\n    TOUCH_CANCEL: 'TOUCH_CANCEL',\r\n    LOG: 'LOG',\r\ntouchDown: ()=>{\r\n    return {\r\n        type: 'TOUCH_DOWN',\r\n        payload: {},\r\n    }\r\n},\r\ntouchUp:(touchCount = 0)=>{\r\n    return {\r\n        type: 'TOUCH_UP',\r\n        payload: touchCount\r\n    }\r\n},\r\ntouchMove:()=>{\r\n    return {\r\n        type: 'TOUCH_MOVE',\r\n    }\r\n},\r\ntouchCancel:()=>{\r\n    return {\r\n        type: 'TOUCH_CANCEL',\r\n    }\r\n},\r\nlog:(data)=>{\r\n    return {\r\n        type: 'LOG',\r\n        payload: data\r\n    }\r\n}\r\n}\r\n\r\nexport default EventsActions","import { Status } from \"../reducers/functions\";\r\nexport const ScreenActions = {\r\n  ADD_PANEL: \"ADD_PANEL\",\r\n  CANCEL: \"CANCEL\",\r\n  CANCEL_SELECTION: \"CANCEL_SELECTION\",\r\n  DELETE_CONFIRM: \"DELETE_CONFIRM\",\r\n  FLIP_ORIENTATION: \"FLIP_ORIENTATION\",\r\n  PAN_SCREEN: \"PAN_SCREEN\",\r\n  PRINT: \"PRINT\",\r\n  REPAINT: \"REPAINT\",\r\n  RESET_VIEW: \"RESET_VIEW\",\r\n  SELECT_ALL: \"SELECT_ALL\",\r\n  SELECT_PANEL: \"SELECT_PANEL\",\r\n  SET_CURSOR:\"SET_CURSOR\",\r\n  SET_CUR_COORD: \"SET_CUR_COORD\",\r\n  SET_DIMENSIONS: \"SET_DIMENSIONS\",\r\n  SET_PREV_STATUS: \"SET_PREV_STATUS\",\r\n  SET_RATIO: \"SET_RATIO\",\r\n  SET_REAL_WIDTH: \"SET_REAL_WIDTH\",\r\n  SET_SCALE: \"SET_SCALE\",\r\n  SET_SNAP: \"SET_SNAP\",\r\n  SET_STATUS: \"SET_STATUS\",\r\n  SET_TOP_LEFT: \"SET_TOP_LEFT\",\r\n  START_SELECTION: \"START_SELECTION\",\r\n  STOP_SELECTION: \"STOP_SELECTION\",\r\n  addShape: shape => {\r\n    return {\r\n      type: ScreenActions.ADD_PANEL,\r\n      payload: shape\r\n    };\r\n  },\r\n  cancel: () => {\r\n    return {\r\n      type: ScreenActions.CANCEL\r\n    };\r\n  },\r\n  cancelSelection: () => {\r\n    return {\r\n      type: ScreenActions.CANCEL_SELECTION\r\n    };\r\n  },\r\n  deleteConfirm: () => {\r\n    return {\r\n      type: ScreenActions.DELETE_CONFIRM\r\n    };\r\n  },\r\n\r\n  print: ({save}) => {\r\n    return {\r\n      type: ScreenActions.PRINT,\r\n      payload: save\r\n    };\r\n  },\r\n\r\n  repaint: () => {\r\n    return {\r\n      type: ScreenActions.REPAINT\r\n    };\r\n  },\r\n  resetView: () => {\r\n    return {\r\n      type: ScreenActions.RESET_VIEW\r\n    };\r\n  },\r\n  selectPanels: selectedPanels => {\r\n    return {\r\n      type: ScreenActions.SELECT_PANEL,\r\n      payload: selectedPanels\r\n    };\r\n  },\r\n  setCursor: (cursor) => {\r\n    return {\r\n      type: ScreenActions.SET_CURSOR,\r\n      payload: cursor\r\n    };\r\n  },\r\n  setCurCoord: (point, screenPoint) => {\r\n    return {\r\n      type: ScreenActions.SET_CUR_COORD,\r\n      payload: { point, screenPoint }\r\n    };\r\n  },\r\n\r\n  setDimensions: (width, height, realWidth, topLeft) => {\r\n    return {\r\n      type: ScreenActions.SET_DIMENSIONS,\r\n      payload: { width, height, realWidth, topLeft }\r\n    };\r\n  },\r\n\r\n  setPrevStatus: () => {\r\n    return {\r\n      type: ScreenActions.SET_PREV_STATUS\r\n    };\r\n  },\r\n  setRatio: ratio => {\r\n    return {\r\n      type: ScreenActions.SET_RATIO,\r\n      payload: ratio\r\n    };\r\n  },\r\n  setRealWidth: width => {\r\n    return {\r\n      type: ScreenActions.SET_REAL_WIDTH,\r\n      payload: width\r\n    };\r\n  },\r\n  setScale: (scale, anchor) => {\r\n    return {\r\n      type: ScreenActions.SET_SCALE,\r\n      payload: { scale, anchor }\r\n    };\r\n  },\r\n  setScreenStatus: (status = Status.FREE, params) => {\r\n    let payload = null;\r\n    let type = null;\r\n    switch (status) {\r\n      case Status.SELECT:\r\n        type = ScreenActions.START_SELECTION;\r\n        break;\r\n      case Status.CREATE:\r\n        type = ScreenActions.CREATE_PANEL;\r\n        payload = { creator: params.creator };\r\n        break;\r\n      case Status.CANCEL:\r\n        type = ScreenActions.CANCEL;\r\n        break;\r\n      case Status.PAN:\r\n        type = ScreenActions.PAN_SCREEN;\r\n        payload = params\r\n        break;\r\n      default:\r\n    }\r\n    return {\r\n      type,\r\n      payload\r\n    };\r\n  },\r\n  setTopLeft: p => {\r\n    return {\r\n      type: ScreenActions.SET_TOP_LEFT,\r\n      payload: p\r\n    };\r\n  },\r\n  startSelection(point, handler){\r\n    return {\r\n      type:ScreenActions.START_SELECTION,\r\n      payload:{point, handler}\r\n    }\r\n  },\r\n  stopSelection(isSelectedPanels, handler){\r\n    return {\r\n      type:ScreenActions.STOP_SELECTION,\r\n      payload:{isSelectedPanels, handler}\r\n    }\r\n  },\r\n\r\n};\r\n","export const ShapeActions = {\r\n    ADD_DIMENSION: 'ADD_DIMENSION',\r\n    ADD_FASADE_DIMENSION: 'ADD_FASADE_DIMENSION',\r\n    CREATE_DRAWER: 'CREATE_DRAWER',\r\n    CREATE_DRAWERBLOCK: 'CREATE_DRAWERBLOCK',\r\n    CREATE_PANEL: 'CREATE_PANEL',\r\n    CREATE_FASADE_DIMENSION: 'CREATE_FASADE_DIMENSION',\r\n    CREATE_SINGLE_DIMENSION: 'CREATE_SINGLE_DIMENSION',\r\n    CREATE_TWO_PANEL_DIMENSION: 'CREATE_TWO_PANEL_DIMENSION',\r\n    CREATE_TUBE: 'CREATE_TUBE',\r\n    DELETE_SELECTED: \"DELETE_SELECTED\",\r\n    DELETE_SELECTED_CONFIRM: \"DELETE_SELECTED_CONFIRM\",\r\n    DELETE_SELECTED_FASADES: \"DELETE_SELECTED_FASADES\",\r\n    DELETE_SELECTED_FASADES_CONFIRM: \"DELETE_SELECTED_FASADES_CONFIRM\",\r\n    DISTRIBUTE: \"DISTRIBUTE\",\r\n    DIVIDE_FASAD_HOR: \"DIVIDE_FASAD_HOR\",\r\n    DIVIDE_FASAD_VERT: \"DIVIDE_FASAD_VERT\",\r\n    FIX_MIN_LENGTH: \"FIX_MIN_LENGTH\",\r\n    FIX_MAX_LENGTH: \"FIX_MAX_LENGTH\",\r\n    FIX_WIDTH: \"FIX_WIDTH\",\r\n    FIX_HEIGHT: \"FIX_HEIGHT\",\r\n    MOVE_PANEL: \"MOVE_PANEL\",\r\n    SELECT_PANEL: 'SELECT_PANEL',\r\n    SELECT_PARENT: 'SELECT_PARENT',\r\n    SET_PANEL_STATE: 'SET_PANEL_STATE',\r\n    SET_PROPERTY: 'SET_PROPERTY',\r\n    addDimension: (dimension) => {\r\n        return {\r\n            type: ShapeActions.ADD_DIMENSION,\r\n            payload: dimension,\r\n        }\r\n    },\r\n    addFasadeDimension: (dimension) => {\r\n        return {\r\n            type: ShapeActions.ADD_FASADE_DIMENSION,\r\n            payload: dimension,\r\n        }\r\n    },\r\n    createDrawer: () => {\r\n        return {\r\n            type: ShapeActions.CREATE_DRAWER,\r\n        }\r\n    },\r\n    createDrawerBlock: () => {\r\n        return {\r\n            type: ShapeActions.CREATE_DRAWERBLOCK,\r\n        }\r\n    },\r\n    createPanel: (options) => {\r\n        return {\r\n            type: ShapeActions.CREATE_PANEL,\r\n            payload: options,\r\n        }\r\n    },\r\n    createFasadeDimension: (vertical) => {\r\n        return {\r\n            type: ShapeActions.CREATE_FASADE_DIMENSION,\r\n            payload: vertical\r\n        }\r\n    },\r\n    createSingleDimension: () => {\r\n        return {\r\n            type: ShapeActions.CREATE_SINGLE_DIMENSION,\r\n        }\r\n    },\r\n    createTwoPanelDimension: ({inside}) => {\r\n        return {\r\n            type: ShapeActions.CREATE_TWO_PANEL_DIMENSION,\r\n            payload: {inside}\r\n        }\r\n    },\r\n    createTube: () => {\r\n        return {\r\n            type: ShapeActions.CREATE_TUBE,\r\n        }\r\n    },\r\n    deleteSelected: () => {\r\n        return {\r\n          type: ShapeActions.DELETE_SELECTED\r\n        };\r\n      },\r\n    deleteSelectedConfirm: ({isJoints}) => {\r\n        return {\r\n          type: ShapeActions.DELETE_SELECTED_CONFIRM,\r\n          payload: {isJoints}\r\n        };\r\n      },\r\n    deleteSelectedFasades: () => {\r\n        return {\r\n          type: ShapeActions.DELETE_SELECTED_FASADES\r\n        };\r\n      },\r\n    deleteSelectedFasadesConfirm: () => {\r\n        return {\r\n          type: ShapeActions.DELETE_SELECTED_FASADES_CONFIRM,\r\n         // payload: {isJoints}\r\n        };\r\n      },\r\n    distribute: () => {\r\n        return {\r\n            type: ShapeActions.DISTRIBUTE,\r\n        };\r\n    },\r\n    divideFasadHor: (count) => {\r\n        return {\r\n            type: ShapeActions.DIVIDE_FASAD_HOR,\r\n            payload: count\r\n        };\r\n    },\r\n    divideFasadVert: (count) => {\r\n        return {\r\n            type: ShapeActions.DIVIDE_FASAD_VERT,\r\n            payload: count\r\n        };\r\n    },\r\n    fixMinLength: (fix) => {\r\n        return {\r\n            type: ShapeActions.FIX_MIN_LENGTH,\r\n            payload: fix\r\n        };\r\n    },\r\n    fixMaxLength: (fix) => {\r\n        return {\r\n            type: ShapeActions.FIX_MAX_LENGTH,\r\n            payload: fix\r\n        };\r\n    },\r\n    fixWidth: (fix) => {\r\n        return {\r\n            type: ShapeActions.FIX_WIDTH,\r\n            payload: fix\r\n        };\r\n    },\r\n    fixHeight: (fix) => {\r\n        return {\r\n            type: ShapeActions.FIX_HEIGHT,\r\n            payload: fix\r\n        };\r\n    },\r\n    movePanel: (panel, movePoint) => {\r\n        return {\r\n            type: ShapeActions.MOVE_PANEL,\r\n            payload: { panel, movePoint }\r\n        };\r\n    },\r\n    selectParent: (fasade) => {\r\n        return {\r\n            type: ShapeActions.SELECT_PARENT,\r\n            payload: fasade,\r\n        }\r\n    },\r\n    setPanelState: (state) => {\r\n        return {\r\n            type: ShapeActions.SET_PANEL_STATE,\r\n            payload: state,\r\n        }\r\n    },\r\n    setProperty: (key, value) => {\r\n        return {\r\n            type: ShapeActions.SET_PROPERTY,\r\n            payload: {key, value},\r\n        }\r\n    }\r\n}\r\n","const UserActions = {\r\n    SET_TOKEN: 'SET_TOKEN' ,\r\n    LOGOUT: 'LOGOUT',\r\n    ACTIVATE: 'ACTIVATE',\r\nsetToken: (token,remember)=>{\r\n    return {\r\n        type: 'SET_TOKEN',\r\n        payload: {token,remember},\r\n    }\r\n},\r\nlogout:()=>{\r\n    return {\r\n        type: 'LOGOUT',\r\n    }\r\n},\r\nactivate:()=>{\r\n    return {\r\n        type: 'ACTIVATE',\r\n    }\r\n}\r\n}\r\n\r\nexport default UserActions","import { useDispatch } from \"react-redux\";\r\nimport { getActions } from \"../actions/actions\";\r\n\r\nexport default function useActions(){\r\n    return getActions(useDispatch())\r\n}","import { AppActions } from \"./AppActions\";\r\nimport EventsActions from \"./EventsActions\";\r\nimport { ModelActions } from \"./ModelActions\";\r\nimport { ScreenActions } from \"./ScreenActions\";\r\nimport { ShapeActions } from \"./ShapeActions\";\r\nimport UserActions from \"./UserActions\";\r\n\r\nexport function getActions(dispatch) {\r\n    return {\r\n        log: (data) => dispatch(EventsActions.log(data)),\r\n        touchDown: () => dispatch(EventsActions.touchDown()),\r\n        touchUp: (touchCount) => dispatch(EventsActions.touchUp(touchCount)),\r\n        touchMove: () => dispatch(EventsActions.touchMove()),\r\n        touchCancel: () => dispatch(EventsActions.touchCancel()),\r\n        activate: () => dispatch(UserActions.activate()),\r\n        addDimension: (dimension) => dispatch(ShapeActions.addDimension(dimension)),\r\n        addFasadeDimension: (dimension) => dispatch(ShapeActions.addFasadeDimension(dimension)),\r\n        addShape: (shape) => dispatch(ScreenActions.addShape(shape)),\r\n        cancel: () => dispatch(ScreenActions.cancel()),\r\n        createDrawer: () => dispatch(ShapeActions.createDrawer()),\r\n        createDrawerBlock: () => dispatch(ShapeActions.createDrawerBlock()),\r\n        createPanel: (options) => dispatch(ShapeActions.createPanel(options)),\r\n        createFasadeDimension: (vertical) => dispatch(ShapeActions.createFasadeDimension(vertical)),\r\n        createSingleDimension: () => dispatch(ShapeActions.createSingleDimension()),\r\n        createTwoPanelDimension: ({ inside }) => dispatch(ShapeActions.createTwoPanelDimension({ inside })),\r\n        createTube: () => dispatch(ShapeActions.createTube()),\r\n        deleteSelected: () => dispatch(ShapeActions.deleteSelected()),\r\n        deleteSelectedConfirm: ({ isJoints }) => dispatch(ShapeActions.deleteSelectedConfirm({ isJoints })),\r\n        deleteSelectedFasades: () => dispatch(ShapeActions.deleteSelectedFasades()),\r\n        deleteSelectedFasadesConfirm: () => dispatch(ShapeActions.deleteSelectedFasadesConfirm()),\r\n        divideFasadHor: (count) => dispatch(ShapeActions.divideFasadHor(count)),\r\n        divideFasadVert: (count) => dispatch(ShapeActions.divideFasadVert(count)),\r\n        distribute: () => dispatch(ShapeActions.distribute()),\r\n        fixMinLength: (fix) => dispatch(ShapeActions.fixMinLength(fix)),\r\n        fixMaxLength: (fix) => dispatch(ShapeActions.fixMaxLength(fix)),\r\n        fixWidth: (fix) => dispatch(ShapeActions.fixWidth(fix)),\r\n        fixHeight: (fix) => dispatch(ShapeActions.fixHeight(fix)),\r\n        loadMaterials: () => dispatch(ModelActions.loadMaterials(dispatch)),\r\n        logout: () => dispatch(UserActions.logout()),\r\n        movePanel: (panel, movePoint) => dispatch(ShapeActions.movePanel(panel, movePoint)),\r\n        open: () => dispatch(ModelActions.openProject()),\r\n        newProjectConfirm: (start) => dispatch(ModelActions.newProjectConfirm(start)),\r\n        newProject: (data) => dispatch(ModelActions.newProject(data)),\r\n        print: ({ save }) => dispatch(ScreenActions.print({ save })),\r\n        resetView: () => dispatch(ScreenActions.resetView()),\r\n        requestLanguage: (lang) => dispatch(AppActions.requestLanguage(lang)),\r\n        save: () => dispatch(ModelActions.saveProject()),\r\n        selectParent: (fasade) => dispatch(ShapeActions.selectParent(fasade)),\r\n        setCursor: (cursor) => dispatch(ScreenActions.setCursor(cursor)),\r\n        setDeleteConfirm: (value) => dispatch(ModelActions.setDeleteConfirm(value)),\r\n        setInformation: (info) => dispatch(ModelActions.setInformation(info)),\r\n        setLanguage: (captions) => dispatch(AppActions.setLanguage(captions)),\r\n        setMaterial: (mat) => dispatch(ModelActions.setMaterial(mat)),\r\n        setLoadedMaterials: (mat) => dispatch(ModelActions.setLoadedMaterials(mat)),\r\n        setPanelState: (state) => dispatch(ShapeActions.setPanelState(state)),\r\n        setPrevStatus: () => dispatch(ScreenActions.setPrevStatus()),\r\n        setProperty: (key, value) => dispatch(ShapeActions.setProperty(key, value)),\r\n        setRealWidth: (width) => dispatch(ScreenActions.setRealWidth(width)),\r\n        setScale: (scale, anchor) => dispatch(ScreenActions.setScale(scale, anchor)),\r\n        setScreenStatus: (status, params) => dispatch(ScreenActions.setScreenStatus(status, params)),\r\n        setToken: (token, remember) => dispatch(UserActions.setToken(token, remember)),\r\n        setWardrobeDimensions: (dimensions) => dispatch(ModelActions.setWardrobeDimensions(dimensions)),\r\n        setWorkspace: (value) => dispatch(ModelActions.setWorkspace(value)),\r\n        showAlert: (show, message) => dispatch(AppActions.showAlert(show, message)),\r\n        showConfirm: (show, messageKey, actions) => dispatch(AppActions.showConfirm(show, messageKey, actions)),\r\n        showDialog: (show, dialog) => dispatch(AppActions.showDialog(show, dialog)),\r\n        showHelp: (show) => dispatch(AppActions.showHelp(show)),\r\n        startSelection: (point, handler) => dispatch(ScreenActions.startSelection(point, handler)),\r\n        stopSelection: (isSelectedPanels, handler) => dispatch(ScreenActions.stopSelection(isSelectedPanels, handler)),\r\n        updateState: () => dispatch(ModelActions.updateState()),\r\n    }\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ViewPort from './ViewPort'\r\nimport { pointerMove, pointerDown, pointerUp, pointerLeave, pointerEnter, mouseWheel, click, doubleClick, keyDown, keyPress, keyUp } from \"../functions/viewPortHandlers\";\r\nimport TouchManager from \"../handlers/TouchManager\";\r\nimport useActions from \"../customHooks/useActions\";\r\n\r\n\r\nexport function getViewPortState(){\r\n    return {\r\n    curRealPoint: { x: 0, y: 0 },\r\n    curCanvasPoint: { x: 225, y: 225 },\r\n    gridStep: 10,\r\n    gridStepPixels: 1,\r\n    marginTop: 0, marginLeft: 0, marginBottom: 0, marginRight: 0,\r\n    ratio: 1, pixelRatio: 1,\r\n    realWidth: 3000, realHeight: 2600,\r\n    viewPortHeight: 400,\r\n    viewPortWidth: 550,\r\n    selectDist: 2,\r\n    snapDist: 20, snapMinDist: 10,\r\n    topLeft: { x: -5000, y: 2500 },\r\n    bottomRight: { x: 2500, y: -100 },\r\n    touchManager: new TouchManager(),\r\n    }\r\n}\r\nconst initialState = getViewPortState()\r\n\r\nexport default function ViewPortContainer() {\r\n    const [viewPortData, setViewPortData] = useState(initialState)\r\n    const props = useRef()\r\n    const appDataRef = useRef()\r\n    const appData = useSelector(store => store)\r\n    appDataRef.current = appData\r\n    const appActions = useActions()\r\n    const mouseHandler = appData.mouseHandler\r\n    props.current = { mouseHandler, viewPortData, setViewPortData, appActions, appData }\r\n    useEffect(() => {\r\n        window.addEventListener('keypress', (e) => { keyPress(e, { mouseHandler }) })\r\n        window.addEventListener('keydown', (e) => { keyDown(e, { appData: appDataRef.current, appActions }) })\r\n        window.addEventListener('keyup', (e) => { keyUp(e, { appData }) })\r\n        appActions.loadMaterials()\r\n        appActions.newProjectConfirm(true)\r\n        }, [])\r\n\r\n    const eventHandlers = {\r\n        onPointerMove: (e) => { pointerMove(e, props.current) },\r\n        onPointerDown: (e) => { pointerDown(e, props.current) },\r\n        onPointerUp: (e) => { pointerUp(e, props.current) },\r\n        onMouseWheel: (e) => { mouseWheel(e, props.current) },\r\n        onPointerLeave: (e) => { pointerLeave(e, props.current) },\r\n        onPointerEnter: (e) => { pointerEnter(e, props.current) },\r\n        onClick: (e) => { click(e, props.current) },\r\n        onDoubleClick: (e) => { doubleClick(e, props.current) },\r\n    }\r\n    return <ViewPort\r\n        appData={appData}\r\n        appActions={appActions}\r\n        viewPortData={viewPortData}\r\n        setViewPortData={setViewPortData}\r\n        eventHandlers={eventHandlers}\r\n    />\r\n}\r\n\r\n","import { getPoint } from \"./viewPortFunctions\";\r\nimport { keyHandlers } from \"../keyHandlers/options\";\r\n\r\nexport function pointerMove(e, { mouseHandler, viewPortData, setViewPortData, appActions, appData }) {\r\n    const curPoint = getPoint(e)\r\n    if (e.pointerType === \"touch\")\r\n        mouseHandler.touchMove({ pointerId: e.pointerId, curPoint, viewPortData, setViewPortData, appActions, appData });\r\n    else\r\n        mouseHandler.move({\r\n            curPoint, viewPortData, setViewPortData, appActions, appData,\r\n            keys: { shiftKey: e.shiftKey, ctrlKey: e.ctrlKey, altKey: e.altKey }\r\n        })\r\n}\r\nexport function pointerDown(e, { mouseHandler, viewPortData, setViewPortData, appActions, appData }) {\r\n    const curPoint = getPoint(e)\r\n    e.preventDefault()\r\n    if (e.pointerType === \"touch\")\r\n        mouseHandler.touchDown({ pointerId: e.pointerId, curPoint: curPoint, viewPortData, setViewPortData, appActions, appData });\r\n    else\r\n        mouseHandler.down({ button: e.button, curPoint: curPoint, viewPortData, setViewPortData, appActions, appData, keys: { shiftKey: e.shiftKey, ctrlKey: e.ctrlKey, altKey: e.altKey } });\r\n    //e.preventDefault();\r\n}\r\n\r\nexport function pointerUp(e, { mouseHandler, viewPortData, setViewPortData, appActions, appData }) {\r\n    const curPoint = getPoint(e)\r\n    if (e.pointerType === \"touch\")\r\n        mouseHandler.touchUp({ pointerId: e.pointerId, curPoint, viewPortData, setViewPortData, appActions, appData });\r\n    else\r\n        mouseHandler.up({ button: e.button, curPoint, viewPortData, setViewPortData, appActions, appData });\r\n}\r\n\r\nexport function mouseWheel(e, { mouseHandler, viewPortData, setViewPortData, appActions }) {\r\n    const curPoint = getPoint(e)\r\n    mouseHandler.wheel({ deltaY: e.deltaY, curPoint, viewPortData, setViewPortData, appActions, keys: { shiftKey: e.shiftKey, ctrlKey: e.ctrlKey, altKey: e.altKey } })\r\n    e.preventDefault();\r\n}\r\nexport function pointerLeave(e, { mouseHandler, viewPortData, setViewPortData, appActions, appData }) {\r\n    if (e.pointerType === \"touch\")\r\n        mouseHandler.touchUp({ pointerId: e.pointerId, viewPortData, setViewPortData, appActions, appData });\r\n    else\r\n        mouseHandler.leave({ viewPortData, appActions });\r\n}\r\n\r\nexport function pointerEnter(e, { mouseHandler, viewPortData, setViewPortData, appActions, appData }) {\r\n}\r\n\r\nexport function click(e, { mouseHandler, viewPortData, setViewPortData, appActions, appData }) {\r\n    const curPoint = getPoint(e)\r\n    e.preventDefault()\r\n    mouseHandler.click({ button: e.button, curPoint, viewPortData, setViewPortData, appActions, appData, keys: { shiftKey: e.shiftKey, ctrlKey: e.ctrlKey, altKey: e.altKey } });\r\n}\r\n\r\nexport function doubleClick(e, { mouseHandler, viewPortData, setViewPortData, appActions, appData }) {\r\n    const curPoint = getPoint(e)\r\n    if (e.pointerType === \"touch\")\r\n        mouseHandler.doubleClick({ button: 0, curPoint, viewPortData, setViewPortData, appActions, appData, keys: { shiftKey: e.shiftKey, ctrlKey: e.ctrlKey, altKey: e.altKey } });\r\n    else\r\n        mouseHandler.doubleClick({ button: e.button, curPoint, viewPortData, setViewPortData, appActions, appData, keys: { shiftKey: e.shiftKey, ctrlKey: e.ctrlKey, altKey: e.altKey } });\r\n}\r\n\r\nexport function keyPress(e, { mouseHandler }) {\r\n    if (mouseHandler.keypress(e.code))\r\n        if (e.target === document.body) e.preventDefault();\r\n};\r\n\r\nexport function keyUp(e, { appData }) {\r\n    //appData.cursor.setAdditional({ shiftKey: e.shiftKey, altKey: e.altKey });\r\n};\r\n\r\nexport function keyDown(e, { appData, appActions }) {\r\n    if (window.KEYDOWNHANDLE === false) return;\r\n    appData.cursor.setAdditional({ shiftKey: e.shiftKey, altKey: e.altKey });\r\n    keyHandlers.forEach(key => {\r\n        if (e.ctrlKey === key.ctrlKey && e.shiftKey === key.shiftKey && e.altKey === key.altKey && e.keyCode === key.keyCode) {\r\n            const keyHandler = new key.handler()\r\n            keyHandler.keyDown(e, { appData, appActions })\r\n            e.preventDefault();\r\n        }\r\n    })\r\n}","import Geometry, { Intersection } from \"../../utils/geometry\";\r\nimport Shape from \"./Shape\";\r\nimport ShapeStyle from \"./ShapeStyle\";\r\nimport { Color } from \"../colors\";\r\nimport { getJointData, isPointInPanelArea } from \"../../reducers/panels\";\r\nimport { PropertyTypes } from \"./PropertyData\";\r\nimport { PlaceErrorMessages } from \"./PlaceErrors\";\r\nimport { CustomPaths, getCustomPath } from \"./shapes\";\r\nexport default class PanelShape extends Shape {\r\n  type = Shape.PANEL;\r\n  constructor(data) {\r\n    super();\r\n    this.gabarit = data.gabarit; //габаритная деталь\r\n    this.length = data.length;\r\n    this.width = data.gabarit ? data.wardrobe.depth : data.wardrobe.depth - 100;\r\n    this.panelMargin = data.panelMargin || 0;\r\n    if (!data.active) this.active = false;\r\n    this.vertical = data.vertical;\r\n    this.name = data.name || (this.vertical ? \"Стойка внутр\" : \"Полка\");\r\n    this.defaultMinLength = data.minLength || 282;;\r\n    this.defaultMaxLength = data.maxLength || 10000000;\r\n    this.minLength = this.defaultMinLength\r\n    this.maxLength = this.defaultMaxLength;\r\n    this.state.selectable = data.selectable === undefined ? true : data.selectable;\r\n    this.state.deletable = data.deletable === undefined ? true : data.deletable;\r\n    this.state.fixable = data.fixable === undefined ? true : data.fixable;\r\n    this.state.fixed_move = data.fixed_move === undefined ? false : data.fixed_move;\r\n    this.state.fixedLength = data.fixedLength === undefined ? { min: false, max: false } : data.fixedLength;\r\n    this.state.resizable = data.resizable === undefined ? true : data.resizable;\r\n    this.state.measurable = data.measurable === undefined ? true : data.measurable;\r\n    this.state.drillable = data.drillable === undefined ? true : data.drillable;\r\n    this.nodrill = data.nodrill === undefined ? false : data.nodrill;\r\n    this.state.blocked = data.blocked === undefined ? false : data.fixed;\r\n    this.state.hidden = data.hidden;\r\n    this.thickness = data.thickness || 16;\r\n    const position = data.position || { x: 0, y: 0 };\r\n    const w = data.vertical ? this.thickness : data.length;\r\n    const h = data.vertical ? data.length : this.thickness;\r\n    const last = { x: position.x + w, y: position.y + h };\r\n    this.rect = { ...position, last, w, h };\r\n    this.setStyle(new ShapeStyle(Color.BLACK, ShapeStyle.SOLID));\r\n    this.jointFromBackSide = data.jointFromBackSide || new Set();\r\n    this.jointFromFrontSide = data.jointFromFrontSide || new Set();\r\n    this.parallelFromBack = data.parallelFromBack || new Set();\r\n    this.parallelFromFront = data.parallelFromFront || new Set();\r\n    this.dimensions = new Set();\r\n    this.properties = [\r\n      { key: \"name\", type: PropertyTypes.STRING, editable: true, setValue: (value) => { this.name = value } },\r\n      { key: \"length\", type: PropertyTypes.INTEGER_POSITIVE_NUMBER, editable: this.state.resizable, setValue: (value) => { this.resize(value) } },\r\n      { key: \"width\", type: PropertyTypes.INTEGER_POSITIVE_NUMBER },\r\n      { key: \"nodrill\", type: PropertyTypes.BOOL, editable: true, hidden: !this.state.drillable, setValue: (value) => { this.nodrill = value }},\r\n    ]\r\n  }\r\n\r\n  draw(ctx, realRect, screenRect, print = false) {\r\n    if (this.state.hidden) return;\r\n    let saveState = {...this.state}\r\n    if(print) this.state = {...this.state, selected: false, highlighted: false}  \r\n    super.draw(ctx, realRect, screenRect);\r\n    const topLeft = Geometry.realToScreen(this.rect, realRect, screenRect);\r\n    const bottomRight = Geometry.realToScreen(this.rect.last, realRect, screenRect);\r\n    const width = bottomRight.x - topLeft.x;\r\n    const height = bottomRight.y - topLeft.y;\r\n    let x = topLeft.x\r\n    let y = topLeft.y\r\n    ctx.strokeRect(x, y, width, height);\r\n    if(!print && (this.state.fixedLength.max || this.state.fixedLength.min || this.state.fixed_move)) {\r\n      ctx.lineWidth = 1\r\n      const path = new Path2D(getCustomPath({x: x + width / 2, y: y + height / 2}, CustomPaths.LOCK))\r\n      ctx.fill(path);\r\n    }\r\n    if(print) this.state = {...saveState}\r\n  }\r\n  refresh(realRect, screenRect) {\r\n    if (this.vertical) {\r\n      this.rect.height = this.length;\r\n      this.rect.width = this.thickness;\r\n    } else {\r\n      this.rect.width = this.length;\r\n      this.rect.height = this.thickness;\r\n    }\r\n    this.rect.last = {\r\n      x: this.rect.x + this.rect.width,\r\n      y: this.rect.y + this.rect.height,\r\n    };\r\n  }\r\n\r\n  getProperties() {\r\n    return super.getProperties()\r\n\r\n  }\r\n  setPosition(x, y) {\r\n    this.rect.x = x;\r\n    this.rect.y = y;\r\n    this.rect.last = { x: x + this.rect.width, y: y + this.rect.height };\r\n  }\r\n  getPosition() {\r\n    return this.rect;\r\n  }\r\n  setHidden(hidden) {\r\n    this.state.hidden = hidden;\r\n  }\r\n  resize(length) {\r\n    //if (length < this.minLength) return false\r\n    const dl = length - this.length\r\n    let dx, dy\r\n    let joint = this.jointToBack\r\n    if (joint) {\r\n      if (this.vertical) {\r\n        dx = 0;\r\n        dy = dl\r\n      } else {\r\n        dx = dl;\r\n        dy = 0\r\n      }\r\n      joint.moveTo(dx, dy)\r\n    }\r\n    joint = this.jointToFront\r\n    if (joint) {\r\n      if (this.vertical) {\r\n        dx = 0;\r\n        dy = -dl\r\n      } else {\r\n        dx = -dl;\r\n        dy = 0\r\n      }\r\n      joint.moveTo(dx, dy)\r\n    }\r\n  }\r\n\r\n  setLength(length) {\r\n    this.length = length;\r\n    this.refresh();\r\n  }\r\n\r\n  getLength() {\r\n    return this.length;\r\n  }\r\n\r\n  fixMinLength(fix) {\r\n    this.minLength = fix ? this.length : this.defaultMinLength;\r\n    this.state.fixedLength.min = fix\r\n  }\r\n  fixMaxLength(fix) {\r\n    this.maxLength = fix ? this.length : this.defaultMaxLength\r\n    this.state.fixedLength.max = fix\r\n  }\r\n\r\n\r\n  moveTo(dx, dy, onGabaritChange = () => { }, doNotMove = false, prevPanel) {\r\n    const { x, y } = this.getPosition();\r\n    if (this.vertical) dy = 0;\r\n    else dx = 0;\r\n    const oldDX = dx;\r\n    const oldDY = dy;\r\n    let newX = x + dx;\r\n    let newY = y + dy;\r\n    let result;\r\n\r\n    ; ({ result, newX, newY, dx, dy } = this.isMoveAvailable({ newX, newY, dx, dy, prevPanel }));\r\n    if (doNotMove) return { result, newX, newY, newDX: dx, newDY: dy }\r\n    if (result) {\r\n      this.setPosition(newX, newY);\r\n      for (let joint of this.jointFromBackSide) {\r\n        joint.setLength(joint.getLength() + (dx + dy));\r\n      }\r\n      for (let joint of this.jointFromFrontSide) {\r\n        joint.setLength(joint.getLength() - (dx + dy));\r\n        const jpos = joint.getPosition();\r\n        joint.setPosition(jpos.x + dx, jpos.y + dy);\r\n      }\r\n      if (this.gabarit) onGabaritChange(); //to recalculate wardrobe size\r\n      return { result: true, newDX: oldDX - dx, newDY: oldDY - dy };\r\n    } else return { result: false };\r\n  }\r\n\r\n  isMoveAvailable({ newX: x, newY: y, dx, dy, prevPanel }) {\r\n    if (this.state.fixed_move) return { result: false };\r\n    const resultNear = this.snapToNearest({ newX: x, newY: y, dx, dy, prevPanel });\r\n    const resultJoint = this.snapToMinJointLength({ newX: x, newY: y, dx, dy });\r\n    if (resultNear.result === true) {\r\n      if (resultJoint.result === false) return { ...resultNear };\r\n      if (this.vertical) {\r\n        if (dx < 0)\r\n          return resultNear.newX > resultJoint.newX\r\n            ? { ...resultNear }\r\n            : { ...resultJoint };\r\n        return resultNear.newX < resultJoint.newX\r\n          ? { ...resultNear }\r\n          : { ...resultJoint };\r\n      } else {\r\n        if (dy < 0)\r\n          return resultNear.newY > resultJoint.newY\r\n            ? { ...resultNear }\r\n            : { ...resultJoint };\r\n        return resultNear.newY < resultJoint.newY\r\n          ? { ...resultNear }\r\n          : { ...resultJoint };\r\n      }\r\n    }\r\n    if (resultJoint.result === true) return { ...resultJoint };\r\n    return { result: true, newX: x, newY: y, dx, dy };\r\n  }\r\n\r\n  snapToMinJointLength({ newX: x, newY: y, dx, dy }) {\r\n    const { jointsFromBackMinToMax, jointsFromFrontMinToMax } = getJointData(this)\r\n    let minLengthDelta = 0\r\n    let maxLengthDelta = 0\r\n    for (let joint of jointsFromBackMinToMax) {\r\n      let delta = joint.getLength() + dx + dy - joint.minLength;\r\n      if (delta < minLengthDelta) minLengthDelta = delta\r\n      delta = joint.maxLength - (joint.getLength() + dx + dy);\r\n      if (delta < maxLengthDelta) maxLengthDelta = delta\r\n    }\r\n    let result = []\r\n    result.push({\r\n      delta: minLengthDelta,\r\n      result: this.vertical ?\r\n        { result: true, newX: x - minLengthDelta, newY: y, dx: dx - minLengthDelta, dy }\r\n        :\r\n        { result: true, newX: x, newY: y - minLengthDelta, dx, dy: dy - minLengthDelta }\r\n    })\r\n    result.push({\r\n      delta: maxLengthDelta,\r\n      result: this.vertical ?\r\n        { result: true, newX: x + maxLengthDelta, newY: y, dx: dx + maxLengthDelta, dy }\r\n        :\r\n        { result: true, newX: x, newY: y + maxLengthDelta, dx, dy: dy + maxLengthDelta }\r\n    })\r\n    minLengthDelta = 0\r\n    maxLengthDelta = 0\r\n    jointsFromFrontMinToMax.forEach(joint => {\r\n      let delta = joint.getLength() - dx - dy - joint.minLength;\r\n      if (delta < minLengthDelta) minLengthDelta = delta\r\n      delta = joint.maxLength - joint.getLength() + dx + dy;\r\n      if (delta < maxLengthDelta) maxLengthDelta = delta\r\n    })\r\n    result.push({\r\n      delta: minLengthDelta,\r\n      result: this.vertical ?\r\n        { result: true, newX: x + minLengthDelta, newY: y, dx: dx + minLengthDelta, dy }\r\n        :\r\n        { result: true, newX: x, newY: y + minLengthDelta, dx, dy: dy + minLengthDelta }\r\n    })\r\n    result.push({\r\n      delta: maxLengthDelta,\r\n      result: this.vertical ?\r\n        { result: true, newX: x - maxLengthDelta, newY: y, dx: dx - maxLengthDelta, dy }\r\n        :\r\n        { result: true, newX: x, newY: y - maxLengthDelta, dx, dy: dy - maxLengthDelta }\r\n    })\r\n    result.sort((r1, r2) => r1.delta - r2.delta)\r\n    if (result[0].delta < 0) return result[0].result\r\n    return { result: false, newX: x, newY: y, dx, dy };\r\n  }\r\n\r\n  snapToNearest({ newX: x, newY: y, dx, dy, prevPanel }) {\r\n    const { nearestFromBack, nearestFromFront } = this.getNearest(prevPanel);\r\n    let near = nearestFromBack;\r\n    if (near) {\r\n      const margin = Math.max(this.panelMargin, near.panelMargin);\r\n      if (this.vertical) {\r\n        const minX = near.rect.x + near.thickness + margin;\r\n        const minDX = minX - x;\r\n        if (x < minX)\r\n          return { result: true, newX: minX, newY: y, dx: dx + minDX, dy };\r\n      } else {\r\n        const minY = near.rect.y + near.thickness + margin;\r\n        const minDY = minY - y;\r\n        if (y < minY)\r\n          return { result: true, newX: x, newY: minY, dx, dy: dy + minDY };\r\n      }\r\n    }\r\n    near = nearestFromFront;\r\n    if (near) {\r\n      const margin = Math.max(this.panelMargin, near.panelMargin);\r\n      if (this.vertical) {\r\n        const minX = near.rect.x - this.thickness - margin;\r\n        const minDX = x - minX;\r\n        if (minX < x)\r\n          return { result: true, newX: minX, newY: y, dx: dx - minDX, dy };\r\n      } else {\r\n        const minY = near.rect.y - this.thickness - margin;\r\n        const minDY = y - minY;\r\n        if (minY < y)\r\n          return { result: true, newX: x, newY: minY, dx, dy: dy - minDY };\r\n      }\r\n    }\r\n    return { result: false, newX: x, newY: y, dx, dy };\r\n  }\r\n\r\n  getNearest(prevPanel) {\r\n    let nearestFromBack = Array.from(this.parallelFromBack)[0];\r\n    let nearestFromFront = Array.from(this.parallelFromFront)[0];\r\n    let maxX = 0\r\n    let maxY = 0;\r\n    for (let par of this.parallelFromBack) {\r\n      if(prevPanel === par) continue\r\n      if (par.rect.x + par.thickness > maxX && this.vertical) {\r\n        nearestFromBack = par;\r\n        maxX = par.rect.x;\r\n      }\r\n      if (par.rect.y + par.thickness > maxY && !this.vertical) {\r\n        nearestFromBack = par;\r\n        maxY = par.rect.y;\r\n      }\r\n    }\r\n    maxX = 1000000;\r\n    maxY = 1000000;\r\n    for (let par of this.parallelFromFront) {\r\n      if(prevPanel === par) continue\r\n      if (par.rect.x < maxX && this.vertical) {\r\n        nearestFromFront = par;\r\n        maxX = par.rect.x;\r\n      }\r\n      if (par.rect.y < maxY && !this.vertical) {\r\n        nearestFromFront = par;\r\n        maxY = par.rect.y;\r\n      }\r\n    }\r\n    return { nearestFromBack, nearestFromFront };\r\n  }\r\n\r\n  canBePlaced(x, y, panels, wardrobe) {\r\n    if (\r\n      x < 16 ||\r\n      x > wardrobe.width - 16 ||\r\n      y < 46 ||\r\n      y > wardrobe.height - 16\r\n    )\r\n      return {result: false, reason: PlaceErrorMessages.OUTSIDE_AREA};\r\n    this.parallelFromBack = new Set();\r\n    this.parallelFromFront = new Set();\r\n    for (let panel of panels) {\r\n      if (!(panel.vertical === this.vertical)) continue;\r\n      if (!isPointInPanelArea({x, y}, panel)) continue;\r\n      const margin = Math.max(this.panelMargin, panel.panelMargin);\r\n      if (this.vertical) {\r\n        if (x >= panel.rect.x) {\r\n          if (x - (panel.rect.x + panel.thickness) < margin) return {result: false, reason: PlaceErrorMessages.ON_PANEL}\r\n          if (panel.rect.x + this.thickness <= x)\r\n            this.parallelFromBack.add(panel);\r\n        }\r\n        if (x < panel.rect.x) {\r\n          if (panel.rect.x - (x + this.thickness) < margin) return {result: false, reason: PlaceErrorMessages.ON_PANEL}\r\n          if (panel.rect.x >= x) this.parallelFromFront.add(panel);\r\n        }\r\n      } else {\r\n        if (y >= panel.rect.y) {\r\n          if (y - (panel.rect.y + panel.thickness) < margin) return {result: false, reason: PlaceErrorMessages.ON_PANEL}\r\n          if (panel.rect.y + this.thickness <= y)\r\n            this.parallelFromBack.add(panel);\r\n        }\r\n        if (y < panel.rect.y) {\r\n          if (panel.rect.y - (y + this.thickness) < margin) return {result: false, reason: PlaceErrorMessages.ON_PANEL}\r\n          if (panel.rect.y >= y) this.parallelFromFront.add(panel);\r\n        }\r\n      }\r\n    }\r\n    return {result: true};\r\n  }\r\n  findConstraints(x, y, panels, wardrobe) {\r\n    let minX = 0;\r\n    let maxX = wardrobe.width;\r\n    let minY = 46;\r\n    let maxY = wardrobe.height;\r\n    for (let panel of panels) {\r\n      if (panel === this) continue;\r\n      if (this.vertical === panel.vertical) continue;\r\n      if (this.vertical) {\r\n        if ((x - panel.rect.x) * (x - panel.rect.last.x) > 0) continue; //if panels not intersect\r\n        if (panel.rect.y <= y) {\r\n          if (panel.rect.y + panel.thickness >= minY) {\r\n            minY = panel.rect.y + panel.thickness;\r\n            this.jointToFront = panel;\r\n          }\r\n        }\r\n        if (panel.rect.y > y) {\r\n          if (panel.rect.y <= maxY) {\r\n            maxY = panel.rect.y;\r\n            this.jointToBack = panel;\r\n          }\r\n        }\r\n      } else {\r\n        if ((y - panel.rect.y) * (y - panel.rect.last.y) > 0) continue; //if panels not intersect\r\n        if (panel.rect.x <= x) {\r\n          if (panel.rect.x + panel.thickness >= minX) {\r\n            minX = panel.rect.x + panel.thickness;\r\n            this.jointToFront = panel;\r\n          }\r\n        }\r\n        if (panel.rect.x > x) {\r\n          if (panel.rect.x <= maxX) {\r\n            maxX = panel.rect.x;\r\n            this.jointToBack = panel;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.length = this.vertical ? maxY - minY : maxX - minX;\r\n    this.rect = this.vertical ? { x, y: minY } : { x: minX, y };\r\n    this.refresh();\r\n    const result = (\r\n      this.jointToBack.type === Shape.PANEL &&\r\n      this.jointToFront.type === Shape.PANEL// && this.length >= this.minLength\r\n    );\r\n    return result? {result} : {result, reason: PlaceErrorMessages.NO_JOINTS}\r\n  }\r\n\r\n  getSingleDimensionData(){\r\n    const firstPoint = this.vertical ? {x: this.rect.x + this.thickness / 2, y: this.rect.y} : {x: this.rect.x, y: this.rect.y + this.thickness / 2}\r\n    const secondPoint = this.vertical ? {x: this.rect.x + this.thickness / 2, y: this.rect.last.y} : {x: this.rect.last.x, y: this.rect.last.y - this.thickness / 2}\r\n    const midPoint = { x: (firstPoint.x + secondPoint.x) / 2, y: (firstPoint.y + secondPoint.y) / 2 }\r\n    return {vertical: this.vertical, firstPoint, secondPoint, midPoint}\r\n  }\r\n\r\n  isInSelectionRect({ topLeft, bottomRight }) {\r\n    const inRect = [\r\n      Geometry.pointInRect(this.rect, topLeft, bottomRight),\r\n      Geometry.pointInRect(this.rect.last, topLeft, bottomRight),\r\n    ];\r\n    const full = inRect.every((i) => i === true);\r\n    const cross = Intersection.RectangleRectangle(topLeft, bottomRight, this.rect, this.rect.last).length > 0;\r\n    return { cross, full };\r\n  }\r\n  \r\n  isUnderCursor(p, pixelRatio) {\r\n    const mult = 2;\r\n    return (\r\n      p.x >= this.rect.x - pixelRatio * mult &&\r\n      p.x <= this.rect.x + this.rect.width + pixelRatio * mult &&\r\n      p.y >= this.rect.y - pixelRatio * mult &&\r\n      p.y <= this.rect.y + this.rect.height + pixelRatio * mult\r\n    );\r\n  }\r\n}\r\n","import Geometry from \"../../utils/geometry\";\r\nimport Shape from \"./Shape\";\r\nimport { PropertyTypes } from \"./PropertyData\";\r\nimport PanelShape from \"./PanelShape\";\r\nexport default class DoublePanelShape extends PanelShape {\r\n  type = Shape.PANEL;\r\n  constructor(data) {\r\n    super({...data, vertical: true, thickness: 32});\r\n    this.name = \"Стойка внутр\";\r\n    this.double = true\r\n    this.dimensions = new Set();\r\n    this.properties = [\r\n        {key: \"name\", type: PropertyTypes.STRING, editable: true},\r\n        {key: \"length\", type: PropertyTypes.INTEGER_POSITIVE_NUMBER},\r\n        {key: \"width\", type: PropertyTypes.INTEGER_POSITIVE_NUMBER},\r\n    ]\r\n  }\r\n\r\n  draw(ctx, realRect, screenRect, print = false) {\r\n    if (this.state.hidden) return;\r\n    this.refresh(realRect, screenRect);\r\n    this.refreshStyle(ctx)\r\n    const topLeft = Geometry.realToScreen(this.rect, realRect, screenRect);\r\n    const bottomRight = Geometry.realToScreen(this.rect.last, realRect, screenRect);\r\n    const width = bottomRight.x - topLeft.x;\r\n    const height = bottomRight.y - topLeft.y;\r\n    let x = topLeft.x;\r\n    let y = topLeft.y;\r\n    ctx.strokeRect(x, y, width / 2, height);\r\n    ctx.strokeRect(x, y, width, height);\r\n  }\r\n\r\n}\r\n","import DoublePanelShape from \"../components/shapes/DoublePanelShape\"\r\nimport FasadeShape from \"../components/shapes/FasadeShape\"\r\nimport PanelShape from \"../components/shapes/PanelShape\"\r\n\r\nexport function createNewState({ wardrobe }) {\r\n    if (!wardrobe) return { wardrobe: {}, panels: [] }\r\n    const width = wardrobe.double ? wardrobe.width / 2 : wardrobe.width\r\n    const leg = 30\r\n    let panels\r\n    const state = {\r\n        fixed_move: true,\r\n        fixed_minlength: true,\r\n        fixable: false,\r\n        deletable: false,\r\n        resizeable: false,\r\n        drillable: false,\r\n        gabarit: true\r\n    }\r\n    if (!wardrobe.double) {\r\n        panels = [\r\n            new PanelShape({ id: 0, wardrobe, name: \"Крыша\", length: width, vertical: false, position: { x: 0, y: wardrobe.height - 16 }, ...state }),\r\n            new PanelShape({ id: 1, wardrobe, name: \"Дно\", length: width, vertical: false, position: { x: 0, y: leg }, ...state }),\r\n            new PanelShape({ id: 2, wardrobe, name: \"Стойка боковая\", length: wardrobe.height - 32 - leg, vertical: true, position: { x: 0, y: 16 + leg }, ...state }),\r\n            new PanelShape({ id: 3, wardrobe, name: \"Стойка боковая\", length: wardrobe.height - 32 - leg, vertical: true, position: { x: width - 16, y: 16 + leg }, ...state }),\r\n        ]\r\n        panels[0].jointFromBackSide = new Set([panels[2], panels[3]])\r\n        panels[0].parallelFromBack = new Set([panels[1]])\r\n        panels[1].jointFromFrontSide = new Set([panels[2], panels[3]])\r\n        panels[1].parallelFromFront = new Set([panels[0]])\r\n        panels[2].jointFromFrontSide = new Set([panels[0], panels[1]])\r\n        panels[2].parallelFromFront = new Set([panels[3]])\r\n        panels[2].jointToFront = panels[1]\r\n        panels[2].jointToBack = panels[0]\r\n        panels[3].jointFromBackSide = new Set([panels[0], panels[1]])\r\n        panels[3].parallelFromBack = new Set([panels[2]])\r\n        panels[3].jointToFront = panels[1]\r\n        panels[3].jointToBack = panels[0]\r\n    } else {\r\n        wardrobe.width1 = width\r\n        wardrobe.width2 = width\r\n        panels = [\r\n            new PanelShape({ id: 0, wardrobe, name: \"Крыша\", length: width, vertical: false, position: { x: 0, y: wardrobe.height - 16 }, ...state }),\r\n            new PanelShape({ id: 1, wardrobe, name: \"Крыша\", length: width, vertical: false, position: { x: width, y: wardrobe.height - 16 }, ...state }),\r\n            new PanelShape({ id: 2, wardrobe, name: \"Дно\", length: width, vertical: false, position: { x: 0, y: leg }, ...state }),\r\n            new PanelShape({ id: 3, wardrobe, name: \"Дно\", length: width, vertical: false, position: { x: width, y: leg }, ...state }),\r\n            new PanelShape({ id: 4, wardrobe, name: \"Стойка боковая\", length: wardrobe.height - 32 - leg, vertical: true, position: { x: 0, y: 16 + leg }, ...state }),\r\n            new PanelShape({ id: 5, wardrobe, name: \"Стойка боковая\", length: wardrobe.height - 32 - leg, vertical: true, position: { x: width * 2 - 16, y: 16 + leg }, ...state }),\r\n            new DoublePanelShape({ id: 6, wardrobe, name: \"Стойка внутр\", length: wardrobe.height - 32 - leg, vertical: true, position: { x: width - 16, y: 16 + leg }, ...state, fixable: true, gabarit: true }),\r\n        ]\r\n        panels[0].jointFromBackSide = new Set([panels[4], panels[6]])\r\n        panels[0].parallelFromBack = new Set([panels[2]])\r\n        panels[1].jointFromBackSide = new Set([panels[5], panels[6]])\r\n        panels[1].parallelFromBack = new Set([panels[3]])\r\n        panels[2].jointFromFrontSide = new Set([panels[4], panels[6]])\r\n        panels[2].parallelFromFront = new Set([panels[0]])\r\n        panels[3].jointFromFrontSide = new Set([panels[5], panels[6]])\r\n        panels[3].parallelFromFront = new Set([panels[1]])\r\n\r\n        panels[4].jointFromFrontSide = new Set([panels[0], panels[2]])\r\n        panels[4].parallelFromFront = new Set([panels[6]])\r\n        panels[5].jointFromBackSide = new Set([panels[1], panels[3]])\r\n        panels[5].parallelFromBack = new Set([panels[6]])\r\n        panels[4].jointToFront = panels[2]\r\n        panels[4].jointToBack = panels[0]\r\n        panels[5].jointToFront = panels[3]\r\n        panels[5].jointToBack = panels[1]\r\n\r\n        panels[6].jointFromBackSide = new Set([panels[0], panels[2]])\r\n        panels[6].parallelFromBack = new Set([panels[4]])\r\n        panels[6].jointFromFrontSide = new Set([panels[1], panels[3]])\r\n        panels[6].parallelFromFront = new Set([panels[5]])\r\n        panels[6].jointToFront = panels[2]\r\n        panels[6].jointToBack = panels[0]\r\n    }\r\n\r\n    return { wardrobe, panels }\r\n}\r\n\r\nexport function createFasades({ wardrobe }) {\r\n    const width = getFasadeWidth(wardrobe.width, wardrobe.fasadeCount)\r\n    const height = wardrobe.height - 157\r\n    const fasades = []\r\n    for(let i=0; i < wardrobe.fasadeCount; i++)\r\n        fasades.push(new FasadeShape({height, width, base: wardrobe.fasadeBase, baseColor: wardrobe.fasadeBaseColor, position: {x: i * (width + 30), y: 0}, deletable: false }))\r\n    return fasades\r\n}\r\n\r\nexport function getFasadeWidth(wardrobeWidth, fasadeCount) {\r\n    const offset = [88, 98, 108][fasadeCount - 2]\r\n    return Math.round((wardrobeWidth - offset) / fasadeCount)\r\n}","import Cursor from \"./Cursor\";\r\n\r\nexport default class DimensionCursor extends Cursor {\r\n    static ORD = \"ord\"\r\n    static VERT = \"vert\"\r\n    static HOR = \"hor\"\r\n    type = DimensionCursor.ORD\r\n    draw(ctx, realRect, screenRect) {\r\n        this.refresh(realRect, screenRect);\r\n        ctx.strokeStyle = this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth = 2;\r\n        const cursor = this.getCursor(this.p0)\r\n        const path = new Path2D(cursor);\r\n\r\n        ctx.fill(path);\r\n        ctx.stroke(path);\r\n    }\r\n    setType(type) {\r\n        this.type = type\r\n    }\r\n    getCursor(p) {\r\n        const types = {\r\n            [DimensionCursor.ORD]: `M${p.x + 10} ${p.y}l-8.506 8.506 0 -8.506 8.506 0zm-6.69 24.41l22.66 -22.66 -22.66 22.66zm-2.557 -3.145l5.703 5.702 -5.703 -5.702zm21.996 -21.996l5.702 5.703 -5.702 -5.703z`,\r\n            [DimensionCursor.VERT]: `M${p.x + 10} ${p.y}l-7.211 7.211 0 -7.211 7.211 0zm8.712 24.514l0 -27.168 0 27.168zm-3.419 -0.352l6.837 0 -6.837 0zm0 -26.372l6.837 0 -6.837 0z`,\r\n            [DimensionCursor.HOR]: `M${p.x + 10} ${p.y}l-8.359 8.359 0 -8.359 8.359 0zm-11.436 17.434l31.496 0 -31.496 0zm0.409 -3.964l0 7.927 0 -7.927zm30.573 0l0 7.927 0 -7.927z`,\r\n        }\r\n        return types[this.type]\r\n    }\r\n\r\n}\r\n","import Cursor from \"./Cursor\";\r\n\r\nexport default class DragCursor extends Cursor{\r\n    static DRAG = \"DRAG\"\r\n    static NODRAG = \"NODRAG\"\r\n    type = DragCursor.DRAG\r\n    hint = \"\"\r\n    draw(ctx, realRect,  screenRect){\r\n        this.refresh(realRect,screenRect);\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=2;  \r\n        const cursor = this.getCursor(this.p0)\r\n        const path = new Path2D(cursor);        \r\n        ctx.fill(path);\r\n        ctx.stroke(path);\r\n        if (this.hint) {\r\n            ctx.fillStyle = \"black\"\r\n            ctx.font = \"14px sans-serif\"\r\n            ctx.fillText(this.hint, this.p0.x, this.p0.y + 30)\r\n        }\r\n    }\r\n    setType(type, hint) {\r\n        this.type = type\r\n        this.hint = hint\r\n    }\r\n    getCursor(p) {\r\n        const types = {\r\n            [DragCursor.DRAG]: `M${p.x} ${p.y}l0 9.94m-5.05 0c0,-5.382 -0.086,-5.266 0,-7.791 0.029,-4.141 4.358,-4.141 5.05,-2.15 0.202,-4.271 5.079,-4.386 5.497,-0.115 0.476,-2.222 4.675,-2.107 4.949,0.678 0.346,-1.054 3.967,-2.078 4.328,1.976 0.13,1.429 -0.014,6.291 -0.029,9.392 -1.053,17.069 -22.465,16.539 -25.264,-0.644 -0.911,-3.53 3.518,-5.453 5.469,-1.346zm10.547 -10.056l0 10.056m4.949 -9.378l0 9.378 0 -9.378z`,\r\n            [DragCursor.NODRAG]: `M${p.x+15} ${p.y+15}l-27.479 -27.479m0 27.479l27.479 -27.479m-16.856 1.525l0 10.403m-5.285 0c0,-5.632 -0.09,-5.511 0,-8.154 0.031,-4.333 4.56,-4.333 5.285,-2.25 0.212,-4.469 5.315,-4.589 5.753,-0.12 0.498,-2.325 4.892,-2.205 5.179,0.709 0.362,-1.102 4.151,-2.174 4.529,2.069 0.136,1.495 -0.014,6.583 -0.03,9.829 -1.102,17.862 -23.511,17.308 -26.439,-0.675 -0.953,-3.694 3.681,-5.706 5.723,-1.408zm11.038 -10.524l0 10.524m5.179 -9.814l0 9.814 0 -9.814z`,\r\n        }\r\n        return types[this.type]\r\n    }\r\n\r\n}\r\n","import Geometry from '../../utils/geometry';\r\nimport Shape from \"./Shape\";\r\nimport PanelShape from './PanelShape';\r\nimport { PropertyTypes } from './PropertyData';\r\nexport default class DrawerBlockShape extends PanelShape {\r\n    type = Shape.DRAWER\r\n    constructor(data) {\r\n        super({ ...data, vertical: false, thickness: 391, name: \"Ящичный блок\" });\r\n        this.state.measurable = false\r\n        this.properties = [\r\n            {key: \"name\", type: PropertyTypes.STRING},\r\n            {key: \"drawerWidth\", type: PropertyTypes.INTEGER_POSITIVE_NUMBER},\r\n            {key: \"depth\", type: PropertyTypes.INTEGER_POSITIVE_NUMBER},\r\n        ]\r\n    }\r\n\r\n    draw(ctx, realRect, screenRect, print = false) {\r\n        if (this.state.hidden) return\r\n        this.refresh(realRect, screenRect);\r\n        this.refreshStyle(ctx)\r\n        if (this.state.selected || this.state.highlighted) { this.getStyle().setWidth(2) } else { this.getStyle().setWidth(1) }\r\n        const distanceBetween = 37\r\n        const bottomDrawer = { x: this.rect.x + 8, y: this.rect.y + distanceBetween, last: { x: this.rect.last.x - 8, y: this.rect.y + distanceBetween + 140 } }\r\n        const topDrawer = { x: this.rect.x + 8, y: bottomDrawer.last.y + distanceBetween, last: { x: this.rect.last.x - 8, y: this.rect.last.y - distanceBetween } }\r\n        for(let rect of [bottomDrawer, topDrawer]){   \r\n            const topLeft = Geometry.realToScreen(rect, realRect, screenRect);\r\n            const bottomRight = Geometry.realToScreen(rect.last, realRect, screenRect);\r\n            const width = bottomRight.x - topLeft.x\r\n            const height = bottomRight.y - topLeft.y\r\n            let x = topLeft.x\r\n            let y = topLeft.y\r\n            ctx.strokeRect(x, y, width, height);\r\n        }\r\n    }\r\n    getProperties(){\r\n        const props = super.getProperties()\r\n        props.find(p => p.key === \"drawerWidth\").value = this.length\r\n        props.find(p => p.key === \"depth\").value = this.width - 50\r\n        return props\r\n    }\r\n\r\n    getSingleDimensionData(){\r\n\r\n        return {hasDimension: false}\r\n      }\r\n}","import Geometry from '../../utils/geometry';\r\nimport Shape from \"./Shape\";\r\nimport PanelShape from './PanelShape';\r\nimport { PropertyTypes } from './PropertyData';\r\nexport default class DrawerShape extends PanelShape {\r\n    type = Shape.DRAWER\r\n    constructor(data) {\r\n        super({ ...data, vertical: false, thickness: 140, panelMargin: 10, name: \"Ящик\" });\r\n        this.state.measurable = false\r\n        this.properties = [\r\n            {key: \"name\", type: PropertyTypes.STRING},\r\n            {key: \"drawerWidth\", type: PropertyTypes.INTEGER_POSITIVE_NUMBER},\r\n            {key: \"depth\", type: PropertyTypes.INTEGER_POSITIVE_NUMBER},\r\n        ]\r\n    }\r\n\r\n    draw(ctx, realRect, screenRect, print = false) {\r\n        if (this.state.hidden) return\r\n        this.refresh(realRect, screenRect);\r\n        this.refreshStyle(ctx)\r\n        if (this.state.selected || this.state.highlighted) { this.getStyle().setWidth(2) } else { this.getStyle().setWidth(1) }\r\n        const rect = { x: this.rect.x + 4, y: this.rect.y, last: { x: this.rect.last.x - 4, y: this.rect.last.y } }\r\n        const topLeft = Geometry.realToScreen(rect, realRect, screenRect);\r\n        const bottomRight = Geometry.realToScreen(rect.last, realRect, screenRect);\r\n        const width = bottomRight.x - topLeft.x\r\n        const height = bottomRight.y - topLeft.y\r\n        let x = topLeft.x\r\n        let y = topLeft.y\r\n        ctx.strokeRect(x, y, width, height);\r\n    }\r\n    getProperties(){\r\n        const props = super.getProperties()\r\n        props.find(p => p.key === \"drawerWidth\").value = this.length\r\n        props.find(p => p.key === \"depth\").value = this.width - 50\r\n        return props\r\n    }\r\n    getSingleDimensionData(){\r\n\r\n        return {hasDimension: false}\r\n      }\r\n}","import Geometry from '../../utils/geometry';\r\nimport Shape from \"./Shape\";\r\nimport PanelShape from './PanelShape';\r\nimport { PropertyTypes } from './PropertyData';\r\nexport default class TubeShape extends PanelShape {\r\n    type = Shape.TUBE\r\n    constructor(data) {\r\n        super({ ...data, vertical: false, thickness: 50, panelMargin: 0, name: \"Труба\" });\r\n        this.state.measurable = false\r\n        this.properties = [\r\n            {key: \"name\", type: PropertyTypes.STRING},\r\n            {key: \"length\", type: PropertyTypes.INTEGER_POSITIVE_NUMBER},\r\n        ]\r\n    }\r\n\r\n    draw(ctx, realRect, screenRect, print = false) {\r\n        if (this.state.hidden) return\r\n        this.refresh(realRect, screenRect);\r\n        this.refreshStyle(ctx)\r\n        if (this.state.selected || this.state.highlighted) { this.getStyle().setWidth(2) } else { this.getStyle().setWidth(1) }\r\n        const rect = { x: this.rect.x, y: this.rect.y, last: { x: this.rect.last.x, y: this.rect.last.y } }\r\n        const flanWidth = 20\r\n        const leftFlan = {topLeft: {x: rect.x, y: rect.y + this.thickness}, bottomRight: {x: rect.x + flanWidth, y: rect.y}}\r\n        const rightFlan = {topLeft: {x: rect.last.x - flanWidth, y: rect.last.y}, bottomRight: {x: rect.last.x, y: rect.y}}\r\n        const tube = {topLeft: {x: leftFlan.bottomRight.x, y: leftFlan.topLeft.y - 10}, bottomRight: {x: rightFlan.topLeft.x, y: rightFlan.bottomRight.y + 10}}\r\n        for(let r of [leftFlan, rightFlan, tube]){\r\n            const topLeft = Geometry.realToScreen(r.topLeft, realRect, screenRect);\r\n            const bottomRight = Geometry.realToScreen(r.bottomRight, realRect, screenRect);\r\n            const width = bottomRight.x - topLeft.x\r\n            const height = bottomRight.y - topLeft.y\r\n            let x = topLeft.x\r\n            let y = topLeft.y\r\n            ctx.strokeRect(x, y, width, height);\r\n            }\r\n    }\r\n    getProperties(){\r\n        return super.getProperties()\r\n    }\r\n    getSingleDimensionData(){\r\n\r\n        return {hasDimension: true}\r\n      }\r\n}","import { MouseHandler } from \"./MouseHandler\";\r\nimport { PropertyTypes } from \"../components/shapes/PropertyData\";\r\nimport Geometry from \"../utils/geometry\";\r\nimport { Status } from \"../reducers/functions\";\r\nimport { setCurCoord } from \"../functions/viewPortFunctions\";\r\nimport DragCursor from \"../components/shapes/cursors/DragCursor\";\r\nimport { PlaceErrorMessages } from \"../components/shapes/PlaceErrors\";\r\nexport class PanelCreateHandler extends MouseHandler {\r\n    constructor(state) {\r\n        super(state);\r\n        this.movePoint = { dx: 0, dy: 0 };\r\n        this.properties = [\r\n            { type: PropertyTypes.BOOL, value: false, labelKey: \"make_copy\", setValue: (value) => { this.makeCopy = value; } },\r\n        ]\r\n\r\n        this.panels = state.panels\r\n        this.activeShape = state.curShape\r\n        this.first = true;\r\n        this.setStatusBar()\r\n    }\r\n    setStatusBar() {\r\n        if (this.isMobile)\r\n            this.statusBar = [{ text: ` - ${this.captions.scale}  `, icons: [\"gest_zoom\"] }];\r\n        else\r\n            this.statusBar = [{ text: ` - ${this.captions.rotate};  `, icons: [\"rmb\"] },\r\n            { text: ` - ${this.captions.move};  `, icons: [\"mmb\"] },\r\n            { text: ` - ${this.captions.scale};  `, icons: [\"mmb_wheel\"] },\r\n            { text: ` - ${this.captions.snap}`, icons: [\"button_ctrl\"] }]\r\n    }\r\n    keypress(code) {\r\n        return super.keypress(code)\r\n    }\r\n    down({ button, appActions, appData }) {\r\n        if (button === 1) {\r\n            appActions.setScreenStatus(Status.PAN, { startPoint: this.coord, prevStatus: Status.FREE, prevMouseHandler: this });\r\n            return\r\n        }\r\n        if (button === 2 && this.countSelected < 2) {\r\n\r\n            return true;\r\n        }\r\n    }\r\n    move({ curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        if (!keys) keys = {}\r\n        super.move({ curPoint, viewPortData });\r\n        setViewPortData(prevData => setCurCoord(this.coord, this.curPoint, prevData))\r\n        let p = Geometry.screenToReal(curPoint.x, curPoint.y, viewPortData.viewPortWidth, viewPortData.viewPortHeight, viewPortData.topLeft, viewPortData.bottomRight);\r\n        p.x = p.x - this.movePoint.dx;\r\n        p.y = p.y + this.movePoint.dy;\r\n        p.x = Math.trunc(p.x);\r\n        p.y = this.activeShape.vertical ? Math.trunc(p.y) : Math.trunc(p.y - this.activeShape.thickness / 2);\r\n        let res = this.activeShape.canBePlaced(p.x, p.y, appData.panels, appData.wardrobe)\r\n        this.canBePlaced = res.result\r\n        if (this.canBePlaced) {\r\n            res = this.activeShape.findConstraints(p.x, p.y, appData.panels, appData.wardrobe)\r\n            this.canBePlaced = res.result\r\n            if (this.canBePlaced) {\r\n                this.canBePlaced = (this.activeShape.length >= this.activeShape.minLength)\r\n                if (!this.canBePlaced) res.reason = PlaceErrorMessages.DONT_FIT\r\n            }\r\n            \r\n        }\r\n        this.activeShape.setHidden(!this.canBePlaced)\r\n        const hint = this.canBePlaced ? \"\" : appData.captions.handlers.create[res.reason]\r\n        appData.cursor.setType(this.canBePlaced ? DragCursor.DRAG : DragCursor.NODRAG, hint)\r\n        this.lastPoint = { ...this.coord };\r\n    }\r\n\r\n    up({ button, curPoint, viewPortData, appActions, appData }) {\r\n        super.click({ button, curPoint, viewPortData })\r\n        if(button === 2) return appActions.cancel()\r\n        if (button !== 0) return\r\n        appData.curShape.state.selected = false;\r\n        if (this.canBePlaced) {\r\n            if (appData.curShape.jointToBack) appData.curShape.jointToBack.jointFromBackSide.add(appData.curShape)\r\n            if (appData.curShape.jointToFront) appData.curShape.jointToFront.jointFromFrontSide.add(appData.curShape)\r\n            appActions.addShape(appData.curShape)\r\n            //appActions.createPanel(appData.curShape)\r\n        }\r\n        this.drag = false;\r\n        appActions.cancel();\r\n    }\r\n\r\n    touchMove({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        super.touchMove({ pointerId, curPoint, viewPortData })\r\n        const tm = viewPortData.touchManager\r\n        if (tm.getTouchCount() > 1) {\r\n            const diff = Geometry.distance(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const midPoint = Geometry.midPoint(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const delta = tm.prevDiff - diff\r\n            if (Math.abs(delta) > 10) {\r\n                const deltaY = Math.sign(delta)\r\n                this.wheel({ deltaY, curPoint: midPoint, viewPortData, setViewPortData })\r\n                tm.prevDiff = diff\r\n            }\r\n        }\r\n        if (tm.getTouchCount() === 1) {\r\n            this.move({ curPoint, viewPortData, setViewPortData, appActions, appData })\r\n        }\r\n    }\r\n    touchUp({ pointerId, curPoint, viewPortData, appActions, appData }) {\r\n        super.touchUp({ pointerId, viewPortData })\r\n        const tm = viewPortData.touchManager\r\n        if (tm.getTouchCount() === 0) this.up({ button: 0, curPoint, viewPortData, appActions, appData })\r\n    }\r\n    click({ button, appActions }) {\r\n        \r\n\r\n    }\r\n}","import { MouseHandler } from \"./MouseHandler\";\r\nimport { PropertyTypes } from \"../components/shapes/PropertyData\";\r\nimport Geometry from \"../utils/geometry\";\r\nimport { Status } from \"../reducers/functions\";\r\nimport { setCurCoord } from \"../functions/viewPortFunctions\";\r\nimport { moveSelectedPanels, SelectionSet, setWardrobeDimensions } from \"../reducers/panels\";\r\nimport { WORKSPACE } from \"../reducers/initialState\";\r\nimport Shape from '../components/shapes/Shape' \r\nexport class PanelMoveHandler extends MouseHandler {\r\n    constructor(state, newPanel, movePoint) {\r\n        super(state);\r\n        this.movePoint = movePoint;\r\n        this.properties = [\r\n            { type: PropertyTypes.BOOL, value: false, labelKey: \"make_copy\", setValue: (value) => { this.makeCopy = value; } },\r\n        ]\r\n        if (!this.movePoint) {\r\n            this.movePoint = {}\r\n            this.movePoint.dx = (state.curShape.length + state.curShape.margin * 2) / 2\r\n            this.movePoint.dy = (state.curShape.width + state.curShape.margin * 2) / 2\r\n        }\r\n        this.panels = state.panels\r\n        this.activeShape = state.curShape\r\n        let filterFunc\r\n        switch (this.activeShape.type) {\r\n            case Shape.DIMENSION:\r\n                filterFunc = s => s.type === Shape.DIMENSION && s === this.activeShape\r\n                break;\r\n            default:\r\n                filterFunc = s => s.type !== Shape.DIMENSION\r\n                break;\r\n        }\r\n        state.selectedPanels = new SelectionSet(Array.from(state.selectedPanels).filter(filterFunc));\r\n        this.newPanel = newPanel;\r\n        if (this.newPanel) this.panels = [...state.panels, state.curShape];\r\n        this.curShape = state.curShape;\r\n        this.first = true;\r\n        this.setStatusBar()\r\n    }\r\n    setStatusBar() {\r\n        if (this.isMobile)\r\n            this.statusBar = [{ text: ` - ${this.captions.scale}  `, icons: [\"gest_zoom\"] }];\r\n        else\r\n            this.statusBar = [{ text: ` - ${this.captions.rotate};  `, icons: [\"rmb\"] },\r\n            { text: ` - ${this.captions.move};  `, icons: [\"mmb\"] },\r\n            { text: ` - ${this.captions.scale};  `, icons: [\"mmb_wheel\"] },\r\n            { text: ` - ${this.captions.snap}`, icons: [\"button_ctrl\"] }]\r\n    }\r\n    keypress(code) {\r\n        return super.keypress(code)\r\n    }\r\n    down({ button, appActions, appData }) {\r\n        if (button === 1) {\r\n            appActions.setScreenStatus(Status.PAN, { startPoint: this.coord, prevStatus: Status.FREE, prevMouseHandler: this });\r\n            return\r\n        }\r\n        if (button === 2) {\r\n\r\n            return true;\r\n        }\r\n    }\r\n    move({ curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        if (!keys) keys = {}\r\n        super.move({ curPoint, viewPortData });\r\n        setViewPortData(prevData => setCurCoord(this.coord, this.curPoint, prevData))\r\n        let p = Geometry.screenToReal(curPoint.x, curPoint.y, viewPortData.viewPortWidth, viewPortData.viewPortHeight, viewPortData.topLeft, viewPortData.bottomRight);\r\n        p.x = p.x - this.movePoint.dx;\r\n        p.y = p.y + this.movePoint.dy;\r\n\r\n        p.x = Math.trunc(p.x);\r\n        p.y = Math.trunc(p.y);\r\n        var { x, y } = this.activeShape.getPosition();\r\n        var [dx, dy] = [p.x - x, p.y - y];\r\n        if (appData.workspace === WORKSPACE.CORPUS) moveSelectedPanels(dx, dy, this.activeShape, appData.selectedPanels, () => { setWardrobeDimensions(appData, appActions) })\r\n        const dimensions = appData.workspace === WORKSPACE.CORPUS ? appData.dimensions : appData.fasadeDimensions\r\n        for (const shape of dimensions) {\r\n            if (!appData.selectedPanels.has(shape)) continue;\r\n            shape.moveTo(dx, dy, appData.wardrobe)\r\n        }\r\n        this.lastPoint = { ...this.coord };\r\n    }\r\n\r\n    up({ button, curPoint, viewPortData, appActions, appData }) {\r\n        super.click({ button, curPoint, viewPortData })\r\n        if (button !== 0) return\r\n        if (this.newPanel) {\r\n            appData.curShape.state.selected = false;\r\n            appActions.addShape(appData.curShape)\r\n        }\r\n        this.drag = false;\r\n        appActions.cancel();\r\n    }\r\n\r\n    touchMove({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        super.touchMove({ pointerId, curPoint, viewPortData })\r\n        const tm = viewPortData.touchManager\r\n        if (tm.getTouchCount() > 1) {\r\n            const diff = Geometry.distance(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const midPoint = Geometry.midPoint(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const delta = tm.prevDiff - diff\r\n            if (Math.abs(delta) > 10) {\r\n                const deltaY = Math.sign(delta)\r\n                this.wheel({ deltaY, curPoint: midPoint, viewPortData, setViewPortData })\r\n                tm.prevDiff = diff\r\n            }\r\n        }\r\n        if (tm.getTouchCount() === 1) {\r\n            this.move({ curPoint, viewPortData, setViewPortData, appActions, appData })\r\n        }\r\n    }\r\n    touchUp({ pointerId, curPoint, viewPortData, appActions, appData }) {\r\n        super.touchUp({ pointerId, viewPortData })\r\n        const tm = viewPortData.touchManager\r\n        if (tm.getTouchCount() === 0) this.up({ button: 0, curPoint, viewPortData, appActions, appData })\r\n    }\r\n    leave({ appActions }) {\r\n        appActions.cancel()\r\n    }\r\n    click() {\r\n\r\n\r\n    }\r\n}","import Geometry, { Intersection } from '../../utils/geometry';\r\nimport Shape from \"./Shape\";\r\nimport { drawArrow } from '../../functions/drawFunctions';\r\nimport ShapeStyle from './ShapeStyle';\r\nimport { Color } from '../colors';\r\nimport TextShape from './TextShape';\r\nexport default class Dimension extends Shape {\r\n    type = Shape.DIMENSION\r\n    constructor({ vertical, firstPoint, secondPoint }) {\r\n        super();\r\n        this.vertical = vertical\r\n        this.firstPoint = firstPoint\r\n        this.secondPoint = secondPoint\r\n        this.offsetPoint = {}\r\n        this.length = 0\r\n        this.state.selectable = true\r\n        this.state.deletable = true\r\n        this.state.fixable = false\r\n        this.state.fixed = false\r\n        this.captionShape = new TextShape(this.length, {}, vertical ? -Math.PI / 2 : 0, { vertical: vertical ? TextShape.CENTER : TextShape.BOTTOM, horizontal: vertical ? TextShape.CENTER : TextShape.CENTER })\r\n        this.captionShape.setFillStyle(Color.BLACK);\r\n\r\n        this.style = new ShapeStyle(Color.DARK_GRAY, ShapeStyle.DASH, 1);\r\n        this.defaultStyle = new ShapeStyle(Color.DARK_GRAY, ShapeStyle.DASH, 1);\r\n        this.selectedStyle = new ShapeStyle(Color.SELECTED, ShapeStyle.DASH, 2);\r\n        this.highlightedStyle = new ShapeStyle(Color.BLACK, ShapeStyle.DASH, 1);\r\n        this.properties = []\r\n    }\r\n\r\n    draw(ctx, realRect, screenRect, print = false) {\r\n        if (this.hidden) return\r\n        let saveState = {...this.state}\r\n        if(print) this.state = {...this.state, selected: false, highlighted: false} \r\n        super.draw(ctx, realRect, screenRect)\r\n        const first = Geometry.realToScreen(this.firstPoint, realRect, screenRect);\r\n        const second = Geometry.realToScreen(this.secondPoint, realRect, screenRect);\r\n        const offsetPoint = Geometry.realToScreen(this.offsetPoint, realRect, screenRect);\r\n        let screenOffsetFirst, screenOffsetSecond\r\n        let arrowSize\r\n        ctx.beginPath()\r\n        if (this.vertical) {\r\n            screenOffsetFirst = offsetPoint.x - first.x\r\n            screenOffsetSecond = offsetPoint.x - second.x\r\n            arrowSize = first.y - second.y\r\n            ctx.moveTo(first.x, first.y)\r\n            ctx.lineTo(first.x + screenOffsetFirst, first.y)\r\n            ctx.moveTo(second.x, second.y)\r\n            ctx.lineTo(second.x + screenOffsetSecond, second.y)\r\n        } else {\r\n            screenOffsetFirst = offsetPoint.y - first.y\r\n            screenOffsetSecond = offsetPoint.y - second.y\r\n            arrowSize = second.x - first.x\r\n            ctx.moveTo(first.x, first.y)\r\n            ctx.lineTo(first.x, first.y + screenOffsetFirst)\r\n            ctx.moveTo(second.x, second.y)\r\n            ctx.lineTo(second.x, second.y + screenOffsetSecond)\r\n        }\r\n        ctx.stroke()\r\n        const prevStroke = this.getStyle().getStroke()\r\n        this.getStyle().setStroke(ShapeStyle.SOLID)\r\n        this.refreshStyle(ctx)\r\n        ctx.beginPath()\r\n        drawArrow(ctx, this.vertical, offsetPoint, arrowSize, 5)\r\n        ctx.stroke()\r\n        this.captionShape.setFitRect({ width: 500, height: 500, fit: true })\r\n        this.captionShape.getStyle().setWidth(this.style.width)\r\n        this.captionShape.getStyle().setColor(this.style.color)\r\n        this.captionShape.refreshStyle(ctx)\r\n        const offset = this.vertical ? { x: 0, y: -10 } : undefined\r\n        this.captionShape.draw(ctx, realRect, screenRect, null, offset)\r\n        this.getStyle().setStroke(prevStroke)\r\n        this.refreshStyle(ctx)\r\n        if(print) this.state = {...saveState}\r\n    }\r\n    refresh() {\r\n        if (this.vertical) {\r\n            this.offsetPoint.y = this.midPoint.y\r\n            this.length = this.secondPoint.y - this.firstPoint.y\r\n        } else {\r\n            this.offsetPoint.x = this.midPoint.x\r\n            this.length = this.secondPoint.x - this.firstPoint.x\r\n        }\r\n        this.captionShape.setPoint(this.offsetPoint)\r\n        this.setCaption()\r\n\r\n    }\r\n    getPosition() {\r\n        return this.offsetPoint\r\n    }\r\n    moveTo(dx, dy, wardrobe) {\r\n        const point = { x: this.vertical ? this.offsetPoint.x + dx : this.offsetPoint.x, y: this.vertical ? this.offsetPoint.y : this.offsetPoint.y + dy }\r\n        this.setOffsetPoint(point, wardrobe)\r\n        this.refresh()\r\n\r\n    }\r\n    setCaption() {\r\n        this.captionShape.setText(this.length);\r\n    }\r\n\r\n    setHidden(hidden) {\r\n        this.hidden = hidden\r\n    }\r\n    setOffsetPoint(offsetPoint, wardrobe) {\r\n        const max = 200\r\n        this.offsetPoint = offsetPoint\r\n        if (this.offsetPoint.x < -max) this.offsetPoint.x = -max\r\n        if (this.offsetPoint.x > wardrobe.width + max) this.offsetPoint.x = wardrobe.width + max\r\n        if (this.offsetPoint.y < -max) this.offsetPoint.y = -max\r\n        if (this.offsetPoint.y > wardrobe.height + max) this.offsetPoint.y = wardrobe.height + max\r\n        this.refresh()\r\n    }\r\n\r\n    isUnderCursor(p, pixelRatio) {\r\n        const mult = 2\r\n        return this.vertical ?\r\n            (p.x >= this.offsetPoint.x - pixelRatio * mult) && (p.x <= this.offsetPoint.x + pixelRatio * mult) && (p.y <= this.secondPoint.y) && (p.y >= this.firstPoint.y) :\r\n            (p.y >= this.offsetPoint.y - pixelRatio * mult) && (p.y <= this.offsetPoint.y + pixelRatio * mult) && (p.x <= this.secondPoint.x) && (p.x >= this.firstPoint.x);\r\n    }\r\n\r\n    isInSelectionRect({ topLeft, bottomRight }) {\r\n        const firstPoint = {}\r\n        const secondPoint = {}\r\n        if (this.vertical) {\r\n            firstPoint.x = this.offsetPoint.x\r\n            secondPoint.x = this.offsetPoint.x\r\n            firstPoint.y = this.offsetPoint.y - this.length / 2\r\n            secondPoint.y = this.offsetPoint.y + this.length / 2\r\n        } else {\r\n            firstPoint.x = this.offsetPoint.x - this.length / 2\r\n            secondPoint.x = this.offsetPoint.x + this.length / 2\r\n            firstPoint.y = this.offsetPoint.y\r\n            secondPoint.y = this.offsetPoint.y\r\n        }\r\n        const inRect = [Geometry.pointInRect(firstPoint, topLeft, bottomRight),\r\n        Geometry.pointInRect(secondPoint, topLeft, bottomRight)];\r\n        const full = inRect.every(i => i === true);\r\n        const dimLine = { p1: firstPoint, p2: secondPoint }\r\n        const cross = Intersection.LineRectangle(dimLine, topLeft, bottomRight).length > 0\r\n\r\n\r\n        return { cross, full };\r\n    }\r\n}","import Dimension from './Dimension';\r\nexport default class SinglePanelDimension extends Dimension {\r\n    constructor(panel) {\r\n        const {vertical, firstPoint, secondPoint} = panel.getSingleDimensionData()\r\n        super({ vertical, firstPoint, secondPoint });\r\n        this.panel = panel\r\n    }\r\n    draw(ctx, realRect, screenRect, print = false) {\r\n        super.draw(ctx, realRect, screenRect, print)\r\n    }\r\n    refresh() {\r\n        const { firstPoint, secondPoint } = this.panel.getSingleDimensionData()\r\n        this.firstPoint = firstPoint\r\n        this.secondPoint = secondPoint\r\n        this.midPoint = { x: (this.firstPoint.x + this.secondPoint.x) / 2, y: (this.firstPoint.y + this.secondPoint.y) / 2 }\r\n        super.refresh()\r\n\r\n    }\r\n    delete(){\r\n        this.panel.dimensions.delete(this)\r\n        this.panel.singleDimension = null\r\n    }\r\n\r\n}","import { MouseHandler } from \"./MouseHandler\";\r\nimport { Status } from \"../reducers/functions\";\r\nimport { setCurCoord } from \"../functions/viewPortFunctions\";\r\nimport Geometry from \"../utils/geometry\";\r\nimport SinglePanelDimension from \"../components/shapes/SinglePanelDimension\";\r\nimport DimensionCursor from \"../components/shapes/cursors/DimensionCursor\";\r\nexport class SinglePanelDimensionCreateHandler extends MouseHandler {\r\n    constructor(state) {\r\n        super(state);\r\n        this.setStatusBar()\r\n    }\r\n    setStatusBar() {\r\n        if (this.isMobile)\r\n            this.statusBar = [{ text: ` - ${this.captions.move};  `, icons: [\"gest_move\"] },\r\n            { text: ` - ${this.captions.rotate};  `, icons: [\"gest_dbltap\"] },\r\n            { text: ` - ${this.captions.scale}  `, icons: [\"gest_zoom\"] }\r\n            ];\r\n        else\r\n            this.statusBar = [{ text: ` - ${this.captions.move};  `, icons: [\"rmb\", \"mmb\"] },\r\n            { text: ` - ${this.captions.scale}  `, icons: [\"mmb_wheel\"] }\r\n            ];\r\n    }\r\n    move({ curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.move({ curPoint, viewPortData });\r\n        appData.cursor.setType(DimensionCursor.ORD)\r\n        switch (this.clickCount) {\r\n            case 0: {\r\n                for (let p of appData.panels) {\r\n                    if (!p.state.selectable) continue;\r\n                    if (!p.state.measurable) continue\r\n                    if (p.isUnderCursor(this.coord, viewPortData.pixelRatio) && !p.singleDimension) {\r\n                        p.setState({ highlighted: true })\r\n                        appData.cursor.setType(p.vertical ? DimensionCursor.VERT : DimensionCursor.HOR)\r\n                    } else {\r\n                        p.setState({ highlighted: false })\r\n\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 1: {\r\n                const offset = this.activePanel.vertical ? this.coord.x - this.firstPoint.x : this.coord.y - this.firstPoint.y\r\n                //const { midPoint } = TwoPanelDimension.getPoints(this.activePanel, this.activePanel)\r\n                const offsetPoint = this.vertical ? { x: this.midPoint.x + offset, y: this.midPoint.y } : { x: this.midPoint.x, y: this.midPoint.y + offset }\r\n                this.curShape.setOffsetPoint(offsetPoint, appData.wardrobe)\r\n                appData.cursor.setType(this.curShape.vertical ? DimensionCursor.VERT : DimensionCursor.HOR)\r\n                break;\r\n            }\r\n            default: { }\r\n        }\r\n        setViewPortData(prevData => setCurCoord(this.coord, this.curPoint, prevData));\r\n\r\n    }\r\n    down({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.down({ curPoint, viewPortData })\r\n        setViewPortData(prevData => setCurCoord(this.coord, curPoint, prevData));\r\n        if (button === 1) {\r\n            appActions.setScreenStatus(Status.PAN, { startPoint: this.coord, prevStatus: Status.FREE, prevMouseHandler: this });\r\n            return\r\n        }\r\n    }\r\n    click({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.click({ curPoint, viewPortData });\r\n        if (button !== 0) return\r\n        switch (this.clickCount) {\r\n            case 1: {\r\n                this.activePanel = null;\r\n                //this.firstPoint = this.coord\r\n                for (let p of appData.panels) {\r\n                    if (!p.state.selectable) continue;\r\n                    if (!p.state.measurable) continue\r\n                    if (p.isUnderCursor(this.coord, viewPortData.pixelRatio) && !p.singleDimension) {\r\n                        this.activePanel = p;\r\n                        const { vertical, firstPoint, secondPoint, midPoint } = p.getSingleDimensionData()\r\n                        this.firstPoint = firstPoint\r\n                        this.secondPoint = secondPoint\r\n                        this.midPoint = midPoint\r\n                        this.vertical = vertical\r\n                        this.curShape = new SinglePanelDimension(p)\r\n                    }\r\n                }\r\n                if (!this.activePanel) this.clickCount = 0\r\n                break;\r\n            }\r\n            case 2: {\r\n                this.activePanel.singleDimension = this.curShape\r\n                appActions.addDimension(this.curShape)\r\n                appActions.cancel()\r\n                break;\r\n            }\r\n            default: { }\r\n        }\r\n    }\r\n    doubleClick({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.doubleClick({ curPoint, viewPortData })\r\n        if (button === 0 && this.activePanel) {\r\n            if (appData.material.texture) return;\r\n            for (let panel of appData.panels) {\r\n                panel.state.selected = (panel === this.activePanel)\r\n            }\r\n            appActions.repaint()\r\n            return true;\r\n        }\r\n    }\r\n    keypress(code) {\r\n        return super.keypress(code)\r\n    }\r\n    up({ button, appActions }) {\r\n        if (button === 2) return appActions.cancel()\r\n        this.drag = false;\r\n        appActions.updateState()\r\n    }\r\n    getSelectedShapeProperties(state) {\r\n        this.properties = [];\r\n        const shape = state.selectionManager.getSelectedPanels().pop();\r\n        if (shape) {\r\n            const props = shape.getProperties();\r\n            this.setProperties(props);\r\n            this.currentObject = shape;\r\n        }\r\n    }\r\n\r\n    touchDown({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        super.touchDown({ pointerId, curPoint, viewPortData })\r\n        this.down({ button: 0, curPoint, viewPortData, setViewPortData, appActions, appData })\r\n    }\r\n    touchMove({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        super.touchMove({ pointerId, curPoint, viewPortData })\r\n        const tm = viewPortData.touchManager\r\n        if (tm.getTouchCount() > 1) {\r\n            const diff = Geometry.distance(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const midPoint = Geometry.midPoint(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const delta = tm.prevDiff - diff\r\n            if (Math.abs(delta) > 10) {\r\n                const deltaY = Math.sign(delta)\r\n                this.wheel({ deltaY, curPoint: midPoint, viewPortData, setViewPortData })\r\n                tm.prevDiff = diff\r\n            }\r\n        }\r\n        if (tm.getTouchCount() === 1) {\r\n            if (this.drag) {\r\n                appData.panels.forEach(p => p.state.selected = false)\r\n                this.activePanel.state.selected = true\r\n                appActions.movePanel(this.activePanel, this.dragPos);\r\n                return;\r\n            }\r\n            appActions.setScreenStatus(Status.PAN, { startPoint: this.coord, prevStatus: Status.FREE, prevMouseHandler: this })\r\n        }\r\n    }\r\n}","import Geometry, { Rectangle, Coord2D, Line, Intersection } from '../../utils/geometry';\r\nimport Shape from \"./Shape\";\r\nimport { PropertyTypes } from \"./PropertyData\";\r\nexport default class RectangleShape extends Shape {\r\n    constructor(model) {\r\n        super();\r\n        this.model = model;\r\n        this.rect = new Rectangle()\r\n        this.properties = [\r\n            { type: PropertyTypes.VERTEX, value: model.topLeft, labelKey: \"p1\" },\r\n            { type: PropertyTypes.VERTEX, value: model.bottomRight, labelKey: \"p2\" },\r\n        ]\r\n        //this.defineProperties();\r\n    }\r\n\r\n    draw(ctx, realRect, screenRect, fill = false) {\r\n        super.draw(ctx, realRect, screenRect)\r\n        let x = this.rect.topLeft.x\r\n        let y = this.rect.topLeft.y\r\n        if (fill) {\r\n            ctx.fillStyle = this.fillStyle;\r\n            ctx.fillRect(x, y, this.rect.width, this.rect.height);\r\n        }\r\n        ctx.strokeRect(x, y, this.rect.width, this.rect.height);\r\n    }\r\n    refresh(realRect, screenRect) {\r\n        this.rect.topLeft = Geometry.realToScreen(this.model.topLeft, realRect, screenRect);\r\n        this.rect.bottomRight = Geometry.realToScreen(this.model.bottomRight, realRect, screenRect);\r\n        this.rect.width = this.rect.bottomRight.x - this.rect.topLeft.x\r\n        this.rect.height = this.rect.bottomRight.y - this.rect.topLeft.y\r\n    }\r\n    getMarkers() {\r\n        let list = [];\r\n        return list;\r\n    }\r\n    setCorners(topLeft, bottomRight) {\r\n        this.properties[0].value = { x: topLeft.x, y: topLeft.y }\r\n        this.properties[1].value = { x: bottomRight.x, y: bottomRight.y }\r\n        this.refreshModel()\r\n    }\r\n    refreshModel() {\r\n        this.model.topLeft = this.properties[0].value;\r\n        this.model.bottomRight = this.properties[1].value;\r\n        this.model.width = this.model.bottomRight.x - this.model.topLeft.x;\r\n        this.model.height = this.model.topLeft.y - this.model.bottomRight.y;\r\n    }\r\n    getDistance(point) {\r\n        let tl = this.model.topLeft;\r\n        let tr = new Coord2D(tl.x + this.model.width, tl.y);\r\n        let bl = new Coord2D(tl.x, tl.y - this.model.height);\r\n        let br = new Coord2D(tl.x + this.model.width, tl.y - this.model.height);\r\n        let top = new Line(tl, tr);\r\n        let bottom = new Line(bl, br);\r\n        let right = new Line(tr, br);\r\n        let left = new Line(tl, bl);\r\n        return Math.min(Geometry.PointToLineDistance(point, top),\r\n            Geometry.PointToLineDistance(point, left),\r\n            Geometry.PointToLineDistance(point, bottom),\r\n            Geometry.PointToLineDistance(point, right));\r\n    }\r\n    isInSelectionRect(topLeft, bottomRight) {\r\n        const inRect = [Geometry.pointInRect(this.model.topLeft, topLeft, bottomRight),\r\n        Geometry.pointInRect(this.model.bottomRight, topLeft, bottomRight)];\r\n        const full = inRect.every(i => i === true);\r\n        const cross = Intersection.RectangleRectangle(topLeft, bottomRight, this.model.topLeft, this.model.bottomRight).length > 0;\r\n        return { cross, full };\r\n    }\r\n    toString() {\r\n        return \"Rectangle\";\r\n    }\r\n    getDescription() {\r\n        return 'Rectangle';\r\n    }\r\n}","import { MouseHandler } from \"./MouseHandler\";\r\nimport RectangleShape from \"../components/shapes/RectangleShape\"\r\nimport ShapeStyle from \"../components/shapes/ShapeStyle\";\r\nimport { Rectangle } from \"../utils/geometry\";\r\nimport { Color } from \"../components/colors\";\r\nimport { setCurCoord } from \"../functions/viewPortFunctions\";\r\nimport { FasadeFreeHandler } from \"./FasadeFreeHandler\";\r\nimport { bringSelectedToFront } from \"../reducers/panels\";\r\nexport class FasadeSelectRectHandler extends MouseHandler {\r\n    constructor(point, state) {\r\n        super(state)\r\n        this.x0 = point.x\r\n        this.y0 = point.y\r\n        this.curShape = new RectangleShape(new Rectangle())\r\n        this.curShape.setStyle(new ShapeStyle(Color.BLACK, ShapeStyle.DASH))\r\n        this.setStatusBar()\r\n    }\r\n    setStatusBar() {\r\n        this.statusBar = []\r\n    }\r\n    move({ curPoint, viewPortData, setViewPortData, appData, keys }) {\r\n        super.move({ curPoint, viewPortData });\r\n        setViewPortData(prevData => setCurCoord(this.coord, this.curPoint, prevData))\r\n        let crossSelect\r\n        if (this.coord.x > this.x0) {\r\n            this.curShape.style.setStroke(ShapeStyle.SOLID)\r\n            crossSelect = false\r\n        }\r\n        else {\r\n            this.curShape.style.setStroke(ShapeStyle.DASH)\r\n            crossSelect = true\r\n        }\r\n\r\n        this.curShape.setCorners({ x: this.x0, y: this.y0 }, this.coord)\r\n        this.selectPanels({ topLeft: this.curShape.model.topLeft, bottomRight: this.curShape.model.bottomRight },\r\n            appData.fasades,\r\n            appData.fasadeDimensions,\r\n            appData.selectedPanels,\r\n            crossSelect\r\n        );\r\n        appData.fasades = bringSelectedToFront(appData.fasades, appData.selectedPanels)\r\n    }\r\n    up({ button, appActions }) {\r\n    }\r\n    keypress(code) {\r\n        return super.keypress(code)\r\n    }\r\n    click({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.click({ curPoint, viewPortData });\r\n        if (button !== 0) return\r\n        for (let p of [...appData.fasades, ...appData.fasadeDimensions]) {\r\n            if (p.isUnderCursor(this.coord, viewPortData.pixelRatio)) {\r\n                if(!p.state.selectable) continue\r\n                if (keys.shiftKey) {\r\n                    if(appData.selectedPanels.has(p)) appData.selectedPanels.delete(p);\r\n                            else appData.selectedPanels.add(p)\r\n                } else {\r\n                    appData.selectedPanels.add(p)\r\n                }\r\n            } else {\r\n                if (!keys.shiftKey && !this.isSelectedPanels) {\r\n                    appData.selectedPanels.delete(p)\r\n                }\r\n            }\r\n        }\r\n        appData.fasades = bringSelectedToFront(appData.fasades, appData.selectedPanels)\r\n        this.isSelectedPanels = appData.selectedPanels.size > 0\r\n        if (button === 0) appActions.stopSelection(this.isSelectedPanels, FasadeFreeHandler);\r\n        appActions.updateState()\r\n    }\r\n    leave({appActions}){\r\n        super.leave()\r\n        appActions.cancel()\r\n    }\r\n\r\n    selectPanels(rect, fasades, fasadeDimensions, selectedPanels, crossSelect) {\r\n        this.isSelectedPanels = false\r\n        for (let p of [...fasades, ...fasadeDimensions]) {\r\n            //selectedPanels.delete(p)\r\n            if(!p.state.selectable) continue\r\n            const { full, cross } = p.isInSelectionRect(rect)\r\n            if (full) { selectedPanels.add(p); this.isSelectedPanels = true }\r\n            if (cross && crossSelect) { selectedPanels.add(p); this.isSelectedPanels = true }\r\n        }\r\n        \r\n    }\r\n\r\n}","import { MouseHandler } from \"./MouseHandler\";\r\nimport SelectCursor from \"../components/shapes/cursors/SelectCursor\";\r\nimport { Status } from \"../reducers/functions\";\r\nimport { setCurCoord } from \"../functions/viewPortFunctions\";\r\nimport Geometry from \"../utils/geometry\";\r\nimport { FasadeSelectRectHandler } from \"./FasadeSelectRectHandler\";\r\nimport { bringSelectedToFront } from \"../reducers/panels\";\r\nimport Shape from \"../components/shapes/Shape\";\r\nimport ResizeCursor from \"../components/shapes/cursors/ResizeCursor\";\r\nexport class FasadeFreeHandler extends MouseHandler {\r\n    constructor(state) {\r\n        super(state);\r\n        this.setStatusBar()\r\n    }\r\n    setStatusBar() {\r\n        if (this.isMobile)\r\n            this.statusBar = [{ text: ` - ${this.captions.move};  `, icons: [\"gest_move\"] },\r\n            { text: ` - ${this.captions.rotate};  `, icons: [\"gest_dbltap\"] },\r\n            { text: ` - ${this.captions.scale}  `, icons: [\"gest_zoom\"] }\r\n            ];\r\n        else\r\n            this.statusBar = [{ text: ` - ${this.captions.move};  `, icons: [\"rmb\", \"mmb\"] },\r\n            { text: ` - ${this.captions.scale}  `, icons: [\"mmb_wheel\"] }\r\n            ];\r\n    }\r\n    move({ curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.move({ curPoint, viewPortData });\r\n        if (this.drag) {\r\n            //if (!keys.shiftKey) appData.selectedPanels.clear()\r\n            appData.selectedPanels.add(this.activeShape)\r\n            if (!this.activeShape.state.fixed) appActions.movePanel(this.activeShape, this.dragPos);\r\n            return;\r\n        }\r\n        this.activeShape = null;\r\n        for (let p of [...appData.fasades, ...appData.fasadeDimensions]) {\r\n            if (p.isUnderCursor(this.coord, viewPortData.pixelRatio)) {\r\n                if (!p.state.selectable) continue;\r\n                if (!p.state.fixed_move && p.type === Shape.DIMENSION) \r\n                        appActions.setCursor(new ResizeCursor(this.coord, p.vertical));\r\n                        else\r\n                        appActions.setCursor(new SelectCursor(this.coord));\r\n                p.setState({ highlighted: true })\r\n                this.activeShape = p;\r\n            } else {\r\n                p.setState({ highlighted: false })\r\n            }\r\n        }\r\n        if (!this.activeShape) appActions.setCursor(new SelectCursor(this.coord));\r\n        setViewPortData(prevData => setCurCoord(this.coord, this.curPoint, prevData));\r\n\r\n    }\r\n    down({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.down({ curPoint, viewPortData })\r\n\r\n        setViewPortData(prevData => setCurCoord(this.coord, curPoint, prevData));\r\n        if (button === 1 || button === 2) {\r\n            appActions.setScreenStatus(Status.PAN, { startPoint: this.coord, prevStatus: Status.FREE, prevMouseHandler: this });\r\n            return\r\n        }\r\n        if (button !== 0) return\r\n        this.activeShape = null;\r\n        for (let p of [...appData.fasades, ...appData.fasadeDimensions]) {\r\n            if (p.isUnderCursor(this.coord, viewPortData.pixelRatio)) {\r\n                if (!p.state.selectable) continue;\r\n                this.activeShape = p;\r\n                if(!p.state.selected && !keys.shiftKey) appData.selectedPanels.clear()\r\n            } else {\r\n                //p.setState({ selected: false })\r\n            }\r\n        }\r\n        this.drag = true;\r\n        if (this.activeShape && this.activeShape.type === Shape.DIMENSION) {\r\n            const { x, y } = this.activeShape.getPosition()\r\n            const dx = this.coord.x - x;\r\n            const dy = y - this.coord.y;\r\n            //this.drag = true;\r\n            this.dragPos = { dx, dy }\r\n        } else\r\n        if (!appData.isMobile) { appActions.startSelection(this.coord, FasadeSelectRectHandler) }\r\n    }\r\n    click({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.click({ curPoint, viewPortData });\r\n        if (button !== 0) return\r\n        for (let p of [...appData.fasades, ...appData.fasadeDimensions]) {\r\n            if (p.isUnderCursor(this.coord, viewPortData.pixelRatio)) {\r\n                if(!p.state.selectable) continue\r\n                if (keys.shiftKey) {\r\n                    if(appData.selectedPanels.has(p)) appData.selectedPanels.delete(p);\r\n                            else appData.selectedPanels.add(p)\r\n                } else {\r\n                    appData.selectedPanels.add(p)\r\n                }\r\n            } else {\r\n                if (!keys.shiftKey) {\r\n                    appData.selectedPanels.delete(p)\r\n                }\r\n            }\r\n        }\r\n        appData.fasades = bringSelectedToFront(appData.fasades, appData.selectedPanels)\r\n        appActions.updateState()\r\n    }\r\n    doubleClick({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.doubleClick({ curPoint, viewPortData })\r\n\r\n    }\r\n    keypress(code) {\r\n        return super.keypress(code)\r\n    }\r\n    up({ appActions }) {\r\n        this.drag = false;\r\n        appActions.updateState()\r\n    }\r\n    getSelectedShapeProperties(state) {\r\n        this.properties = [];\r\n        const shape = state.selectionManager.getSelectedPanels().pop();\r\n        if (shape) {\r\n            const props = shape.getProperties();\r\n            this.setProperties(props);\r\n            this.currentObject = shape;\r\n        }\r\n    }\r\n\r\n    touchDown({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        super.touchDown({ pointerId, curPoint, viewPortData })\r\n        this.down({ button: 0, curPoint, viewPortData, setViewPortData, appActions, appData })\r\n    }\r\n    touchMove({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        super.touchMove({ pointerId, curPoint, viewPortData })\r\n        const tm = viewPortData.touchManager\r\n        if (tm.getTouchCount() > 1) {\r\n            const diff = Geometry.distance(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const midPoint = Geometry.midPoint(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const delta = tm.prevDiff - diff\r\n            if (Math.abs(delta) > 10) {\r\n                const deltaY = Math.sign(delta)\r\n                this.wheel({ deltaY, curPoint: midPoint, viewPortData, setViewPortData })\r\n                tm.prevDiff = diff\r\n            }\r\n        }\r\n        if (tm.getTouchCount() === 1) {\r\n            if (this.drag) {\r\n                appData.fasades.forEach(p => p.state.selected = false)\r\n                this.activeShape.state.selected = true\r\n                //appActions.movePanel(this.activeShape, this.dragPos);\r\n                return;\r\n            }\r\n            appActions.setScreenStatus(Status.PAN, { startPoint: this.coord, prevStatus: Status.FREE, prevMouseHandler: this })\r\n        }\r\n    }\r\n}","import Dimension from './Dimension';\r\nexport default class TwoPanelDimension extends Dimension {\r\n    constructor(panel1, panel2, inside) {\r\n        super({ vertical: !panel1.vertical, ...TwoPanelDimension.getPoints(panel1, panel2, inside) });\r\n        this.panel1 = panel1\r\n        this.panel2 = panel2\r\n        this.inside = inside\r\n    }\r\n    draw(ctx, realRect, screenRect, print = false) {\r\n        super.draw(ctx, realRect, screenRect, print)\r\n    }\r\n    refresh() {\r\n        ({ firstPoint: this.firstPoint, secondPoint: this.secondPoint, midPoint: this.midPoint } = TwoPanelDimension.getPoints(this.panel1, this.panel2, this.inside))\r\n        super.refresh()\r\n\r\n    }\r\n    delete(){\r\n        this.panel1.dimensions.delete(this)\r\n        this.panel2.dimensions.delete(this)\r\n    }\r\n    static getPoints(panel1, panel2, inside) {\r\n        const vert = panel1.vertical\r\n        const firstPoint = {}\r\n        const secondPoint = {}\r\n        let [p1, p2] = [panel1, panel2]\r\n        if (vert) {\r\n            if (panel1.rect.x > panel2.rect.x) ([p1, p2] = [panel2, panel1])\r\n            firstPoint.x = inside ? p1.rect.last.x : p1.rect.x\r\n            firstPoint.y = (p1.rect.last.y + p1.rect.y) / 2\r\n            secondPoint.x = inside ? p2.rect.x : p2.rect.last.x\r\n            secondPoint.y = (p2.rect.last.y + p2.rect.y) / 2\r\n        } else {\r\n            if (panel1.rect.y > panel2.rect.y) ([p1, p2] = [panel2, panel1])\r\n            firstPoint.x = (p1.rect.last.x + p1.rect.x) / 2\r\n            firstPoint.y = inside ? p1.rect.last.y : p1.rect.y\r\n            secondPoint.x = (p2.rect.last.x + p2.rect.x) / 2\r\n            secondPoint.y = inside ? p2.rect.y : p2.rect.last.y\r\n        }\r\n        const midPoint = { x: (firstPoint.x + secondPoint.x) / 2, y: (firstPoint.y + secondPoint.y) / 2 }\r\n        return { firstPoint, secondPoint, midPoint }\r\n    }\r\n}","import { MouseHandler } from \"./MouseHandler\";\r\nimport { Status } from \"../reducers/functions\";\r\nimport { setCurCoord } from \"../functions/viewPortFunctions\";\r\nimport Geometry from \"../utils/geometry\";\r\nimport TwoPanelDimension from \"../components/shapes/TwoPanelDimension\";\r\nimport DimensionCursor from \"../components/shapes/cursors/DimensionCursor\";\r\nexport class TwoPanelDimensionCreateHandler extends MouseHandler {\r\n    constructor(state, inside) {\r\n        super(state);\r\n        this.inside = inside\r\n        this.setStatusBar()\r\n    }\r\n    setStatusBar() {\r\n        if (this.isMobile)\r\n            this.statusBar = [{ text: ` - ${this.captions.move};  `, icons: [\"gest_move\"] },\r\n            { text: ` - ${this.captions.rotate};  `, icons: [\"gest_dbltap\"] },\r\n            { text: ` - ${this.captions.scale}  `, icons: [\"gest_zoom\"] }\r\n            ];\r\n        else\r\n            this.statusBar = [{ text: ` - ${this.captions.move};  `, icons: [\"rmb\", \"mmb\"] },\r\n            { text: ` - ${this.captions.scale}  `, icons: [\"mmb_wheel\"] }\r\n            ];\r\n    }\r\n    move({ curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.move({ curPoint, viewPortData });\r\n        if (this.clickCount < 1) appData.cursor.setType(DimensionCursor.ORD)\r\n        switch (this.clickCount) {\r\n            case 0:\r\n            case 1: {\r\n                for (let p of appData.panels) {\r\n                    if (!p.state.selectable) continue;\r\n                    if (p === this.firstPanel) continue\r\n                    if (this.firstPanel && p.vertical !== this.firstPanel.vertical) continue\r\n                    if (!p.state.measurable) continue\r\n                    if (p.isUnderCursor(this.coord, viewPortData.pixelRatio)) {\r\n                        p.setState({ highlighted: true })\r\n                        appData.cursor.setType(p.vertical ? DimensionCursor.VERT : DimensionCursor.HOR)\r\n                    } else {\r\n                        p.setState({ highlighted: false })\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 2: {\r\n                const { midPoint } = TwoPanelDimension.getPoints(this.firstPanel, this.secondPanel, this.inside)\r\n                const offset = this.curShape.vertical ? this.coord.x - midPoint.x : this.coord.y - midPoint.y\r\n                const offsetPoint = this.curShape.vertical ? { x: midPoint.x + offset, y: midPoint.y } : { x: midPoint.x, y: midPoint.y + offset }\r\n                this.curShape.setOffsetPoint(offsetPoint, appData.wardrobe)\r\n                appData.cursor.setType(this.curShape.vertical ? DimensionCursor.VERT : DimensionCursor.HOR)\r\n                break;\r\n            }\r\n            default: { }\r\n        }\r\n        setViewPortData(prevData => setCurCoord(this.coord, this.curPoint, prevData));\r\n\r\n    }\r\n    down({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.down({ curPoint, viewPortData })\r\n        setViewPortData(prevData => setCurCoord(this.coord, curPoint, prevData));\r\n        if (button === 1) {\r\n            appActions.setScreenStatus(Status.PAN, { startPoint: this.coord, prevStatus: Status.FREE, prevMouseHandler: this });\r\n            return\r\n        }\r\n    }\r\n    click({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.click({ curPoint, viewPortData });\r\n        if (button !== 0) return\r\n        switch (this.clickCount) {\r\n            case 1:\r\n            case 2: {\r\n                this.activePanel = null;\r\n                this.firstPoint = this.coord\r\n                for (let p of appData.panels) {\r\n                    if (!p.state.selectable) continue;\r\n                    if (p === this.firstPanel) continue\r\n                    if (!p.state.measurable) continue\r\n                    if (this.firstPanel && p.vertical !== this.firstPanel.vertical) continue\r\n                    if (p.isUnderCursor(this.coord, viewPortData.pixelRatio)) {\r\n                        this.activePanel = p;\r\n                    }\r\n                }\r\n\r\n                if (this.activePanel) {\r\n                    if (this.clickCount === 1) this.firstPanel = this.activePanel\r\n                    if (this.clickCount === 2) {\r\n                        this.secondPanel = this.activePanel\r\n                        this.curShape = new TwoPanelDimension(this.firstPanel, this.secondPanel, this.inside)\r\n                    }\r\n                } else { this.clickCount = 0; this.firstPanel = null }\r\n                break;\r\n            }\r\n            case 3: {\r\n                this.firstPanel.dimensions.add(this.curShape)\r\n                this.secondPanel.dimensions.add(this.curShape)\r\n                appActions.addDimension(this.curShape)\r\n                appActions.cancel()\r\n                break;\r\n            }\r\n            default: { }\r\n        }\r\n    }\r\n    doubleClick({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.doubleClick({ curPoint, viewPortData })\r\n        if (button === 0 && this.activePanel) {\r\n            if (appData.material.texture) return;\r\n            for (let panel of appData.panels) {\r\n                panel.state.selected = (panel === this.activePanel)\r\n            }\r\n            appActions.repaint()\r\n            return true;\r\n        }\r\n    }\r\n    keypress(code) {\r\n        return super.keypress(code)\r\n    }\r\n    up({ button, appActions }) {\r\n        if(button === 2) return appActions.cancel()\r\n        this.drag = false;\r\n        appActions.updateState()\r\n    }\r\n    getSelectedShapeProperties(state) {\r\n        this.properties = [];\r\n        const shape = state.selectionManager.getSelectedPanels().pop();\r\n        if (shape) {\r\n            const props = shape.getProperties();\r\n            this.setProperties(props);\r\n            this.currentObject = shape;\r\n        }\r\n    }\r\n\r\n    touchDown({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        super.touchDown({ pointerId, curPoint, viewPortData })\r\n        this.down({ button: 0, curPoint, viewPortData, setViewPortData, appActions, appData })\r\n    }\r\n    touchMove({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        super.touchMove({ pointerId, curPoint, viewPortData })\r\n        const tm = viewPortData.touchManager\r\n        if (tm.getTouchCount() > 1) {\r\n            const diff = Geometry.distance(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const midPoint = Geometry.midPoint(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const delta = tm.prevDiff - diff\r\n            if (Math.abs(delta) > 10) {\r\n                const deltaY = Math.sign(delta)\r\n                this.wheel({ deltaY, curPoint: midPoint, viewPortData, setViewPortData })\r\n                tm.prevDiff = diff\r\n            }\r\n        }\r\n        if (tm.getTouchCount() === 1) {\r\n            if (this.drag) {\r\n                appData.panels.forEach(p => p.state.selected = false)\r\n                this.activePanel.state.selected = true\r\n                appActions.movePanel(this.activePanel, this.dragPos);\r\n                return;\r\n            }\r\n            appActions.setScreenStatus(Status.PAN, { startPoint: this.coord, prevStatus: Status.FREE, prevMouseHandler: this })\r\n        }\r\n    }\r\n}","import Dimension from './Dimension';\r\nexport default class SingleFasadeDimension extends Dimension {\r\n    constructor(vertical, fasade) {\r\n        const {firstPoint, secondPoint} = fasade.getSingleDimensionData(vertical)\r\n        super({vertical, firstPoint, secondPoint });\r\n        this.fasade = fasade\r\n        this.vertical = vertical\r\n    }\r\n    draw(ctx, realRect, screenRect, print = false) {\r\n        super.draw(ctx, realRect, screenRect, print)\r\n    }\r\n    refresh() {\r\n        const { firstPoint, secondPoint } = this.fasade.getSingleDimensionData(this.vertical)\r\n        this.firstPoint = firstPoint\r\n        this.secondPoint = secondPoint\r\n        this.midPoint = { x: (this.firstPoint.x + this.secondPoint.x) / 2, y: (this.firstPoint.y + this.secondPoint.y) / 2 }\r\n        super.refresh()\r\n\r\n    }\r\n    delete(){\r\n        this.fasade.dimensions.delete(this)\r\n    }\r\n\r\n}","import { MouseHandler } from \"./MouseHandler\";\r\nimport { Status } from \"../reducers/functions\";\r\nimport { setCurCoord } from \"../functions/viewPortFunctions\";\r\nimport Geometry from \"../utils/geometry\";\r\nimport SingleFasadeDimension from \"../components/shapes/SingleFasadeDimension\";\r\nimport DimensionCursor from \"../components/shapes/cursors/DimensionCursor\";\r\nexport class SingleFasadeDimensionCreateHandler extends MouseHandler {\r\n    constructor(state, vertical) {\r\n        super(state);\r\n        this.vertical = vertical\r\n        this.setStatusBar()\r\n    }\r\n    setStatusBar() {\r\n        if (this.isMobile)\r\n            this.statusBar = [{ text: ` - ${this.captions.move};  `, icons: [\"gest_move\"] },\r\n            { text: ` - ${this.captions.rotate};  `, icons: [\"gest_dbltap\"] },\r\n            { text: ` - ${this.captions.scale}  `, icons: [\"gest_zoom\"] }\r\n            ];\r\n        else\r\n            this.statusBar = [{ text: ` - ${this.captions.move};  `, icons: [\"rmb\", \"mmb\"] },\r\n            { text: ` - ${this.captions.scale}  `, icons: [\"mmb_wheel\"] }\r\n            ];\r\n    }\r\n    move({ curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.move({ curPoint, viewPortData });\r\n        appData.cursor.setType(this.vertical ? DimensionCursor.VERT : DimensionCursor.HOR)\r\n        switch (this.clickCount) {\r\n            case 0: {\r\n                for (let p of appData.fasades) {\r\n                    if (!p.state.selectable) continue;\r\n                    if (p.isUnderCursor(this.coord, viewPortData.pixelRatio)) {\r\n                        p.setState({ highlighted: true })\r\n                        \r\n                    } else {\r\n                        p.setState({ highlighted: false })\r\n\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 1: {\r\n                const offset = this.vertical ? this.coord.x - this.firstPoint.x : this.coord.y - this.firstPoint.y\r\n                //const { midPoint } = TwoPanelDimension.getPoints(this.activePanel, this.activePanel)\r\n                const offsetPoint = this.vertical ? { x: this.midPoint.x + offset, y: this.midPoint.y } : { x: this.midPoint.x, y: this.midPoint.y + offset }\r\n                this.curShape.setOffsetPoint(offsetPoint, appData.wardrobe)\r\n                break;\r\n            }\r\n            default: { }\r\n        }\r\n        setViewPortData(prevData => setCurCoord(this.coord, this.curPoint, prevData));\r\n\r\n    }\r\n    down({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.down({ curPoint, viewPortData })\r\n        setViewPortData(prevData => setCurCoord(this.coord, curPoint, prevData));\r\n        if (button === 1) {\r\n            appActions.setScreenStatus(Status.PAN, { startPoint: this.coord, prevStatus: Status.FREE, prevMouseHandler: this });\r\n            return\r\n        }\r\n    }\r\n    click({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.click({ curPoint, viewPortData });\r\n        if (button !== 0) return\r\n        switch (this.clickCount) {\r\n            case 1: {\r\n                this.activePanel = null;\r\n                //this.firstPoint = this.coord\r\n                for (let p of appData.fasades) {\r\n                    if (!p.state.selectable) continue;\r\n                    if (p.isUnderCursor(this.coord, viewPortData.pixelRatio)) {\r\n                        this.activePanel = p;\r\n                        const { firstPoint, secondPoint, midPoint } = p.getSingleDimensionData(this.vertical)\r\n                        this.firstPoint = firstPoint\r\n                        this.secondPoint = secondPoint\r\n                        this.midPoint = midPoint\r\n                        this.curShape = new SingleFasadeDimension(this.vertical, p)\r\n                    }\r\n                }\r\n                if (!this.activePanel) this.clickCount = 0\r\n                break;\r\n            }\r\n            case 2: {\r\n                this.activePanel.dimensions.add(this.curShape)\r\n                appActions.addFasadeDimension(this.curShape)\r\n                appActions.cancel()\r\n                break;\r\n            }\r\n            default: { }\r\n        }\r\n    }\r\n    doubleClick({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.doubleClick({ curPoint, viewPortData })\r\n        if (button === 0 && this.activePanel) {\r\n            for (let panel of appData.fasades) {\r\n                panel.state.selected = (panel === this.activePanel)\r\n            }\r\n            appActions.repaint()\r\n            return true;\r\n        }\r\n    }\r\n    keypress(code) {\r\n        return super.keypress(code)\r\n    }\r\n    up({ button, appActions }) {\r\n        if (button === 2) return appActions.cancel()\r\n        this.drag = false;\r\n        appActions.updateState()\r\n    }\r\n    getSelectedShapeProperties(state) {\r\n        this.properties = [];\r\n        const shape = state.selectionManager.getSelectedPanels().pop();\r\n        if (shape) {\r\n            const props = shape.getProperties();\r\n            this.setProperties(props);\r\n            this.currentObject = shape;\r\n        }\r\n    }\r\n\r\n    touchDown({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        super.touchDown({ pointerId, curPoint, viewPortData })\r\n        this.down({ button: 0, curPoint, viewPortData, setViewPortData, appActions, appData })\r\n    }\r\n    touchMove({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        super.touchMove({ pointerId, curPoint, viewPortData })\r\n        const tm = viewPortData.touchManager\r\n        if (tm.getTouchCount() > 1) {\r\n            const diff = Geometry.distance(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const midPoint = Geometry.midPoint(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const delta = tm.prevDiff - diff\r\n            if (Math.abs(delta) > 10) {\r\n                const deltaY = Math.sign(delta)\r\n                this.wheel({ deltaY, curPoint: midPoint, viewPortData, setViewPortData })\r\n                tm.prevDiff = diff\r\n            }\r\n        }\r\n        if (tm.getTouchCount() === 1) {\r\n            if (this.drag) {\r\n                appData.panels.forEach(p => p.state.selected = false)\r\n                this.activePanel.state.selected = true\r\n                appActions.movePanel(this.activePanel, this.dragPos);\r\n                return;\r\n            }\r\n            appActions.setScreenStatus(Status.PAN, { startPoint: this.coord, prevStatus: Status.FREE, prevMouseHandler: this })\r\n        }\r\n    }\r\n}","import { ScreenActions } from \"../actions/ScreenActions\";\r\nimport { ShapeActions } from \"../actions/ShapeActions\";\r\nimport DimensionCursor from \"../components/shapes/cursors/DimensionCursor\";\r\nimport DragCursor from \"../components/shapes/cursors/DragCursor\";\r\nimport SelectCursor from \"../components/shapes/cursors/SelectCursor\";\r\nimport DrawerBlockShape from \"../components/shapes/DrawerBlockShape\";\r\nimport DrawerShape from \"../components/shapes/DrawerShape\";\r\nimport PanelShape from \"../components/shapes/PanelShape\"\r\nimport Shape from \"../components/shapes/Shape\";\r\nimport TubeShape from \"../components/shapes/TubeShape\";\r\nimport { PanelCreateHandler } from \"../handlers/PanelCreateHandler\";\r\nimport { PanelMoveHandler } from \"../handlers/PanelMoveHandler\";\r\nimport { SinglePanelDimensionCreateHandler } from \"../handlers/SinglePanelDimensionCreateHandler\";\r\nimport { PanelFreeHandler } from \"../handlers/PanelFreeHandler\";\r\nimport { FasadeFreeHandler } from \"../handlers/FasadeFreeHandler\";\r\nimport { TwoPanelDimensionCreateHandler } from \"../handlers/TwoPanelDimensionCreateHandler\";\r\nimport { Status } from \"./functions\";\r\nimport { bringSelectedToFront, deleteAllLinksToPanels, distribute, divideFasadesHor, divideFasadesVert, selectAllChildrenFasades, selectAllJointedPanels, updateParallelPanels } from \"./panels\";\r\nimport { SingleFasadeDimensionCreateHandler } from \"../handlers/SingleFasadeDimensionCreateHandler\";\r\n\r\nexport default function panelReducer(state, action) {\r\n    switch (action.type) {\r\n        case ShapeActions.ADD_DIMENSION:\r\n            const dimension = action.payload\r\n            state.dimensions.add(dimension);\r\n\r\n            return { result: true, newState: { ...state, status: Status.FREE } };\r\n\r\n        case ShapeActions.ADD_FASADE_DIMENSION:\r\n            const fasadeDimension = action.payload\r\n            state.fasadeDimensions.add(fasadeDimension);\r\n\r\n            return { result: true, newState: { ...state, status: Status.FREE } };\r\n\r\n        case ScreenActions.ADD_PANEL:\r\n            const panel = action.payload\r\n            state.panels.add(panel);\r\n            updateParallelPanels(state.panels)\r\n            return { result: true, newState: { ...state, } };\r\n\r\n        case ShapeActions.CREATE_DRAWER:\r\n            state.selectedPanels.clear()\r\n            var newState = {\r\n                ...state, curShape: new DrawerShape({ wardrobe: state.wardrobe }),\r\n                cursor: new DragCursor(state.curRealPoint),\r\n                status: Status.CREATE,\r\n                toolButtonsPressed: getButtonPressed({\r\n                    createDrawer: true,\r\n                })\r\n            }\r\n            return { result: true, newState: { ...newState, mouseHandler: new PanelCreateHandler(newState, true) } };\r\n\r\n        case ShapeActions.CREATE_DRAWERBLOCK:\r\n            state.selectedPanels.clear()\r\n            newState = {\r\n                ...state, curShape: new DrawerBlockShape({ wardrobe: state.wardrobe }),\r\n                cursor: new DragCursor(state.curRealPoint),\r\n                status: Status.CREATE,\r\n                toolButtonsPressed: getButtonPressed({\r\n                    createDrawerBlock: true,\r\n                })\r\n            }\r\n            return { result: true, newState: { ...newState, mouseHandler: new PanelCreateHandler(newState, true) } };\r\n\r\n        case ShapeActions.CREATE_PANEL:\r\n            state.panels.forEach(p => { p.setState({ selected: false }) })\r\n            state.selectedPanels.clear()\r\n            newState = {\r\n                ...state, curShape: new PanelShape({ ...action.payload, wardrobe: state.wardrobe }),\r\n                cursor: new DragCursor(state.curRealPoint),\r\n                status: Status.CREATE,\r\n                toolButtonsPressed: getButtonPressed({\r\n                    createVertical: action.payload.vertical,\r\n                    createHorizontal: !action.payload.vertical,\r\n                })\r\n            }\r\n            return { result: true, newState: { ...newState, mouseHandler: new PanelCreateHandler(newState, true) } };\r\n\r\n        case ShapeActions.CREATE_TUBE:\r\n            state.selectedPanels.clear()\r\n            newState = {\r\n                ...state, curShape: new TubeShape({ wardrobe: state.wardrobe }),\r\n                cursor: new DragCursor(state.curRealPoint),\r\n                status: Status.CREATE,\r\n                toolButtonsPressed: getButtonPressed({\r\n                    createTube: true,\r\n                })\r\n            }\r\n            return { result: true, newState: { ...newState, mouseHandler: new PanelCreateHandler(newState, true) } };\r\n\r\n        case ShapeActions.CREATE_FASADE_DIMENSION:\r\n            newState = {\r\n                ...state,\r\n                toolButtonsPressed: getButtonPressed({\r\n                    createFasadeLengthDimension: action.payload.vertical,\r\n                    createFasadeWidthDimension: !action.payload.vertical,\r\n                }), cursor: new DimensionCursor(state.curRealPoint)//, status: Status.CREATE\r\n            }\r\n            return { result: true, newState: { ...newState, mouseHandler: new SingleFasadeDimensionCreateHandler(newState, action.payload) } };\r\n\r\n        case ShapeActions.CREATE_SINGLE_DIMENSION:\r\n            newState = {\r\n                ...state,\r\n                toolButtonsPressed: getButtonPressed({\r\n                    createSingleDimension: true,\r\n                }), cursor: new DimensionCursor(state.curRealPoint)//, status: Status.CREATE\r\n            }\r\n            return { result: true, newState: { ...newState, mouseHandler: new SinglePanelDimensionCreateHandler(newState) } };\r\n\r\n        case ShapeActions.CREATE_TWO_PANEL_DIMENSION:\r\n            newState = {\r\n                ...state,\r\n                toolButtonsPressed: getButtonPressed({\r\n                    createTwoPanelDimensionInside: action.payload.inside,\r\n                    createTwoPanelDimensionOutside: !action.payload.inside,\r\n                }), cursor: new DimensionCursor(state.curRealPoint)//, status: Status.CREATE\r\n            }\r\n            return { result: true, newState: { ...newState, mouseHandler: new TwoPanelDimensionCreateHandler(newState, action.payload.inside) } };\r\n\r\n        case ShapeActions.DELETE_SELECTED:\r\n            let panels = new Set()\r\n            deleteAllLinksToPanels(state.panels, state.selectedPanels)\r\n            state.panels.forEach((p) => {\r\n                if (!state.selectedPanels.delete(p)) {\r\n                    panels.add(p);\r\n                }\r\n                else {\r\n                    p.dimensions.forEach(d => { d.delete(); state.dimensions.delete(d) })\r\n                    if (p.singleDimension) { state.dimensions.delete(p.singleDimension); p.singleDimension.delete(); }\r\n                    p.dimensions = new Set()\r\n                }\r\n            });\r\n            let dimensions = new Set()\r\n            state.dimensions.forEach((p) => {\r\n                if (!state.selectedPanels.delete(p)) {\r\n                    dimensions.add(p)\r\n                }\r\n                else state.dimensions.forEach(d => d.delete())\r\n            });\r\n\r\n            newState = {\r\n                ...state,\r\n                panels,\r\n                dimensions,\r\n                mouseHandler: new PanelFreeHandler(state),\r\n                cursor: new SelectCursor()\r\n            };\r\n            return { result: true, newState: { ...newState } };\r\n\r\n        case ShapeActions.DELETE_SELECTED_CONFIRM:\r\n            for (let p of state.selectedPanels) {\r\n                if (p.type !== Shape.DIMENSION) selectAllJointedPanels(p, state.selectedPanels)\r\n            }\r\n            let showConfirm = { show: true, messageKey: action.payload.isJoints ? \"deleteJointedPanels\" : \"deletePanels\", actions: [{ caption: \"OK\", onClick: ShapeActions.deleteSelected }] }\r\n            return { result: true, newState: { ...state, showConfirm } };\r\n\r\n\r\n        case ShapeActions.DELETE_SELECTED_FASADES:\r\n            let fasades = new Set()\r\n            const extSelectedFasades = selectAllChildrenFasades(state.selectedPanels)\r\n            extSelectedFasades.forEach(s => state.selectedPanels.add(s))\r\n            state.fasades.forEach((p) => {\r\n                if (!state.selectedPanels.delete(p)) {\r\n                    fasades.add(p);\r\n                }\r\n                else {\r\n                    p.dimensions.forEach(d => { \r\n                                d.delete(); \r\n                                state.fasadeDimensions.delete(d) \r\n                            })\r\n                    p.dimensions = new Set()\r\n                }\r\n            });\r\n            let fasadeDimensions = new Set()\r\n            state.fasadeDimensions.forEach((p) => {\r\n                if (!state.selectedPanels.delete(p)) {\r\n                    fasadeDimensions.add(p)\r\n                }\r\n                else state.fasadeDimensions.forEach(d => d.delete())\r\n            });\r\n            newState = {\r\n                ...state,\r\n                fasades,\r\n                fasadeDimensions,\r\n                mouseHandler: new FasadeFreeHandler(state),\r\n                cursor: new SelectCursor()\r\n            };\r\n            return { result: true, newState: { ...newState } };\r\n    \r\n        case ShapeActions.DELETE_SELECTED_FASADES_CONFIRM:\r\n            showConfirm = { show: true, messageKey: \"deletePanels\", actions: [{ caption: \"OK\", onClick: ShapeActions.deleteSelectedFasades }] }\r\n            return { result: true, newState: { ...state, showConfirm } };\r\n\r\n        case ShapeActions.DISTRIBUTE:\r\n            distribute(state.selectedPanels)\r\n            return { result: true, newState: { ...state } };\r\n\r\n        case ShapeActions.DIVIDE_FASAD_HOR:\r\n            state.selectedPanels.forEach(s => s.deleteAllChildren(state))\r\n            let newFasades = divideFasadesHor(state.selectedPanels, action.payload)\r\n            newFasades.forEach(f => state.fasades.add(f))\r\n            state.selectedPanels.clear()\r\n            return { result: true, newState: { ...state } };\r\n    \r\n        case ShapeActions.DIVIDE_FASAD_VERT:\r\n            state.selectedPanels.forEach(s => s.deleteAllChildren(state))\r\n            newFasades = divideFasadesVert(state.selectedPanels, action.payload)\r\n            newFasades.forEach(f => state.fasades.add(f))\r\n            state.selectedPanels.clear()\r\n            return { result: true, newState: { ...state } };\r\n\r\n\r\n        case ShapeActions.FIX_MIN_LENGTH:\r\n            state.selectedPanels.forEach(p => { if (p.type !== Shape.DIMENSION) p.fixMinLength(action.payload) })\r\n            return { result: true, newState: { ...state } };\r\n\r\n        case ShapeActions.FIX_MAX_LENGTH:\r\n            state.selectedPanels.forEach(p => { if (p.type !== Shape.DIMENSION) p.fixMaxLength(action.payload) })\r\n            return { result: true, newState: { ...state } };\r\n\r\n        case ShapeActions.FIX_WIDTH:\r\n            state.selectedPanels.forEach(p => { if (p.type !== Shape.DIMENSION) p.fixWidth(action.payload) })\r\n            return { result: true, newState: { ...state } };\r\n\r\n        case ShapeActions.FIX_HEIGHT:\r\n            state.selectedPanels.forEach(p => { if (p.type !== Shape.DIMENSION) p.fixHeight(action.payload) })\r\n            return { result: true, newState: { ...state } };\r\n        \r\n        case ShapeActions.MOVE_PANEL:\r\n            newState = {\r\n                ...state, curShape: action.payload.panel,\r\n                //cursor: new ResizeCursor(state.curRealPoint, action.payload.panel.vertical),\r\n            }\r\n            return {\r\n                result: true,\r\n                newState: {\r\n                    ...newState,\r\n                    mouseHandler: new PanelMoveHandler(newState, false, action.payload.movePoint)\r\n                }\r\n            };\r\n\r\n        case ShapeActions.SELECT_PARENT:\r\n            action.payload.parent.state.hidden = false\r\n            state.selectedPanels.clear() \r\n            state.selectedPanels.add(action.payload.parent)\r\n            state.fasades = bringSelectedToFront(state.fasades, state.selectedPanels)\r\n            return { result: true, newState: { ...state } };\r\n\r\n        case ShapeActions.SET_PANEL_STATE:\r\n            state.selectedPanels.forEach(p => { if (p.type !== Shape.DIMENSION) p.setState(action.payload) })\r\n            return { result: true, newState: { ...state } };\r\n\r\n        case ShapeActions.SET_PROPERTY:\r\n            state.selectedPanels.forEach(p => { if (p.type !== Shape.DIMENSION) p.setProperty(action.payload) })\r\n            return { result: true, newState: { ...state } };\r\n\r\n        case ScreenActions.SELECT_PANEL:\r\n            return { result: true, newState: { ...state, selectedPanels: action.payload } };\r\n\r\n        default: {\r\n            return { result: false, newState: state }\r\n        }\r\n    }\r\n}\r\n\r\nexport function getButtonPressed(buttons){\r\n    const buttonPressed = {\r\n        createVertical: false,\r\n        createHorizontal: false,\r\n        createDrawer: false,\r\n        createTube: false,\r\n        createSingleDimension: false,\r\n        createTwoPanelDimensionInside: false,\r\n        createTwoPanelDimensionOutside: false,\r\n        createFasadeLengthDimension: false,\r\n        createFasadeWidthDimension: false,\r\n    }\r\n    return {buttonPressed, ...buttons}\r\n}","import SelectCursor from \"../components/shapes/cursors/SelectCursor\";\r\nimport { captions } from '../locale/ru.js';\r\nimport { getNewDate, isMobile, Status } from \"./functions\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { getViewPortState } from \"../components/ViewPortContainer\";\r\nimport { createFasades, createNewState } from \"./createNewState\";\r\nimport { getButtonPressed } from \"./panelReducer\";\r\nimport { SelectionSet } from \"./panels\";\r\nimport { getFasadBases } from \"./materialReducer\";\r\n\r\nvar user = { name: \"\", activated: false };\r\nvar token = localStorage.getItem('token') || sessionStorage.getItem('token');\r\nif (!token) {\r\n  const cookieToken = document.cookie.split(\"; \").map(i => i.split(\"=\")).find(i => i[0] === 'token')\r\n  if (Array.isArray(cookieToken)) token = cookieToken[1]\r\n}\r\n\r\nif (token) {\r\n  user = jwtDecode(token)\r\n  user.token = token;\r\n}\r\nexport const WORKSPACE = {\r\n  CORPUS: \"CORPUS\",\r\n  FASADES: \"FASADES\"\r\n}\r\n\r\nexport function getInitialState(data) {\r\n  const { wardrobe, panels } = createNewState(data)\r\n  const fasades = createFasades({wardrobe})\r\n  const fasadBaseColors = {}\r\n  getFasadBases().forEach(b => fasadBaseColors[b] = [])\r\n  return {\r\n    workspace: WORKSPACE.CORPUS,\r\n    cursor: new SelectCursor({ x: 0, y: 0 }),\r\n    curShape: null,\r\n    prevStatus: Status.FREE,\r\n    selectedPanels: new SelectionSet(),\r\n    dimensions: new Set(),\r\n    fasades: new Set(fasades),\r\n    fasadeDimensions: new Set(),\r\n    panels: new Set(panels),\r\n    deleteConfirm: true,\r\n    getViewportData:false,\r\n    wardrobe,\r\n    //panelMargin: 0,\r\n    toolButtonsPressed: getButtonPressed(),\r\n    information: { order: \"\", plan: \"\", currentDate: getNewDate() },\r\n    materials: {\r\n      DSP: [\"венге магия\",\"дуб сонома\", \"белый110\"],\r\n      MIRROR: [''],\r\n      fasadBases: getFasadBases(),\r\n      activeDSPColor: wardrobe.dspCorpus\r\n    },\r\n    resetView: panels.length > 0,\r\n    showLoading: false,\r\n    showConfirm: { show: false, message: \"\" },\r\n    showAlert: { show: false, message: \"\" },\r\n    showDialog: { show: false },\r\n    status: Status.FREE,\r\n    statusBar: 5,\r\n    statusParams: { creator: null, picker: null },\r\n    viewPortData: getViewPortState(),\r\n    isMobile: isMobile(),\r\n    captions,\r\n    user\r\n  }\r\n}","import ShapeStyle from '../components/shapes/ShapeStyle';\r\nimport { WORKSPACE } from '../reducers/initialState';\r\nimport { getRealRect, getScreenRect } from './viewPortFunctions'\r\n\r\nexport function paint(ctx, viewPortData, appData, print = false) {\r\n    const color = \"white\"\r\n    ctx.fillStyle = color;\r\n    ctx.lineWidth = 1;\r\n    ctx.lineJoin = 'round';\r\n    ctx.strokeStyle = \"black\"\r\n    ctx.fillRect(0, 0, viewPortData.viewPortWidth, viewPortData.viewPortHeight);\r\n    //ctx.strokeRect(0, 0, viewPortData.viewPortWidth-1, viewPortData.viewPortHeight-1);\r\n    const { topLeft, bottomRight, viewPortWidth, viewPortHeight, marginRight, marginTop, marginLeft, marginBottom } = viewPortData;\r\n    const realRect = getRealRect(topLeft, bottomRight)\r\n    const screenRect = getScreenRect(viewPortWidth, viewPortHeight)\r\n    const [panels, dimensions] = (appData.workspace === WORKSPACE.CORPUS) ? [appData.panels, appData.dimensions] : [appData.fasades, appData.fasadeDimensions]\r\n    \r\n    for (let dimension of dimensions) {\r\n        //dimension.setState({selected: appData.selectedPanels.has(dimension)})\r\n        dimension.draw(ctx, realRect, screenRect, print);\r\n    }\r\n    for (let shape of panels) {\r\n        //shape.setState({selected: appData.selectedPanels.has(shape)})\r\n        if(!shape.hasChildren() || appData.selectedPanels.has(shape) || shape.level === 0) shape.draw(ctx, realRect, screenRect, print, appData.captions);\r\n    }\r\n    let curShape = appData.mouseHandler.curShape;\r\n    if (curShape != null) curShape.draw(ctx, realRect, screenRect);\r\n    if (appData.curShape != null) appData.curShape.draw(ctx, realRect, screenRect);\r\n    ctx.lineWidth = 1;\r\n    ctx.setLineDash(ShapeStyle.SOLID);\r\n    ctx.fillStyle = color;\r\n    if(print) return\r\n    //fill margin\r\n    ctx.fillRect(0, 0, viewPortWidth - marginRight, marginTop);\r\n    ctx.fillRect(0, 0, marginLeft, viewPortHeight);\r\n    ctx.fillRect(viewPortWidth - marginRight, 0, viewPortWidth, viewPortHeight);\r\n    ctx.fillRect(marginLeft, viewPortHeight - marginBottom, viewPortWidth - marginRight, viewPortHeight - marginTop);\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.strokeRect(marginLeft, marginTop, viewPortWidth - marginRight - marginLeft, viewPortHeight - marginBottom - marginTop);\r\n\r\n    ctx.lineWidth = 1;\r\n    if (!appData.isMobile && appData.mouseHandler.mouseOnScreen) {\r\n        appData.cursor.setPosition(viewPortData.curRealPoint);\r\n        appData.cursor.draw(ctx, realRect, screenRect);\r\n    }\r\n\r\n}\r\n\r\nexport function drawArrow(ctx, vertical, position, arrowSize, arrowTipPixels) {\r\n    const {x ,y} = position\r\n    let arrow = arrowTipPixels\r\n    const size = arrowSize / 2\r\n    if (!vertical) {\r\n        ctx.moveTo(x - size + 0.5, y + 0.5);\r\n        ctx.lineTo(x + size + 0.5, y + 0.5);\r\n        ctx.moveTo(x - size + 0.5, y + 0.5);\r\n        ctx.lineTo(x - size + 0.5 + arrow, y + 0.5 - arrow);\r\n        ctx.moveTo(x - size + 0.5, y + 0.5);\r\n        ctx.lineTo(x - size + 0.5 + arrow, y + 0.5 + arrow);\r\n        ctx.moveTo(x + size + 0.5, y + 0.5);\r\n        ctx.lineTo(x + size + 0.5 - arrow, y + 0.5 - arrow);\r\n        ctx.moveTo(x + size + 0.5, y + 0.5);\r\n        ctx.lineTo(x + size + 0.5 - arrow, y + 0.5 + arrow);\r\n    } else {\r\n        ctx.moveTo(x + 0.5, y - size + 0.5);\r\n        ctx.lineTo(x + 0.5, y + size + 0.5);\r\n        ctx.moveTo(x + 0.5, y - size + 0.5);\r\n        ctx.lineTo(x + 0.5 - arrow, y - size + 0.5 + arrow);\r\n        ctx.moveTo(x + 0.5, y - size + 0.5);\r\n        ctx.lineTo(x + 0.5 + arrow, y - size + 0.5 + arrow);\r\n        ctx.moveTo(x + 0.5, y + size + 0.5);\r\n        ctx.lineTo(x + 0.5 - arrow, y + size + 0.5 - arrow);\r\n        ctx.moveTo(x + 0.5, y + size + 0.5);\r\n        ctx.lineTo(x + 0.5 + arrow, y + size + 0.5 - arrow);\r\n    }\r\n}","import { drawArrow } from \"../../../functions/drawFunctions\";\r\nimport Cursor from \"./Cursor\";\r\n\r\nexport default class ResizeCursor extends Cursor {\r\n    constructor(point, vertical) {\r\n        super(point);\r\n        this.vertical = !vertical;\r\n    }\r\n    draw(ctx, realRect, screenRect) {\r\n        this.refresh(realRect, screenRect);\r\n        ctx.strokeStyle = this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth = 2//this.getStyle().getWidth();\r\n        ctx.beginPath();\r\n        drawArrow(ctx, this.vertical, this.p0, 30, 6)\r\n        ctx.stroke();\r\n    }\r\n}\r\n","import { MouseHandler } from \"./MouseHandler\";\r\nimport RectangleShape from \"../components/shapes/RectangleShape\"\r\nimport ShapeStyle from \"../components/shapes/ShapeStyle\";\r\nimport { Rectangle } from \"../utils/geometry\";\r\nimport { Color } from \"../components/colors\";\r\nimport { setCurCoord } from \"../functions/viewPortFunctions\";\r\nimport { PanelFreeHandler } from \"./PanelFreeHandler\";\r\nexport class PanelSelectRectHandler extends MouseHandler {\r\n    constructor(point, state) {\r\n        super(state)\r\n        this.x0 = point.x\r\n        this.y0 = point.y\r\n        this.curShape = new RectangleShape(new Rectangle())\r\n        this.curShape.setStyle(new ShapeStyle(Color.BLACK, ShapeStyle.DASH))\r\n        this.setStatusBar()\r\n    }\r\n    setStatusBar() {\r\n        this.statusBar = []\r\n    }\r\n    move({ curPoint, viewPortData, setViewPortData, appData, keys }) {\r\n        super.move({ curPoint, viewPortData });\r\n        setViewPortData(prevData => setCurCoord(this.coord, this.curPoint, prevData))\r\n        let crossSelect\r\n        if (this.coord.x > this.x0) {\r\n            this.curShape.style.setStroke(ShapeStyle.SOLID)\r\n            crossSelect = false\r\n        }\r\n        else {\r\n            this.curShape.style.setStroke(ShapeStyle.DASH)\r\n            crossSelect = true\r\n        }\r\n\r\n        this.curShape.setCorners({ x: this.x0, y: this.y0 }, this.coord)\r\n        this.selectPanels({ topLeft: this.curShape.model.topLeft, bottomRight: this.curShape.model.bottomRight },\r\n            appData.panels,\r\n            appData.dimensions,\r\n            appData.selectedPanels,\r\n            crossSelect\r\n        );\r\n    }\r\n    up({ button, appActions }) {\r\n\r\n    }\r\n    keypress(code) {\r\n        return super.keypress(code)\r\n    }\r\n    click({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.click({ curPoint, viewPortData });\r\n        if (button !== 0) return\r\n        for (let p of [...appData.panels, ...appData.dimensions]) {\r\n            if (p.isUnderCursor(this.coord, viewPortData.pixelRatio)) {\r\n                if (keys.shiftKey) {\r\n                    if(appData.selectedPanels.has(p)) appData.selectedPanels.delete(p);\r\n                            else appData.selectedPanels.add(p)\r\n                } else {\r\n                    appData.selectedPanels.add(p)\r\n                }\r\n            } else {\r\n                if (!keys.shiftKey && !this.isSelectedPanels) {\r\n                    appData.selectedPanels.delete(p)\r\n                }\r\n            }\r\n        }\r\n        this.isSelectedPanels = appData.selectedPanels.size > 0\r\n        if (button === 0) appActions.stopSelection(this.isSelectedPanels, PanelFreeHandler);\r\n        appActions.updateState()\r\n    }\r\n    leave({appActions}){\r\n        super.leave()\r\n        appActions.cancel()\r\n    }\r\n\r\n    selectPanels(rect, panels, dimensions, selectedPanels, crossSelect) {\r\n        this.isSelectedPanels = false\r\n        for (let p of [...panels, ...dimensions]) {\r\n            //selectedPanels.delete(p)\r\n            const { full, cross } = p.isInSelectionRect(rect)\r\n            if (full) { selectedPanels.add(p); this.isSelectedPanels = true }\r\n            if (cross && crossSelect) { selectedPanels.add(p); this.isSelectedPanels = true }\r\n        }\r\n    }\r\n\r\n}","import { MouseHandler } from \"./MouseHandler\";\r\nimport SelectCursor from \"../components/shapes/cursors/SelectCursor\";\r\nimport { Status } from \"../reducers/functions\";\r\nimport { setCurCoord } from \"../functions/viewPortFunctions\";\r\nimport Geometry from \"../utils/geometry\";\r\nimport ResizeCursor from \"../components/shapes/cursors/ResizeCursor\";\r\nimport { PanelSelectRectHandler } from \"./PanelSelectRectHandler\";\r\nexport class PanelFreeHandler extends MouseHandler {\r\n    constructor(state) {\r\n        super(state);\r\n        this.setStatusBar()\r\n    }\r\n    setStatusBar() {\r\n        if (this.isMobile)\r\n            this.statusBar = [{ text: ` - ${this.captions.move};  `, icons: [\"gest_move\"] },\r\n            { text: ` - ${this.captions.rotate};  `, icons: [\"gest_dbltap\"] },\r\n            { text: ` - ${this.captions.scale}  `, icons: [\"gest_zoom\"] }\r\n            ];\r\n        else\r\n            this.statusBar = [{ text: ` - ${this.captions.move};  `, icons: [\"rmb\", \"mmb\"] },\r\n            { text: ` - ${this.captions.scale}  `, icons: [\"mmb_wheel\"] }\r\n            ];\r\n    }\r\n    move({ curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.move({ curPoint, viewPortData });\r\n        if (this.drag) {\r\n            //if (!keys.shiftKey) appData.selectedPanels.clear()\r\n            appData.selectedPanels.add(this.activeShape)\r\n            if (!this.activeShape.state.fixed) appActions.movePanel(this.activeShape, this.dragPos);\r\n            return;\r\n        } \r\n        this.activeShape = null;\r\n        for (let p of [...appData.panels, ...appData.dimensions]) {\r\n            if (!p.state.selectable) continue;\r\n            if (p.isUnderCursor(this.coord, viewPortData.pixelRatio)) {\r\n                if (!p.state.fixed_move) appActions.setCursor(new ResizeCursor(this.coord, p.vertical));\r\n                p.setState({ highlighted: true })\r\n                this.activeShape = p;\r\n            } else {\r\n                p.setState({ highlighted: false })\r\n            }\r\n        }\r\n        if (!this.activeShape) appActions.setCursor(new SelectCursor(this.coord));\r\n        \r\n        setViewPortData(prevData => setCurCoord(this.coord, this.curPoint, prevData));\r\n\r\n    }\r\n    down({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.down({ curPoint, viewPortData })\r\n\r\n        setViewPortData(prevData => setCurCoord(this.coord, curPoint, prevData));\r\n        if (button === 1 || button === 2) {\r\n            appActions.setScreenStatus(Status.PAN, { startPoint: this.coord, prevStatus: Status.FREE, prevMouseHandler: this });\r\n            return\r\n        }\r\n        if (button !== 0) return\r\n        this.activeShape = null;\r\n        for (let p of [...appData.panels, ...appData.dimensions]) {\r\n            if (!p.state.selectable) continue;\r\n            if (p.isUnderCursor(this.coord, viewPortData.pixelRatio)) {\r\n                this.activeShape = p;\r\n                if(!p.state.selected && !keys.shiftKey) appData.selectedPanels.clear()\r\n            } else {\r\n                //p.setState({ selected: false })\r\n            }\r\n        }\r\n        this.drag = false;\r\n        if (this.activeShape) {\r\n            const { x, y } = this.activeShape.getPosition()\r\n            const dx = this.coord.x - x;\r\n            const dy = y - this.coord.y;\r\n            this.drag = true;\r\n            this.dragPos = { dx, dy }\r\n        } else\r\n        if (!appData.isMobile) { appActions.startSelection(this.coord, PanelSelectRectHandler) }\r\n    }\r\n    click({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.click({ curPoint, viewPortData });\r\n        if (button !== 0) return\r\n        for (let p of [...appData.panels, ...appData.dimensions]) {\r\n            if (p.isUnderCursor(this.coord, viewPortData.pixelRatio)) {\r\n                if (keys.shiftKey) {\r\n                    if(appData.selectedPanels.has(p)) appData.selectedPanels.delete(p);\r\n                            else appData.selectedPanels.add(p)\r\n                } else {\r\n                    appData.selectedPanels.add(p)\r\n                }\r\n            } else {\r\n                if (!keys.shiftKey) {\r\n                    appData.selectedPanels.delete(p)\r\n                }\r\n            }\r\n        }\r\n        appActions.updateState()\r\n    }\r\n    doubleClick({ button, curPoint, viewPortData, setViewPortData, appActions, appData, keys }) {\r\n        super.doubleClick({ curPoint, viewPortData })\r\n\r\n    }\r\n    keypress(code) {\r\n        return super.keypress(code)\r\n    }\r\n    up({ appActions }) {\r\n        this.drag = false;\r\n        appActions.updateState()\r\n    }\r\n    getSelectedShapeProperties(state) {\r\n        this.properties = [];\r\n        const shape = state.selectionManager.getSelectedPanels().pop();\r\n        if (shape) {\r\n            const props = shape.getProperties();\r\n            this.setProperties(props);\r\n            this.currentObject = shape;\r\n        }\r\n    }\r\n\r\n    touchDown({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        super.touchDown({ pointerId, curPoint, viewPortData })\r\n        this.down({ button: 0, curPoint, viewPortData, setViewPortData, appActions, appData })\r\n    }\r\n    touchMove({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        super.touchMove({ pointerId, curPoint, viewPortData })\r\n        const tm = viewPortData.touchManager\r\n        if (tm.getTouchCount() > 1) {\r\n            const diff = Geometry.distance(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const midPoint = Geometry.midPoint(tm.touches[0].curPoint, tm.touches[1].curPoint)\r\n            const delta = tm.prevDiff - diff\r\n            if (Math.abs(delta) > 10) {\r\n                const deltaY = Math.sign(delta)\r\n                this.wheel({ deltaY, curPoint: midPoint, viewPortData, setViewPortData })\r\n                tm.prevDiff = diff\r\n            }\r\n        }\r\n        if (tm.getTouchCount() === 1) {\r\n            if (this.drag) {\r\n                appData.panels.forEach(p => p.state.selected = false)\r\n                this.activeShape.state.selected = true\r\n                appActions.movePanel(this.activeShape, this.dragPos);\r\n                return;\r\n            }\r\n            appActions.setScreenStatus(Status.PAN, { startPoint: this.coord, prevStatus: Status.FREE, prevMouseHandler: this })\r\n        }\r\n    }\r\n}","import Geometry from \"../utils/geometry\";\r\nimport { MouseHandler } from \"./MouseHandler\";\r\nimport { getRealRect, getScreenRect, setCurCoord, setTopLeft } from \"../functions/viewPortFunctions\";\r\nexport class StatusPanHandler extends MouseHandler {\r\n    constructor(params) {\r\n        super(params.state);\r\n        this.startPoint = params.startPoint;\r\n        this.setStatusBar()\r\n    }\r\n    setStatusBar() {\r\n        this.statusBar = []\r\n    }\r\n    move({ curPoint, viewPortData, setViewPortData, appData }) {\r\n        super.move({ curPoint, viewPortData });\r\n        let dx = this.coord.x - this.startPoint.x;\r\n        let dy = this.coord.y - this.startPoint.y;\r\n        const realRect = getRealRect(viewPortData.topLeft, viewPortData.bottomRight)\r\n        const screenRect = getScreenRect(viewPortData.viewPortWidth, viewPortData.viewPortHeight)\r\n        const screenTopLeft = Geometry.realToScreen({ x: dx, y: appData.wardrobe.height }, realRect, screenRect);\r\n        const screenBottomRight = Geometry.realToScreen({ x: appData.wardrobe.width + dx, y: 0 }, realRect, screenRect);\r\n        const topLeft = { x: 0, y: 0 }\r\n        const xInRange = ((screenTopLeft.x < viewPortData.viewPortWidth / 2) && (dx > 0)) || ((screenBottomRight.x > viewPortData.viewPortWidth / 2) && (dx < 0));\r\n        const yInRange = ((screenTopLeft.y < viewPortData.viewPortHeight / 2) && (dy < 0)) || ((screenBottomRight.y > viewPortData.viewPortHeight / 2) && (dy > 0));\r\n        topLeft.x = xInRange ? viewPortData.topLeft.x - dx : viewPortData.topLeft.x;\r\n        topLeft.y = yInRange ? viewPortData.topLeft.y - dy : viewPortData.topLeft.y;\r\n        setViewPortData(prevData => setTopLeft(topLeft, prevData))\r\n        const cursorPoint = { x: xInRange ? this.startPoint.x : this.coord.x, y: yInRange ? this.startPoint.y : this.coord.y }\r\n        setViewPortData(prevData => setCurCoord(cursorPoint, curPoint, prevData))\r\n\r\n    }\r\n    up({ button, appActions }) {\r\n        if (button === 1 || button === 2) appActions.setPrevStatus();\r\n    }\r\n    wheel() {\r\n\r\n    }\r\n    keypress(code) {\r\n        return super.keypress(code)\r\n    }\r\n    leave({ appActions }) {\r\n        super.leave();\r\n        appActions.setPrevStatus();\r\n    }\r\n    touchUp({ pointerId, appActions, viewPortData }) {\r\n        super.touchUp({ pointerId, viewPortData })\r\n        appActions.setPrevStatus();\r\n    }\r\n    touchMove({ pointerId, curPoint, viewPortData, setViewPortData, appActions, appData }) {\r\n        this.move({ curPoint, viewPortData, setViewPortData, appActions, appData })\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { RegExp } from \"./shapes/PropertyData\"\r\nimport { PropertyTypes } from \"./shapes/PropertyData\"\r\nconst {NUMBER, INTEGER_NUMBER, INTEGER_POSITIVE_NUMBER} = PropertyTypes\r\n\r\nexport default function InputField(props) {\r\n    const [state, setState] = useState({ value: props.value, prevValue: props.value })\r\n    const isNumber = (props.type === NUMBER)||(props.type === INTEGER_NUMBER)||(props.type === INTEGER_POSITIVE_NUMBER)\r\n    useEffect(() => {\r\n        setState({ prevValue: props.value, value: props.value })\r\n    }, [props.value])\r\n    const onChange = (v) => {\r\n        if(v === \"\") {setState({ ...state, value: v }); return}\r\n        let { value, correct } = test(v, props.type)\r\n        if(isNumber) value = +value\r\n        if (correct) setState({ ...state, value })\r\n    }\r\n    const onKeyPress = (key, value) => {\r\n        if (key === \"Enter\") {\r\n            const { correct } = test(value, props.type, props.max, props.min)\r\n            if (correct && value !== \"\") {\r\n                props.setValue(state.value);\r\n                setState({ ...state, prevValue: state.value });\r\n            }\r\n            else {\r\n                if(!isNumber) props.setValue(value);\r\n                setState({ ...state, value: isNumber?state.prevValue:value})\r\n            }\r\n        }\r\n    }\r\n    const className = ((state.value !== state.prevValue) ? \"input-cell-incorrect\" : \"input-cell\") + (props.active?\" active-input\":\"\")\r\n\r\n    return <input\r\n        type=\"text\"\r\n        className={className}\r\n        disabled={props.disabled}\r\n        value={state.value}\r\n        onKeyPress={(e) => {\r\n            onKeyPress(e.key, e.target.value);\r\n            e.stopPropagation()\r\n            }}\r\n        onKeyDown={(e) => {\r\n            e.stopPropagation()\r\n            }}\r\n        onBlur={() => {\r\n            setState({ ...state, value: state.prevValue });\r\n            }}\r\n        onChange={(e) => { onChange(e.target.value) }}\r\n        onFocus={()=>{if(props.onFocus) props.onFocus()}}\r\n    />\r\n}\r\n\r\nfunction test(value, type, max, min) {\r\n    const regexp = RegExp[type];\r\n    const result = { value, correct: false }\r\n    if ((`${value}`.match(regexp) !== null) || value === \"\") { result.correct = true }\r\n    if(min !== undefined) result.correct = value >= min\r\n    if(max !== undefined) result.correct = result.correct && (value <= max)\r\n    return result;\r\n}\r\n\r\n","import React, { useRef, useState } from 'react';\r\nimport { AppActions } from '../actions/AppActions';\r\n\r\nexport default function Modal(props) {\r\n    const refHeader = useRef()\r\n    const {onPointerDown, onPointerMove, onPointerLeave, onPointerUp} = useDragElement(refHeader)\r\n    return <div className='modal-container noselect' onClick={AppActions.blink} >\r\n        <div ref={refHeader} className={\"toolbar-modal shadow-box\"} style={props.wide?{display:\"block\",width:\"100%\"}:{}} onClick={(e) => { e.stopPropagation() }}>\r\n        <div \r\n            style={{ maxWidth: \"400px\", wordWrap: \"break-word\", textAlign: \"center\" }}\r\n            onPointerDown = {onPointerDown}\r\n            onPointerMove = {onPointerMove}\r\n            onPointerLeave = {onPointerLeave}\r\n            onPointerUp = {onPointerUp}\r\n            >\r\n            {props.header}\r\n           \r\n            </div>\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nfunction useDragElement(refElement){\r\n    const [dragState, setDragState] = useState({ drag: false, x0: 0, y0: 0 })\r\n    return{\r\n    onPointerDown: (e) => {\r\n        const rect = e.target.getBoundingClientRect();\r\n        setDragState({ drag: true, x0: e.clientX - rect.left, y0: e.clientY - rect.top })\r\n    },\r\n    onPointerMove:(e) => {\r\n        if (dragState.drag) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            const style = getComputedStyle(refElement.current)\r\n            const x = e.clientX - rect.left - dragState.x0 + parseInt(style.left)\r\n            const y = e.clientY - rect.top - dragState.y0 + parseInt(style.top)\r\n            refElement.current.style.left = `${x}px`\r\n            refElement.current.style.top = `${y}px`\r\n        }\r\n    },\r\n    onPointerLeave: () => { setDragState({ drag: false }) },\r\n    onPointerUp: () => { setDragState({ drag: false }) }}\r\n}","import React from 'react';\r\n\r\nexport default function ComboBox(props) {\r\n    const options = props.items.map((i, index) => \r\n                <option key={index} selected={props.value === i ? true : false}>{i}</option>\r\n                )\r\n    return (\r\n        <>\r\n            {props.title ? <span>{props.title}</span> : <></>}\r\n            <select className={'combobox'} size={!props.size ? 1 : props.size}\r\n                disabled={props.disabled}\r\n                onChange={(e) => {\r\n                    const index = props.items.findIndex(i => i === e.target.value) || 0\r\n                    props.onChange(index, e.target.value)\r\n                }}>\r\n                {options}\r\n            </select>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport InputField from './InputField';\r\nimport { PropertyTypes } from './shapes/PropertyData';\r\nimport Modal from './Modal';\r\nimport ComboBox from './ComboBox';\r\nimport { getFasadBases } from '../reducers/materialReducer';\r\nconst { INTEGER_POSITIVE_NUMBER } = PropertyTypes\r\n\r\nexport default function NewProjectDialog({start = false}) {\r\n    const appActions = useActions()\r\n    const appData = useSelector(store => store)\r\n    const wardrobeCaps = appData.captions.toolbars.project.wardrobe\r\n    const materialCaps = appData.captions.toolbars.info.materials \r\n    const dspColors = appData.materials.DSP.map(m => m.name)\r\n    const fasadeBases = getFasadBases()\r\n    const fasadeBasesCaps = fasadeBases.map(b => appData.captions.toolbars.info.materials.fasadBases[b])\r\n    \r\n    const [{ width, depth, height, double, fasadeCount, dspCorpus, fasadeBaseIndex, fasadeBaseColorIndex }, setState] = useState({ width: 2400, depth: 600, height: 2400, double: false, fasadeCount: 2, dspCorpus: dspColors[0], fasadeBaseIndex: 0, fasadeBaseColorIndex: 0 })\r\n    const fasadeBaseColors = appData.materials[fasadeBases[fasadeBaseIndex]].map(m => m.name)\r\n    const typeValue = double ? wardrobeCaps.type.double : wardrobeCaps.type.single\r\n    return <Modal header={appData.captions.toolbars.project.new}>\r\n                \r\n                <div className=\"newproject-content\">\r\n                    <div>{wardrobeCaps.width}</div>\r\n                    <InputField type={INTEGER_POSITIVE_NUMBER} value={width} max={5000} min={900} setValue={value => setState(prev => ({ ...prev, width: +value }))} />\r\n                    <div>{wardrobeCaps.depth}</div>\r\n                    <InputField type={INTEGER_POSITIVE_NUMBER} value={depth} max={700} min={400} setValue={value => setState(prev => ({ ...prev, depth: +value }))} />\r\n                    <div>{wardrobeCaps.height}</div>\r\n                    <InputField type={INTEGER_POSITIVE_NUMBER} value={height} max={3000} min={2000} setValue={value => setState(prev => ({ ...prev, height: +value }))} />\r\n                    <ComboBox title={wardrobeCaps.type.type} items={[wardrobeCaps.type.single, wardrobeCaps.type.double]} value={typeValue} onChange = {(index)=>setState(prev => ({ ...prev, double: !!index }))}/>\r\n                    <ComboBox title={wardrobeCaps.fasadeCount} items={[2, 3, 4]} value={fasadeCount} onChange = {(_, value)=>setState(prev => ({ ...prev, fasadeCount: +value}))}/>\r\n                    <ComboBox title={materialCaps.dspMainColor} items={dspColors} value={dspCorpus} onChange = {(_, value)=>setState(prev => ({ ...prev, dspCorpus: value}))}/>\r\n                    <ComboBox title={materialCaps.fasadBase} items={fasadeBasesCaps} value={fasadeBasesCaps[fasadeBaseIndex]} onChange = {(index)=>setState(prev => ({ ...prev, fasadeBaseIndex: index}))}/>\r\n                    <ComboBox title={materialCaps.fasadBaseColor} items={fasadeBaseColors} value={fasadeBaseColors[fasadeBaseColorIndex]} onChange = {(index)=>setState(prev => ({ ...prev, fasadeBaseColorIndex: index}))}/>\r\n                </div>\r\n                <div className='flex-center'>\r\n                    <button onClick={() => appActions.newProject({ wardrobe: { width, depth, height, double, fasadeCount, dspCorpus, fasadeBase: fasadeBases[fasadeBaseIndex], fasadeBaseColor: fasadeBaseColors[fasadeBaseColorIndex] } })}>{\"OK\"}</button>\r\n                    {start ? <></> : <button onClick={() => appActions.showDialog(false)}>{appData.captions.buttons.cancel}</button>}\r\n                </div>\r\n            </Modal>\r\n\r\n}","\r\n\r\nexport default class TextShape {\r\n    static CENTER = 'center';\r\n    static LEFT = 'left';\r\n    static RIGHT = 'right';\r\n    static TOP = 'top';\r\n    static BOTTOM = 'bottom';\r\n    static BOLD = 2\r\n    static NORMAL = 1\r\n    constructor(text = [''], underlines = [], point = { x: 0, y: 0 }, anchor = { vertical: TextShape.CENTER, horizontal: TextShape.CENTER }, weight = TextShape.NORMAL) {\r\n        this.p = point;\r\n        this.text = text;\r\n        this.anchor = anchor;\r\n        this.lineBreak = 0\r\n        this.underlines = underlines\r\n        this.width = 0\r\n        this.height = 0\r\n        this.weight = weight\r\n    }\r\n    draw(ctx, fontSize) {\r\n        //let width = this.width\r\n        let height = this.height\r\n        const { width: textWidth } = this.getTextRect(ctx, fontSize);\r\n        let x = 0\r\n        let y = 0\r\n        switch (this.anchor.horizontal) {\r\n            case TextShape.CENTER:\r\n                x = this.basePoint.x - textWidth / 2\r\n                break;\r\n            case TextShape.LEFT:\r\n                x = this.basePoint.x + 2;\r\n                break;\r\n            case TextShape.RIGHT:\r\n                x = this.basePoint.x - textWidth - 2;\r\n                break;\r\n            default:\r\n        }\r\n        switch (this.anchor.vertical) {\r\n            case TextShape.CENTER:\r\n                y = this.basePoint.y\r\n                break;\r\n            case TextShape.TOP:\r\n                y = this.basePoint.y - height / 2\r\n                break;\r\n            case TextShape.BOTTOM:\r\n                y = this.basePoint.y;\r\n                break;\r\n            default:\r\n        }\r\n        const weight = this.weight === TextShape.BOLD ? \"bold \" : \"\"\r\n        ctx.font = weight + `${fontSize}px serif`;\r\n        ctx.lineWidth = 1\r\n        for (const t of this.text) {\r\n            ctx.fillStyle = \"black\"\r\n            ctx.fillText(t, x, y);\r\n            y += (this.singleTextLineHeight + this.lineBreak - 2)\r\n        }\r\n        y = this.basePoint.y\r\n        this.underlines.reduce((prevLine, line) => {\r\n            y += (line + prevLine)\r\n            ctx.beginPath()\r\n            ctx.lineWidth = line\r\n            ctx.moveTo(x, Math.trunc(y) + 0.5)\r\n            ctx.lineTo(x + textWidth, Math.trunc(y) + 0.5)\r\n            ctx.stroke()\r\n            return line\r\n            //y += (line+2)\r\n        }, 0)\r\n    }\r\n    getTextRect(ctx, fontSize) {\r\n        const weight = this.weight === TextShape.BOLD ? \"bold \" : \"\"\r\n        ctx.font = weight + `${fontSize}px serif`;\r\n        let width = 0\r\n        let height = 0\r\n        let singleTextLineHeight = 0\r\n        let textHeight = 0\r\n        for (const t of this.text) {\r\n            const textMetrics = ctx.measureText(t)\r\n            if (width < textMetrics.width) width = textMetrics.width\r\n            singleTextLineHeight = textMetrics.actualBoundingBoxAscent + textMetrics.fontBoundingBoxDescent\r\n            height += singleTextLineHeight\r\n        }\r\n        const underlineHeight = this.underlines.length > 0 ? this.underlines.reduce((a, i) => a + i, 0) : 0\r\n        textHeight = height\r\n        height += (this.text.length - 1) * this.lineBreak + underlineHeight\r\n        width = Math.trunc(width)\r\n        height = Math.trunc(height)\r\n        singleTextLineHeight = Math.trunc(singleTextLineHeight)\r\n        return { width, height, textHeight, singleTextLineHeight, underlineHeight };\r\n    }\r\n\r\n    setText(text) {\r\n        this.text = text;\r\n    }\r\n    setFont(font) {\r\n        this.font = font;\r\n    }\r\n    setPoint(point) {\r\n        this.p = point;\r\n    }\r\n    setBasePoint(point) {\r\n        this.basePoint = { ...point, y: point.y };\r\n    }\r\n    setAnchor(anchor) {\r\n        this.anchor = { ...this.anchor, ...anchor };\r\n    }\r\n    setDimensions(width, height, textHeight, singleTextLineHeight) {\r\n        this.width = width\r\n        this.height = height\r\n        this.textHeight = textHeight\r\n        this.singleTextLineHeight = singleTextLineHeight\r\n    }\r\n\r\n\r\n}","import TextShape from './TextShape';\r\nexport default class TableCellShape {\r\n    constructor({ text, underlines = [], frame = true, padding = 2, align = TextShape.CENTER, weight = TextShape.NORMAL }) {\r\n        this.topLeft = { x: 0, y: 0 }\r\n        this.align = align;\r\n        this.caption = text\r\n        this.captionShape = new TextShape(this.caption, underlines, null, null, weight)\r\n        this.padding = padding\r\n        this.frame = frame\r\n    }\r\n    draw(ctx, fontSize) {\r\n        let width\r\n        let height\r\n        if (!this.width) {\r\n            ({ width, height } = this.getOwnDimensions(ctx, fontSize))\r\n        } else {\r\n            width = this.width\r\n            height = this.height\r\n        }\r\n        let point = {};\r\n        switch (this.align) {\r\n            case TextShape.CENTER:\r\n                point = {\r\n                    x: this.topLeft.x + width / 2,\r\n                    y: this.topLeft.y + height / 2\r\n                }\r\n                break;\r\n            case TextShape.LEFT:\r\n                point = {\r\n                    x: this.topLeft.x,\r\n                    y: this.topLeft.y + height / 2\r\n                }\r\n                break;\r\n            case TextShape.RIGHT:\r\n                point = {\r\n                    x: this.topLeft.x + width,\r\n                    y: this.topLeft.y + height / 2\r\n                }\r\n                break;\r\n            default:\r\n        }\r\n        point.y = this.topLeft.y + this.singleTextLineHeight\r\n        this.captionShape.setBasePoint(point);\r\n        this.captionShape.setAnchor({ horizontal: this.align, vertical: TextShape.CENTER });\r\n        this.captionShape.draw(ctx, fontSize)\r\n        ctx.lineWidth = 1\r\n        if (this.frame) ctx.strokeRect(Math.trunc(this.topLeft.x) + 0.5, Math.trunc(this.topLeft.y) + 0.5, Math.trunc(width), Math.trunc(height))\r\n    }\r\n    setPosition(x, y) {\r\n        this.topLeft = { x, y }\r\n    }\r\n    setAlign(align) {\r\n        this.align = align\r\n    }\r\n    setText(text) {\r\n        this.caption.setText(text);\r\n    }\r\n    setFont(fontSize) {\r\n        this.fontSize = fontSize\r\n    }\r\n    getOwnDimensions(ctx, fontSize) {\r\n        ctx.font = `${fontSize}px serif`;\r\n        let { width, height, textHeight, singleTextLineHeight, underlineHeight } = this.captionShape.getTextRect(ctx, fontSize)\r\n        width += this.padding * 2\r\n        height += this.padding * 2\r\n        return { width, height, textHeight, singleTextLineHeight, underlineHeight };\r\n    }\r\n    setDimensions(width, height, textHeight, singleTextLineHeight) {\r\n        this.width = width\r\n        this.height = height\r\n        this.textHeight = textHeight\r\n        this.singleTextLineHeight = singleTextLineHeight\r\n        this.captionShape.setDimensions(width, height, textHeight, singleTextLineHeight)\r\n    }\r\n    getDimensions(ctx) {\r\n        if (!this.width) return this.getOwnDimensions(ctx)\r\n        return { width: this.width, height: this.height };\r\n    }\r\n}","import TableCellShape from './TableCellShape';\r\nexport default class TableShape {\r\n    constructor(table) {\r\n        this.table = table\r\n        this.tableRows = []\r\n        this.rowCount = table.length\r\n        this.colCount = table[0].length\r\n        this.topLeft = { x: 0, y: 0 }\r\n        for (const row of table) {\r\n            const tableRow = []\r\n            for (const col of row) {\r\n                tableRow.push(new TableCellShape(col))\r\n            }\r\n            this.tableRows.push(tableRow)\r\n        }\r\n    }\r\n\r\n    draw(ctx, fontSize, printOptions = {}) {\r\n        const { maxColWidth, maxRowHeight, maxRowTextHeight, maxSingleTextLineHeight, maxRowUnderlineHeight } = this.getMaxCellDimensions(ctx, fontSize)\r\n        let y = this.topLeft.y\r\n        this.tableRows.forEach((row, rowIndex) => {\r\n            let x = 0\r\n            const singleTextLineHeight = maxSingleTextLineHeight[rowIndex]\r\n            const underlineHeight = maxRowUnderlineHeight[rowIndex]\r\n            const height = maxRowHeight[rowIndex] + underlineHeight\r\n            const textHeight = maxRowTextHeight[rowIndex]\r\n            //const height = textHeight + underlineHeight\r\n            row.forEach((col, colIndex) => {\r\n                const width = maxColWidth[colIndex]\r\n                col.setPosition(this.topLeft.x + x, y)\r\n                col.setDimensions(width, height, textHeight, singleTextLineHeight)\r\n                col.draw(ctx, fontSize)\r\n                x += width\r\n            })\r\n            if ((printOptions) && ((printOptions.pageHeight - y) < height)) {\r\n                if (printOptions.onEndPage) {\r\n                    printOptions.onEndPage()\r\n                    //ctx.fillStyle = \"white\"\r\n                    ctx.clearRect(0, 0, 900, 900);\r\n                    y = printOptions.topMargin\r\n                }\r\n            } else y += height\r\n        })\r\n        if (printOptions.onEndPage) printOptions.onEndPage(false)\r\n    }\r\n\r\n    getMaxCellDimensions(ctx, fontSize) {\r\n        let maxColWidth = Array(this.colCount).fill(0)\r\n        let maxRowHeight = Array(this.rowCount).fill(0)\r\n        let maxRowTextHeight = Array(this.rowCount).fill(0)\r\n        let maxRowUnderlineHeight = Array(this.rowCount).fill(0)\r\n        let maxSingleTextLineHeight = Array(this.rowCount).fill(0)\r\n        this.tableRows.forEach((row, rowIndex) => {\r\n            row.forEach((col, colIndex) => {\r\n                const { width, height, textHeight, singleTextLineHeight, underlineHeight } = col.getOwnDimensions(ctx, fontSize)\r\n                if (maxColWidth[colIndex] < width) maxColWidth[colIndex] = width\r\n                if (maxRowHeight[rowIndex] < height) maxRowHeight[rowIndex] = height\r\n                if (maxRowTextHeight[rowIndex] < textHeight) maxRowTextHeight[rowIndex] = textHeight\r\n                if (maxRowUnderlineHeight[rowIndex] < underlineHeight) maxRowUnderlineHeight[rowIndex] = underlineHeight\r\n                if (maxSingleTextLineHeight[rowIndex] < singleTextLineHeight) maxSingleTextLineHeight[rowIndex] = singleTextLineHeight\r\n            })\r\n        })\r\n        return { maxColWidth, maxRowHeight, maxRowTextHeight, maxSingleTextLineHeight, maxRowUnderlineHeight }\r\n    }\r\n\r\n    getTableDimensions(ctx, fontSize) {\r\n        const { maxColWidth, maxRowHeight, maxRowUnderlineHeight } = this.getMaxCellDimensions(ctx, fontSize)\r\n        const totalWidth = maxColWidth.reduce((a, i) => a + i, 0)\r\n        let totalHeight = 0\r\n        maxRowHeight.forEach((rh, i) => totalHeight += rh + maxRowUnderlineHeight[i])\r\n        return { totalWidth, totalHeight }\r\n    }\r\n\r\n    setPosition(x, y) {\r\n        this.topLeft = { x, y }\r\n    }\r\n\r\n}","import TableShape from '../components/shapes/table/TableShape'\r\nimport { paint } from '../functions/drawFunctions';\r\nimport { setDimensions, setTopLeft, zoomToRect } from '../functions/viewPortFunctions';\r\nimport { getWardrobePrintArea } from './panels';\r\nimport TextShape from '../components/shapes/table/TextShape';\r\nimport { saveCurrentState } from './projectReducer';\r\nimport Geometry from '../utils/geometry';\r\nimport { WORKSPACE } from './initialState';\r\n\r\n\r\nexport function exportProject(state, printState) {\r\n    const imgData = []\r\n    const appData = {...state}\r\n    for(let workspace of [WORKSPACE.CORPUS, WORKSPACE.FASADES]){\r\n        appData.workspace = workspace\r\n        let scale = 2\r\n        var canv = document.createElement('canvas')\r\n        let pixels = 3// for 75 dpi   11.81 for 300 dpi\r\n        let pageHeight = 210\r\n        let pageWidth = 297\r\n        let canvWidth = pageWidth * pixels * scale\r\n        let canvHeight = pageHeight * pixels * scale\r\n        canv.setAttribute(\"width\", `${canvWidth}`)\r\n        canv.setAttribute(\"height\", `${canvHeight}`)\r\n        canv.style.width = `${canvWidth / scale}px`\r\n        canv.style.height = `${canvHeight / scale}px`\r\n\r\n        let ctx = canv.getContext('2d')\r\n        ctx.scale(scale, scale)\r\n        let dims = appData.wardrobe\r\n        let captions = appData.captions.print.dataTable\r\n        let double = appData.wardrobe.double?` (${appData.wardrobe.width1}+${appData.wardrobe.width2})`:''\r\n        let materials = appData.materials\r\n        let dataList = [\r\n            [{ text: [captions.title], frame: false, align: 'left', weight: TextShape.BOLD }],\r\n            [{ text: [captions.gabarits], frame: true, weight: TextShape.BOLD }],\r\n            [{ text: [`  ${captions.width} ${dims.width} ${double}`], frame: true, align: 'left' }],\r\n            [{ text: [`  ${captions.depth} ${dims.depth}`], frame: true, align: 'left' }],\r\n            [{ text: [`  ${captions.height} ${dims.height}`], frame: true, align: 'left' }],\r\n            [{ text: [captions.DSPcolor], frame: true, align: 'left', weight: TextShape.BOLD }],\r\n            [{ text: [`  ${captions.DSPcorpus} ${materials.activeDSPColor}`], frame: true, align: 'left' }],\r\n            [{ text: [`  ${captions.DSPext}`], frame: true, align: 'left' }],\r\n        ]\r\n\r\n        let dataTable = new TableShape(dataList)\r\n        let wardrobeRect = getWardrobePrintArea(appData)\r\n        let viewPortData = appData.viewPortData\r\n        viewPortData.viewPortWidth = canvWidth / scale\r\n        viewPortData.viewPortHeight = canvHeight / scale\r\n        let realWidth = wardrobeRect.bottomRight.x - wardrobeRect.topLeft.x\r\n        viewPortData = setDimensions(viewPortData.viewPortWidth, viewPortData.viewPortHeight, realWidth, viewPortData)\r\n        viewPortData = zoomToRect({ ...wardrobeRect }, viewPortData)\r\n        viewPortData = setTopLeft(wardrobeRect.topLeft, viewPortData)\r\n\r\n        ctx.fillStyle = \"white\"\r\n        ctx.fillRect(0, 0, viewPortData.viewPortWidth, viewPortData.viewPortHeight)\r\n        dataTable.setPosition(0, 0)\r\n        let fontSize = 12\r\n        let marginRight = 20\r\n        let marginTop = 50\r\n        let {totalWidth} = dataTable.getTableDimensions(ctx, fontSize)\r\n        ctx.save()\r\n        ctx.translate(viewPortData.viewPortWidth - totalWidth - marginRight, marginTop)\r\n        dataTable.draw(ctx, fontSize)\r\n        ctx.restore()\r\n        realWidth = Geometry.screenToRealLength(viewPortData.viewPortWidth - totalWidth - marginRight, viewPortData.realWidth, viewPortData.viewPortWidth)\r\n        viewPortData = setDimensions(viewPortData.viewPortWidth - totalWidth - marginRight, viewPortData.viewPortHeight - 150, realWidth, viewPortData)\r\n        viewPortData = zoomToRect({ ...wardrobeRect }, viewPortData)\r\n        //viewPortData = setTopLeft(wardrobeRect.topLeft, viewPortData)\r\n        ctx.save()\r\n        ctx.translate(0, marginTop)\r\n        paint(ctx, viewPortData, appData, true)\r\n        ctx.restore()\r\n        imgData.push(canv.toDataURL('image/png'));\r\n    }\r\n    saveCurrentState(appData, imgData)\r\n}\r\n\r\n","import React from \"react\";\r\nimport JSZip from 'jszip'\r\nimport FileSaver from 'file-saver'\r\nimport { ModelActions } from \"../actions/ModelActions\";\r\nimport NewProjectDialog from \"../components/NewProjectDialog\";\r\nimport PanelShape from \"../components/shapes/PanelShape\";\r\nimport { PanelFreeHandler } from \"../handlers/PanelFreeHandler\";\r\nimport { getNewDate } from \"./functions\";\r\nimport { getInitialState, WORKSPACE } from \"./initialState\";\r\nimport { exportProject } from \"./printPdf\";\r\nimport { FasadeFreeHandler } from \"../handlers/FasadeFreeHandler\";\r\n\r\nexport default function projectReducer(state, action) {\r\n    switch (action.type) {\r\n        case ModelActions.NEW_PROJECT_CONFIRM:\r\n            let showDialog = { show: true, dialog: <NewProjectDialog start = {action.payload}/> }\r\n            return { result: true, newState: { ...state, showDialog } };\r\n\r\n        case ModelActions.NEW_PROJECT:\r\n            const initialState = getInitialState({ wardrobe: action.payload.wardrobe })\r\n            initialState.mouseHandler = new PanelFreeHandler(initialState)\r\n            return {\r\n                result: true,\r\n                newState: { ...initialState, materials: {...state.materials, activeDSPColor: action.payload.wardrobe.dspCorpus}, showDialog: {show: false} }\r\n            };\r\n\r\n        case ModelActions.SET_INFORMATION:\r\n            return { result: true, newState: { ...state, information: { ...action.payload } } }\r\n\r\n        case ModelActions.SAVE_PROJECT:\r\n            exportProject(state);\r\n            return { result: true, newState: state };\r\n\r\n        case ModelActions.SET_PROJECT:\r\n            const project = action.payload;\r\n            if (!project.project) return { result: true, newState: { ...state, showAlert: { show: true, message: \"corruptedProject\" } } }\r\n            const newState = loadCurrentState(project.state, state);\r\n            return { result: true, newState: { ...state, ...newState } };\r\n\r\n        case ModelActions.SET_WARDROBE_DIMENSIONS:\r\n            const dimensions = action.payload;\r\n            if(state.wardrobe.double){\r\n                dimensions.width1 = Array.from(state.panels)[0].length\r\n                dimensions.width2 = Array.from(state.panels)[1].length\r\n            }\r\n            return { result: true, newState: { ...state, wardrobe: { ...state.wardrobe, ...dimensions } } };\r\n\r\n        case ModelActions.SET_WORKSPACE:\r\n            const mouseHandler = action.payload === WORKSPACE.CORPUS ? new PanelFreeHandler(state) : new FasadeFreeHandler(state)\r\n            state.selectedPanels.clear()\r\n            return { result: true, newState: { ...state, workspace: action.payload, mouseHandler } };\r\n\r\n        default: {\r\n            return { result: false, newState: state }\r\n        }\r\n    }\r\n}\r\n\r\nexport function saveCurrentState(state, image) {\r\n    const saveState = {\r\n        //panels: state.panels.map(p => p.model),\r\n    };\r\n    const project = { project: 1.0, state: saveState }\r\n    var contents = JSON.stringify(project);\r\n    const img1 = image[0].split(\",\")[1]\r\n    const img2 = image[1].split(\",\")[1]\r\n    const zip = new JSZip()\r\n    zip.file('project.json', contents)\r\n    zip.file('корпус.png', img1, {base64: true})\r\n    zip.file('фасад.png', img2, {base64: true})\r\n    zip.generateAsync({type: 'blob'}).then(cont => FileSaver.saveAs(cont, 'project.zip'))\r\n\r\n}\r\n\r\nexport function loadCurrentState(state, oldState) {\r\n    const panels = state.panels.map(p => { const panel = new PanelShape({ ...p, drawModule: state.drawModuleInCaption }); panel.state.selected = false; panel.refreshModel(); return panel });\r\n    const newState = {\r\n        panels: panels,\r\n        detailList: {\r\n            primary: state.detailList[\"primary\"],\r\n            secondary: state.detailList[\"secondary\"]\r\n        },\r\n        information: { ...state.information, currentDate: state.information.currentDate || getNewDate() },\r\n    };\r\n    return newState;\r\n}\r\n","import { PanelFreeHandler } from \"../handlers/PanelFreeHandler\";\r\nimport { getInitialState } from \"./initialState\";\r\nimport statusReducer from \"./statusReducer\";\r\nimport panelReducer from \"./panelReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport optionReducer from \"./optionReducer\";\r\nimport languageReducer from \"./languageReducer\";\r\nimport { userReducer } from \"./userReducer\";\r\nimport materialReducer from \"./materialReducer\";\r\n\r\nconst initialState = getInitialState({})\r\ninitialState.mouseHandler = new PanelFreeHandler(initialState)\r\nexport const rootReducer = (state = initialState, action) => {\r\n    let newState = { ...state }\r\n    let result;\r\n    ({result, newState} = statusReducer(state, action))\r\n    if(result) return newState;\r\n    ({result, newState} = panelReducer(state, action))\r\n    if(result) return newState;\r\n    ({result, newState} = projectReducer(state, action))\r\n    if(result) return newState;\r\n    ({result, newState} = dialogsReducer(state, action))\r\n    if(result) return newState;\r\n    ({result, newState} = materialReducer(state, action))\r\n    if(result) return newState;\r\n    ({result, newState} = optionReducer(state, action))\r\n    if(result) return newState;\r\n    ({result, newState} = languageReducer(state, action))\r\n    if(result) return newState;\r\n    ({result, newState} = userReducer(state, action))\r\n    if(result) return newState\r\n    return state;\r\n}","import {createStore,applyMiddleware} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers'\r\nwindow.actions=[]\r\nconst actionList=(store)=>(next)=>(action)=>{window.actions.push(action.type);return next(action)}\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk,actionList));","import { ModelActions } from \"../actions/ModelActions\";\r\nimport { ScreenActions } from \"../actions/ScreenActions\";\r\nimport DragCursor from \"../components/shapes/cursors/DragCursor\";\r\nimport SelectCursor from \"../components/shapes/cursors/SelectCursor\";\r\nimport { FasadeFreeHandler } from \"../handlers/FasadeFreeHandler\";\r\nimport { PanelFreeHandler } from \"../handlers/PanelFreeHandler\";\r\nimport { StatusPanHandler } from \"../handlers/StatusPanHandler\";\r\nimport { Status } from \"./functions\";\r\nimport { WORKSPACE } from \"./initialState\";\r\n\r\nexport default function statusReducer(state, action) {\r\n    switch (action.type) {\r\n        case ScreenActions.ABORT:\r\n            return {\r\n                result: true,\r\n                newState: {\r\n                    ...state, status: Status.FREE, curShape: null, cursor: new SelectCursor(state.curRealPoint),\r\n                    mouseHandler: state.workspace === WORKSPACE.CORPUS ? new PanelFreeHandler(state) : new FasadeFreeHandler(state),\r\n                }\r\n            }\r\n\r\n        case ScreenActions.CANCEL:\r\n            state.panels.forEach(s => {\r\n                s.setState({ selected: false, underCursor: false, highlighted: false, inSelection: false });\r\n            })\r\n            state.dimensions.forEach(s => s.setState({ selected: false, underCursor: false, highlighted: false, inSelection: false }))\r\n            const newState = {\r\n                ...state,\r\n                status: Status.FREE,\r\n                curShape: null,\r\n                cursor: new SelectCursor(state.curRealPoint),\r\n                mouseHandler: state.workspace === WORKSPACE.CORPUS ? new PanelFreeHandler(state) : new FasadeFreeHandler(state),\r\n                toolButtonsPressed: {\r\n                    createVertical: false,\r\n                    createHorizontal: false,\r\n                    createSingleDimension: false,\r\n                }\r\n            }\r\n            return { result: true, newState };\r\n\r\n        case ScreenActions.CANCEL_MOVING:\r\n            return {\r\n                result: true,\r\n                newState: {\r\n                    ...state,\r\n                    status: Status.FREE, curShape: null, cursor: new SelectCursor(state.curRealPoint),\r\n                    mouseHandler: state.workspace === WORKSPACE.CORPUS ? new PanelFreeHandler(state) : new FasadeFreeHandler(state),\r\n                }\r\n            }\r\n\r\n        case ScreenActions.CANCEL_SELECTION:\r\n            state.panels.forEach(s => s.setState({ selected: false, underCursor: false, highlighted: false, inSelection: false }))\r\n            state.dimensions.forEach(s => s.setState({ selected: false, underCursor: false, highlighted: false, inSelection: false }))\r\n            state.selectedPanels.clear()\r\n            return {\r\n                result: true,\r\n                newState: {\r\n                    ...state,\r\n                    status: Status.FREE,\r\n                    curShape: null,\r\n                    cursor: new SelectCursor(state.curRealPoint)\r\n                }\r\n            }\r\n\r\n        case ScreenActions.PAN_SCREEN:\r\n            return {\r\n                result: true,\r\n                newState: {\r\n                    ...state,\r\n                    prevStatus: action.payload.prevStatus,\r\n                    status: Status.PAN,\r\n                    prevCursor: state.cursor,\r\n                    prevMouseHandler: action.payload.prevMouseHandler,//state.mouseHandler,\r\n                    cursor: new DragCursor(action.payload),\r\n                    mouseHandler: new StatusPanHandler({ ...action.payload, state })\r\n                }\r\n            }\r\n\r\n        case ScreenActions.REPAINT:\r\n            return { result: true, newState: { ...state } }\r\n\r\n        case ScreenActions.RESET_VIEW:\r\n            return { result: true, newState: { ...state, resetView: !state.resetView } }\r\n\r\n        case ScreenActions.SET_CURSOR:\r\n            return { result: true, newState: { ...state, cursor: action.payload } }\r\n\r\n        case ScreenActions.SET_PREV_STATUS:\r\n            return {\r\n                result: true,\r\n                newState: {\r\n                    ...state,\r\n                    status: state.prevStatus,\r\n                    cursor: state.prevCursor,\r\n                    mouseHandler: state.prevMouseHandler\r\n                }\r\n            }\r\n        case ScreenActions.SET_STATUS:\r\n            return {\r\n                result: true,\r\n                newState: {\r\n                    ...state,\r\n                    status: action.payload.status,\r\n                    prevStatus: action.payload.prevStatus,\r\n                    statusParams: action.payload.params\r\n                }\r\n            };\r\n\r\n        case ScreenActions.START_SELECTION:\r\n            return {\r\n                result: true,\r\n                newState: {\r\n                    ...state,\r\n                    cursor: new SelectCursor(state.curRealPoint),\r\n                    status: Status.SELECT,\r\n                    mouseHandler: new action.payload.handler(action.payload.point, state)\r\n                }\r\n            }\r\n\r\n        case ScreenActions.STOP_SELECTION:\r\n            if (!action.payload.isSelectedPanels) state.selectedPanels.clear()\r\n            return {\r\n                result: true, newState: {\r\n                    ...state,\r\n                    status: Status.FREE,\r\n                    cursor: new SelectCursor(state.curRealPoint),\r\n                    mouseHandler: new action.payload.handler(state),\r\n                }\r\n            };\r\n\r\n        case ModelActions.UPDATE_STATE:\r\n            //const selectedPanels.clear()\r\n            //state.panels.forEach(p => {if(p.state.selected) selectedPanels.add(p)})\r\n            return { result: true, newState: { ...state } }\r\n\r\n        default: {\r\n            return { result: false, newState: state }\r\n        }\r\n    }\r\n}","import { AppActions } from \"../actions/AppActions\";\r\n\r\nexport default function dialogsReducer(state, action){\r\n    switch (action.type){\r\n        case AppActions.SHOW_ALERT:\r\n            return { result: true, newState: {...state, showAlert: action.payload} };\r\n\r\n        case AppActions.SHOW_CONFIRM:\r\n            return { result: true, newState: {...state, showConfirm: action.payload} };\r\n\r\n        case AppActions.SHOW_DIALOG:\r\n            return { result: true, newState: {...state, showDialog: action.payload} };\r\n\r\n        case AppActions.SHOW_HELP:\r\n                return { result: true, newState: {...state, showHelp: action.payload} };\r\n\r\n        default: {\r\n            return {result: false, newState: state}\r\n        }\r\n    }\r\n}","import { ModelActions } from \"../actions/ModelActions\";\r\n\r\nexport default function optionReducer(state, action){\r\n    switch (action.type){\r\n\r\n        case ModelActions.SET_DELETE_CONFIRM:\r\n            return {result: true, newState: {...state, deleteConfirm: action.payload}}\r\n\r\n        case ModelActions.SET_DRAW_MODULE:\r\n            state.panels.forEach(p => { p.model.drawModule = action.payload; p.refreshModel() })\r\n            return { result: true, newState: {...state, drawModuleInCaption: action.payload} }\r\n\r\n\r\n        default: {\r\n            return {result: false, newState: state}\r\n        }\r\n    }\r\n}","import { AppActions } from \"../actions/AppActions\";\r\n\r\nexport default function languageReducer(state, action){\r\n    switch (action.type){\r\n        case AppActions.SET_LANGUAGE:\r\n            document.title = action.payload.title;\r\n\r\n            state.mouseHandler.setCaptions(action.payload.toolbars.statusbar)\r\n            return { result: true, newState: {...state, captions: action.payload} };\r\n\r\n        default: {\r\n            return {result: false, newState: state}\r\n        }\r\n    }\r\n}","import UserActions from \"../actions/UserActions\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nexport function userReducer(state, action) {\r\n  var user = state.user\r\n  switch (action.type) {\r\n    case UserActions.SET_TOKEN:\r\n      if (action.payload.token) {\r\n        let expires;\r\n        if (action.payload.remember === true)\r\n          expires = `;expires=Tue, 19 Jan 2099 00:00:00 GMT`;\r\n        else expires = \"\";\r\n        document.cookie = `token=${action.payload.token}${expires}`;\r\n        user = jwtDecode(action.payload.token)\r\n        user.token = action.payload.token;\r\n      } else {\r\n        user.name = \"\";\r\n        user.activated = false\r\n      }\r\n      return {result: true, newState: {...state, user}};\r\n\r\n    case UserActions.LOGOUT:\r\n      document.cookie = \"token=\";\r\n      return {result: true, newState: {...state, user:{}}};\r\n\r\n    case UserActions.ACTIVATE:\r\n      user.activated = true\r\n      return {result: true, newState: {...state, user}};\r\n\r\n    default:\r\n      return {result: false};\r\n  }\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { isMobile } from \"../reducers/functions\";\r\n\r\nexport const useToolTip = (title) => {\r\n  const toolTip = document.getElementById(\"tooltip\");\r\n  const onMouseOver = (e) => {\r\n    if(isMobile()) return\r\n    const { top:elementTop, left:elementLeft, height:elementHeight} = e.target.getBoundingClientRect();\r\n    if (title) {\r\n      toolTip.innerText = title;\r\n      toolTip.style.display = \"inline\";\r\n      toolTip.style.fontSize = \"0.8rem\"\r\n      const {width:toolTipWidth, height:toolTipHeight} = toolTip.getBoundingClientRect()\r\n      let top = elementTop + elementHeight + window.scrollY + 5\r\n      let left = elementLeft + window.scrollX \r\n      if((left + toolTipWidth)>window.innerWidth){\r\n              toolTip.style.right = \"0px\";\r\n              toolTip.style.left = \"auto\";}\r\n              else{\r\n              toolTip.style.left = left + \"px\";\r\n              toolTip.style.right = \"auto\"\r\n            }\r\n      if((elementTop + elementHeight + toolTipHeight + 5)>window.innerHeight){\r\n              toolTip.style.bottom = \"0px\";\r\n              toolTip.style.top = \"auto\";\r\n              }else{\r\n                toolTip.style.bottom = \"auto\";\r\n                toolTip.style.top = top + \"px\";\r\n              }\r\n  }\r\n}\r\n  const onMouseLeave = () => {\r\n    toolTip.style.display = \"none\";\r\n  }\r\n  useEffect(()=>{return ()=>{\r\n    toolTip.style.display = \"none\";\r\n  }},[])\r\n  return { onMouseOver, onMouseLeave };\r\n};\r\n","import React from 'react';\r\nimport { useToolTip } from '../customHooks/useToolTip';\r\nexport const ToolButtonType = {\r\n        INSTRUMENTS: \"INSTRUMENTS\"\r\n}\r\nexport default function ToolButton({icon, title, type, disabled, pressed, pressedStyle, unpressedStyle, onClick}) {\r\n        let className = \"button\"\r\n        if(type === ToolButtonType.INSTRUMENTS){\r\n                pressedStyle = pressedStyle || \"instruments_button_pressed\"\r\n                unpressedStyle = unpressedStyle || \"instruments_button_unpressed\"\r\n        }\r\n        if(disabled) className += \" button-disabled\"\r\n        className += pressed ? ` ${pressedStyle}` : ` ${unpressedStyle}`;\r\n        const { onMouseOver, onMouseLeave } = useToolTip(title);\r\n        return <div\r\n                className={`${className} ${icon} noselect`}\r\n                onClick={(e) => { if (!disabled) { e.stopPropagation(); onClick() } }}\r\n                onMouseOver={(e) => { onMouseOver(e) }}\r\n                onMouseLeave={(e) => { onMouseLeave(e) }}\r\n                onContextMenu={(e) => { e.preventDefault(); }}\r\n        >\r\n        </div>\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport ToolBar from './ToolBar';\r\nimport ToolButton from './ToolButton';\r\n//import User from './User';\r\n\r\nconst Header =  ()=>{\r\n    const captions = useSelector(store => store.captions.help)\r\n    const title = useSelector(store => store.captions.title)\r\n    const appActions = useActions()\r\n        return <div className={\"header\"}>\r\n            <ToolBar noTitle={true} wide={true}>\r\n                <div style={{display:\"flex\", flexWrap:\"none\", gap: \"1em\", alignItems:\"center\", width:\"100%\"}}>\r\n                    <div className='title'>{title}</div>\r\n                    <ToolButton icon=\"help\" title={captions.title} onClick={()=>{appActions.showHelp(true)}}/>\r\n                    {/* <User/> */}\r\n                </div>\r\n            </ToolBar>\r\n        </div>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport ComboBox from './ComboBox';\r\n\r\nexport default function MaterialBar({ disabled }) {\r\n    const materials = useSelector(store => store.materials)\r\n    const captions = useSelector(store => store.captions.toolbars.info.materials)\r\n    const appActions = useActions()\r\n    const DSPColors = materials.DSP.map(c => c.name)\r\n    const activeDSPColor = materials.activeDSPColor\r\n    return <div className='gridContent'>\r\n           \r\n            <ComboBox title={captions.dspMainColor} value={activeDSPColor} items={DSPColors} onChange={(_, value)=>appActions.setMaterial({activeDSPColor: value})}/>\r\n\r\n        </div>\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TreeView } from '@material-ui/lab'\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport  ExpandMoreIcon  from '@mui/icons-material/ExpandMore'\r\nimport  ChevronRightIcon  from '@mui/icons-material/ChevronRight'\r\nimport ToolBar from './ToolBar';\r\nimport MaterialBar from './MaterialBar';\r\n\r\nexport default function InformationBar({ disabled }) {\r\n    const captions = useSelector(store => store.captions.toolbars.info)\r\n    const appData = useSelector(store => store)\r\n    const data = getInfoData(appData)\r\n    const renderTree = (nodes) => (\r\n        <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name} >\r\n            {Array.isArray(nodes.children)\r\n                ? nodes.children.map((node) => renderTree(node))\r\n                : null}\r\n        </TreeItem>\r\n    );\r\n    return <ToolBar caption={captions.title}>\r\n        {data.map(d =>\r\n            <TreeView\r\n            aria-label=\"rich object\"\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpanded={['root']}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            \r\n            >\r\n                {renderTree(d)}\r\n            </TreeView>\r\n            )}\r\n    </ToolBar>\r\n}\r\n\r\nfunction getInfoData(appData) {\r\n    const caps = appData.captions.toolbars.info\r\n    const double = appData.wardrobe.double?` (${appData.wardrobe.width1}+${appData.wardrobe.width2})`:''\r\n    const data = [\r\n        {\r\n                id: \"wardrobe\",\r\n                name: caps.wardrobe.title,\r\n                children: [\r\n                    { id: \"width\", name: `${caps.wardrobe.width}: ${appData.wardrobe.width}${double}`},\r\n                    { id: \"depth\", name: `${caps.wardrobe.depth}: ${appData.wardrobe.depth}`},\r\n                    { id: \"height\", name: `${caps.wardrobe.height}: ${appData.wardrobe.height}` },\r\n                ]\r\n            },\r\n            {\r\n                id: \"materials\",\r\n                name: caps.materials.title,\r\n                children: [\r\n                    { id: \"material\", name: <MaterialBar/> },\r\n                ]\r\n            }\r\n        ]\r\n    return data\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ToolButtonBar(props) {\r\n        return <>\r\n                <div style={{ display: \"flex\", gap: \"0.2em\",alignItems: \"stretch\" }}>\r\n                        {props.children}\r\n                </div>\r\n        </>\r\n}\r\n","import React from 'react';\r\n\r\nexport default function CheckBox({value, disabled, title, onChange}){\r\n    return (\r\n        <input type=\"checkbox\"  checked={value} disabled={disabled} onChange={(e) => { onChange(e.target.checked) }}/>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport { moveSelectedPanels, setWardrobeDimensions } from '../reducers/panels';\r\nimport Shape from './shapes/Shape';\r\nimport ToolButton from './ToolButton';\r\n\r\nexport default function MoveButtonsPanel() {\r\n    const captions = useSelector(store => store.captions.toolbars.operations)\r\n    const update = useActions().updateState\r\n    const appData = useSelector(store => store)\r\n    const appActions = useActions()\r\n    const panels = Array.from(appData.selectedPanels).filter(p => p.type !== Shape.DIMENSION)\r\n    const every = panels.every(p => p.vertical) || panels.every(p => !p.vertical)\r\n    const fixed = panels.some(p => p.state.fixed_move)\r\n    //appData.selectedPanels.forEach(p => panels.push(p))\r\n    const enabledButtons = { left: false, right: false, up: false, down: false }\r\n    //const panel = panels[0]\r\n    if (panels.length > 0 && !fixed && every) {\r\n        enabledButtons.left = panels[0].vertical\r\n        enabledButtons.right = panels[0].vertical\r\n        enabledButtons.up = !panels[0].vertical\r\n        enabledButtons.down = !panels[0].vertical\r\n    }\r\n\r\n    return <div className='moveButtons'>\r\n        <ToolButton icon={\"moveLeft\"} disabled={!enabledButtons.left} title={captions.moveLeft} onClick={() => { moveSelectedPanels(-1, 0, panels[0], panels, () => { setWardrobeDimensions(appData, appActions) }); update() }} />\r\n        <ToolButton icon={\"moveUp\"} disabled={!enabledButtons.up} title={captions.moveUp} onClick={() => { moveSelectedPanels(0, 1, panels[0], panels,  () => { setWardrobeDimensions(appData, appActions) }); update() }} />\r\n        <ToolButton icon={\"moveDown\"} disabled={!enabledButtons.down} title={captions.moveDown} onClick={() => { moveSelectedPanels(0, -1, panels[0], panels, () => { setWardrobeDimensions(appData, appActions) }); update() }} />\r\n        <ToolButton icon={\"moveRight\"} disabled={!enabledButtons.right} title={captions.moveRight} onClick={() => { moveSelectedPanels(1, 0, panels[0], panels,  () => { setWardrobeDimensions(appData, appActions) }); update() }} />\r\n    </div>\r\n}","import React from 'react';\r\nimport ToolBar from './ToolBar';\r\nimport ToolButton from './ToolButton';\r\nimport InputField from './InputField'\r\nimport ToolButtonBar from './ToolButtonBar';\r\nimport CheckBox from './CheckBox'; \r\nimport ComboBox from './ComboBox'\r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport { PropertyTypes } from './shapes/PropertyData';\r\nimport Shape from './shapes/Shape';\r\n\r\nexport default function FasadePropertyBar() {\r\n  const appData = useSelector(store => store)\r\n  const captions = appData.captions.toolbars\r\n  const appActions = useActions()\r\n  const selected = Array.from(appData.selectedPanels)\r\n  const selectedPanels = selected.filter(p => p.type !== Shape.DIMENSION)\r\n  const levelUpEnabled = selectedPanels.length === 1 && selectedPanels[0].parent\r\n  const fixedWidth = selectedPanels.length === 1 && selectedPanels[0].state.fixedWidth\r\n  const fixedHeight = selectedPanels.length === 1 && selectedPanels[0].state.fixedHeight\r\n  const fixable = selectedPanels.length === 1 && selectedPanels[0].state.fixable\r\n  const selectedCount = selected.length\r\n  const noDelete = selected.some(s => !s.state.deletable)\r\n  let contents = <></>\r\n  if (selectedCount === 1) {\r\n    contents = <div className='propertyContent'>\r\n      {getProperties(selected[0], appData, appActions.updateState)}\r\n    </div>\r\n  }\r\n  let noSelected = false\r\n  if (selectedCount === 0) {\r\n    contents = captions.property.noselected\r\n    noSelected = true\r\n  }\r\n  if (selectedCount > 1) contents = captions.property.selected + selectedCount\r\n  const propCaps = captions.property\r\n  const buttons = !noSelected ? <div>\r\n    <hr />\r\n    <ToolButtonBar>\r\n      <ToolButton title={propCaps.delete} disabled={noDelete} pressedStyle={\"deletebutton\"} unpressedStyle={\"deletebutton\"} onClick={() => { appActions.deleteSelectedFasadesConfirm() }} />\r\n      <ToolButton title={propCaps.levelup} disabled={!levelUpEnabled} pressedStyle={\"levelUpButton\"} unpressedStyle={\"levelUpButton\"} onClick={() => { appActions.selectParent(selectedPanels[0]) }} />\r\n      <ToolButton title={!fixedWidth ? propCaps.lock_width : propCaps.unlock_width} disabled={!fixable} pressed={fixedWidth} pressedStyle={\"lock_width_button_pressed\"} unpressedStyle={\"lock_width_button_unpressed\"} onClick={() => {appActions.fixWidth(!fixedWidth)}} />\r\n      <ToolButton title={!fixedHeight ? propCaps.lock_height : propCaps.unlock_height} disabled={!fixable} pressed={fixedHeight} pressedStyle={\"lock_height_button_pressed\"} unpressedStyle={\"lock_height_button_unpressed\"} onClick={() => {appActions.fixHeight(!fixedHeight)}} />\r\n    </ToolButtonBar>\r\n  </div> : <></>\r\n  return <ToolBar caption={captions.property.title}>\r\n    {contents}\r\n    {buttons}\r\n  </ToolBar>\r\n}\r\n\r\nfunction getProperties(object, appData, updateState) {\r\n  const props = [];\r\n  for (let p of object.getProperties()) {\r\n    if(p.hidden) continue\r\n    const value = getValueElement(p, appData, updateState);\r\n    const prop = (\r\n      <>\r\n        <div>{appData.captions.toolbars.property[p.key]}</div>\r\n        {value}\r\n      </>\r\n    );\r\n    props.push(prop);\r\n  }\r\n  return props\r\n}\r\n\r\nfunction getValueElement(p, appData, updateState) {\r\n  if (p.editable()) {\r\n    switch (p.type) {\r\n      case PropertyTypes.STRING: return <InputField type={p.type} value={p.getValue()} setValue={(value) => { p.setValue(value); updateState() }} />\r\n      case PropertyTypes.INTEGER_POSITIVE_NUMBER: return <div><InputField type={p.type} value={p.getValue()} setValue={(value) => { p.setValue(value); updateState() }} />{(p.extra && p.extra())? <span>{p.extra()}</span> : <></>}</div>\r\n      case PropertyTypes.BOOL: return <CheckBox value={p.getValue()} onChange={(value) => { p.setValue(value); updateState() }} />\r\n      case PropertyTypes.LIST: return <ComboBox items={p.items(appData)} value={p.getValue(appData)} onChange={(index, value)=>{p.setValue(index, value); updateState()}} />\r\n      default:\r\n    }\r\n  } else {\r\n    return <div>{p.getValue(appData) + (p.extra ? p.extra() : \"\")}</div>;\r\n  }\r\n}","import React from 'react';\r\nimport ToolBar from './ToolBar';\r\nimport ToolButton from './ToolButton';\r\nimport InputField from './InputField'\r\nimport ToolButtonBar from './ToolButtonBar';\r\nimport CheckBox from './CheckBox'; \r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport { PropertyTypes } from './shapes/PropertyData';\r\nimport Shape from './shapes/Shape';\r\nimport MoveButtonsPanel from './MoveButtonsPanel';\r\nimport { WORKSPACE } from '../reducers/initialState';\r\nimport FasadePropertyBar from './FasadePropertyBar';\r\n\r\nexport default function PropertyBar() {\r\n  const appData = useSelector(store => store)\r\n  if(appData.workspace === WORKSPACE.FASADES) return <FasadePropertyBar />\r\n  const captions = appData.captions.toolbars.property\r\n  const appActions = useActions()\r\n  const selected = Array.from(appData.selectedPanels)\r\n  const selectedPanels = selected.filter(p => p.type !== Shape.DIMENSION)\r\n  const selectedCount = selected.length\r\n  const isJoints = selectedPanels.find(p => p.jointFromBackSide.size > 0 || p.jointFromFrontSide.size > 0);\r\n  const fixed_move = selected.some(s => s.state.fixed_move)\r\n  const noFix = selected.some(s => !s.state.fixable)\r\n  const noDelete = selected.some(s => !s.state.deletable)\r\n  const fixedLengthMin = selectedPanels.some(s => s.state.fixedLength.min)\r\n  const fixedLengthMax = selectedPanels.some(s => s.state.fixedLength.max)\r\n  let contents = <></>\r\n  if (selectedCount === 1) {\r\n    contents = <div className='gridContent'>\r\n      {getProperties(selected[0], appData, appActions.updateState)}\r\n    </div>\r\n  }\r\n  let noSelected = false\r\n  if (selectedCount === 0) {\r\n    contents = captions.noselected\r\n    noSelected = true\r\n  }\r\n  if (selectedCount > 1) contents = captions.selected + selectedCount\r\n  const buttons = !noSelected ? <div>\r\n    <hr />\r\n    <ToolButtonBar>\r\n      <MoveButtonsPanel/>\r\n      <ToolButton key = {1} title={fixed_move ? captions.unlock_move : captions.lock_move} disabled={noFix} pressed={fixed_move} pressedStyle={\"lockmovebutton_pressed\"} unpressedStyle={\"lockmovebutton_unpressed\"} onClick={() => { appActions.setPanelState({ fixed_move: !fixed_move }) }} />\r\n      <ToolButton key = {2} title={fixedLengthMin ? captions.unlock_minlength : captions.lock_minlength} disabled={noFix} pressed={fixedLengthMin} pressedStyle={\"lockminlengthbutton_pressed\"} unpressedStyle={\"lockminlengthbutton_unpressed\"} onClick={() => { appActions.fixMinLength(!fixedLengthMin) }} />\r\n      <ToolButton key = {3} title={fixedLengthMax ? captions.unlock_maxlength : captions.lock_maxlength} disabled={noFix} pressed={fixedLengthMax} pressedStyle={\"lockmaxlengthbutton_pressed\"} unpressedStyle={\"lockmaxlengthbutton_unpressed\"} onClick={() => { appActions.fixMaxLength(!fixedLengthMax) }} />\r\n      <ToolButton key = {4} title={captions.delete} disabled={noDelete} pressedStyle={\"deletebutton\"} unpressedStyle={\"deletebutton\"} onClick={() => { appActions.deleteSelectedConfirm({ isJoints }) }} />\r\n    </ToolButtonBar>\r\n  </div> : <></>\r\n  return <ToolBar caption={captions.title}>\r\n    {contents}\r\n    {buttons}\r\n  </ToolBar>\r\n}\r\n\r\nfunction getProperties(object, appData, updateState) {\r\n  const props = [];\r\n  for (let p of object.getProperties()) {\r\n    if(p.hidden) continue\r\n    const value = getValueElement(p, updateState);\r\n    const prop = (\r\n      <>\r\n        <div>{appData.captions.toolbars.property[p.key]}</div>\r\n        {value}\r\n      </>\r\n    );\r\n    props.push(prop);\r\n  }\r\n  return props\r\n}\r\n\r\nfunction getValueElement(p, updateState) {\r\n  if (p.editable) {\r\n    switch (p.type) {\r\n      case PropertyTypes.STRING: return <InputField type={p.type} value={p.value} setValue={(value) => { p.setValue(value); updateState() }} />\r\n      case PropertyTypes.INTEGER_POSITIVE_NUMBER: return <InputField type={p.type} value={p.value} setValue={(value) => { p.setValue(value); updateState() }} />\r\n      case PropertyTypes.BOOL: return <CheckBox value={p.value} onChange={(value) => { p.setValue(value); updateState() }} />\r\n      default:\r\n    }\r\n  } else {\r\n    return <div>{p.value}</div>;\r\n  }\r\n}","import React from \"react\";\r\nimport InformationBar from \"./InformationBar\";\r\nimport PropertyBar from \"./PropertyBar\";\r\n\r\nexport default function LeftSideBar() {\r\n  return (\r\n    <div className=\"left-sidebar\">\r\n      <div className=\"sidebar-content\">\r\n      <InformationBar/>\r\n        \r\n        <PropertyBar/>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport ToolButton from './ToolButton';\r\nimport ToolButtonBar from './ToolButtonBar';\r\n\r\nexport default function DimensionsBar(){\r\n    const appActions = useActions()\r\n    const captions = useSelector(store => store.captions.toolbars.instruments)\r\n    const {createSingleDimension: single, createTwoPanelDimensionInside: twoInside, createTwoPanelDimensionOutside: twoOutside} = useSelector(store => store.toolButtonsPressed)\r\n    const pressedStyle  = {pressedStyle: \"instruments_button_pressed\", unpressedStyle: \"instruments_button_unpressed\"}\r\n    return <>\r\n        <ToolButtonBar>\r\n            <ToolButton icon={\"createSingleDimension\"} pressed={single} {...pressedStyle} title={captions.createSingleDimension} onClick={()=>{appActions.createSingleDimension()}}/>\r\n            <ToolButton icon={\"createTwoPanelDimensionInside\"} pressed={twoInside} {...pressedStyle} title={captions.createTwoPanelDimensionInside} onClick={()=>{appActions.createTwoPanelDimension({inside: true})}}/>\r\n            <ToolButton icon={\"createTwoPanelDimensionOutside\"} pressed={twoOutside} {...pressedStyle} title={captions.createTwoPanelDimensionOutside} onClick={()=>{appActions.createTwoPanelDimension({inside: false})}}/>\r\n        </ToolButtonBar>\r\n        </>\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport ToolButton from './ToolButton';\r\nimport ToolButtonBar from './ToolButtonBar';\r\n\r\nexport default function FasadeDimensionsBar(){\r\n    const appActions = useActions()\r\n    const captions = useSelector(store => store.captions.toolbars.instruments)\r\n    const {createFasadLengthDimension: length, createFasadWidthDimension: width} = useSelector(store => store.toolButtonsPressed)\r\n    const pressedStyle  = {pressedStyle: \"instruments_button_pressed\", unpressedStyle: \"instruments_button_unpressed\"}\r\n    return <>\r\n        <ToolButtonBar>\r\n            <ToolButton icon={\"createFasadeLengthDimension\"} pressed={length} {...pressedStyle} title={captions.createFasadeLengthDimension} onClick={()=>{appActions.createFasadeDimension(true)}}/>\r\n            <ToolButton icon={\"createFasadeWidthDimension\"} pressed={width} {...pressedStyle} title={captions.createFasadeWidthDimension} onClick={()=>{appActions.createFasadeDimension(false)}}/>\r\n        </ToolButtonBar>\r\n        </>\r\n}","import React from 'react';\r\nimport ToolButton from './ToolButton';\r\n\r\nexport default function Counter(props){\r\n    const decreaseButton=<ToolButton disabled={props.disabled} icon=\"decrease\" onClick={()=>{\r\n        if(props.value>props.min){\r\n            props.setValue(props.value-1)\r\n        }\r\n        }}/>\r\n    const increaseButton=<ToolButton disabled={props.disabled} icon=\"increase\" onClick={()=>{\r\n        if(props.value<props.max){\r\n            props.setValue(props.value+1)\r\n        }\r\n        }}/>\r\n    return <span style={{display:\"flex\",alignItems:\"center\", flexDirection: props.vertical ? \"column\" : \"row\"}}>{increaseButton}{props.value}{decreaseButton}</span>\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport Counter from './Counter';\r\nimport FasadeShape from './shapes/FasadeShape';\r\nimport Shape from './shapes/Shape';\r\nimport ToolButton from './ToolButton';\r\nimport ToolButtonBar from './ToolButtonBar';\r\n\r\nexport default function FasadInstrumentsBar() {\r\n    const appActions = useActions()\r\n    const [divider, setDivider] = useState(2)\r\n    const captions = useSelector(store => store.captions.toolbars.instruments)\r\n    const selected = Array.from(useSelector(store => store).selectedPanels)\r\n    const selectedPanels = selected.filter(p => p.type !== Shape.DIMENSION)\r\n    const horDivideEnable = selectedPanels.every(p => !(p.parent && (p.parent.divided === FasadeShape.HOR)) && p.level < 3 )\r\n    const vertDivideEnable = selectedPanels.every(p => !(p.parent && (p.parent.divided === FasadeShape.VERT)) && p.level < 3 )\r\n    \r\n    const pressedStyle = { pressedStyle: \"instruments_button_pressed\", unpressedStyle: \"instruments_button_unpressed\" }\r\n    return <>\r\n        <ToolButtonBar>\r\n            <ToolButton icon={\"divideFasadHor\"} disabled={!horDivideEnable} pressed={false} {...pressedStyle} title={captions.divideFasadHor} onClick={() => {appActions.divideFasadHor(divider) }} />\r\n            <ToolButton icon={\"divideFasadVert\"} disabled={!vertDivideEnable} pressed={false} {...pressedStyle} title={captions.divideFasadVert} onClick={() => {appActions.divideFasadVert(divider)  }} />\r\n            <Counter vertical={true} value={divider} min={2} max={4} setValue={(value) => { setDivider(value) }} />\r\n        </ToolButtonBar>\r\n    </>\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport ToolButton from './ToolButton';\r\nimport ToolButtonBar from './ToolButtonBar';\r\n\r\nexport default function InstrumentsBar(){\r\n    const appActions = useActions()\r\n    const captions = useSelector(store => store.captions.toolbars.instruments)\r\n    const {createHorizontal: hor, createVertical: vert, createDrawer: drawer, createDrawerBlock: drawerBlock} = useSelector(store => store.toolButtonsPressed)\r\n    const pressedStyle  = {pressedStyle: \"instruments_button_pressed\", unpressedStyle: \"instruments_button_unpressed\"}\r\n    return <>\r\n        <ToolButtonBar>\r\n            <ToolButton icon={\"createPanelVertical\"} pressed={vert} {...pressedStyle} title={captions.createVertical} onClick={()=>{appActions.createPanel({vertical: true})}}/>\r\n            <ToolButton icon={\"createPanelHorizontal\"} pressed={hor} {...pressedStyle} title={captions.createHorizontal} onClick={()=>{appActions.createPanel({vertical: false})}}/>\r\n            <ToolButton icon={\"createDrawer\"} pressed={drawer} {...pressedStyle} title={captions.createDrawer} onClick={()=>{appActions.createDrawer()}}/>\r\n            <ToolButton icon={\"createDrawerBlock\"} pressed={drawerBlock} {...pressedStyle} title={captions.createDrawerBlock} onClick={()=>{appActions.createDrawerBlock()}}/>\r\n            <ToolButton icon={\"createTube\"} pressed={drawerBlock} {...pressedStyle} title={captions.createTube} onClick={()=>{appActions.createTube()}}/>\r\n        </ToolButtonBar>\r\n        </>\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport { canBeDistributed } from '../reducers/panels';\r\nimport ToolButton, { ToolButtonType } from './ToolButton';\r\nimport ToolButtonBar from './ToolButtonBar';\r\n\r\nexport default function OperationsBar(){\r\n    const captions = useSelector(store => store.captions.toolbars.operations)\r\n    const appActions = useActions()\r\n    const selected = useSelector(store => store).selectedPanels\r\n    const distributeEnabled = canBeDistributed(selected)\r\n    return <>\r\n        <ToolButtonBar>\r\n            <ToolButton icon=\"resetView\" title={captions.resetView} type={ToolButtonType.INSTRUMENTS} onClick={()=>{appActions.resetView()}}/>\r\n            <ToolButton icon=\"distribute\" disabled={!distributeEnabled} type={ToolButtonType.INSTRUMENTS} title={captions.distribute} onClick={()=>{appActions.distribute()}}/>\r\n        </ToolButtonBar>\r\n        </>\r\n}","import React from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport ToolButton from './ToolButton';\r\nimport ToolButtonBar from './ToolButtonBar';\r\n\r\nexport default function ProjectBar({disabled}){\r\n    const appActions = useActions()\r\n    const activated = useSelector(store => store.user.activated)\r\n    const captions = useSelector(store => store.captions.toolbars.project)\r\n    const disabledAll = !activated||disabled\r\n    const disTitle = activated?\"\":captions.disabled\r\n    return <>\r\n        <ToolButtonBar>\r\n            <ToolButton icon=\"new\" title={captions.new} onClick={()=>{appActions.newProjectConfirm()}} disabled={disabled}/>\r\n            <ToolButton icon=\"open\" title={captions.open + disTitle} onClick={()=>{appActions.open()}} disabled={disabledAll}/>\r\n            <ToolButton icon=\"save\" title={captions.save + disTitle} onClick={()=>{appActions.save()}} disabled={false}/>\r\n            </ToolButtonBar>\r\n        </>\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ToolButtonSeparator(){\r\n        return <div className = 'separator'>\r\n        </div>\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport { WORKSPACE } from '../reducers/initialState';\r\nimport ComboBox from './ComboBox';\r\n\r\nexport default function WorkspaceBar(){\r\n    const appActions = useActions()\r\n    const appData = useSelector(store => store)\r\n    const captions = appData.captions.toolbars.workspace\r\n    const items = [captions.corpus, captions.fasades]\r\n    const spaces = [WORKSPACE.CORPUS, WORKSPACE.FASADES]\r\n    const selected = appData.workspace === WORKSPACE.CORPUS ? items[0] : items[1]\r\n    return <>\r\n            <ComboBox items={items} value = {selected} onChange = {(index) => appActions.setWorkspace(spaces[index])}/>\r\n        </>\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { WORKSPACE } from '../reducers/initialState';\r\nimport DimensionsBar from './DimensionsBar';\r\nimport FasadeDimensionsBar from './FasadeDimensionsBar';\r\nimport FasadInstrumentsBar from './FasadInstrumentsBar';\r\nimport InstrumentsBar from './InstrumentsBar';\r\nimport OperationsBar from './OperationsBar';\r\nimport ProjectBar from './ProjectBar';\r\nimport ToolBar from './ToolBar';\r\nimport ToolButtonBar from './ToolButtonBar';\r\nimport ToolButtonSeparator from './ToolButtonSeparator';\r\nimport WorkspaceBar from './WorkspaceBar';\r\n\r\nexport default function MainToolBar({disabled}) {\r\n    const workspace = useSelector(store => store.workspace)\r\n    return <ToolBar noTitle={true} font={\"small\"}>\r\n        <ToolButtonBar>\r\n            <ProjectBar/>\r\n            <WorkspaceBar/>\r\n            {workspace === WORKSPACE.CORPUS?\r\n                <>\r\n                    <ToolButtonSeparator/>\r\n                    <InstrumentsBar/>\r\n                    <ToolButtonSeparator/>\r\n                    <DimensionsBar/>\r\n                </>:\r\n                <>\r\n                <FasadInstrumentsBar/>\r\n                <ToolButtonSeparator/>\r\n                <FasadeDimensionsBar/>\r\n                </>\r\n            }\r\n            <ToolButtonSeparator/>\r\n            <OperationsBar/>\r\n        </ToolButtonBar>\r\n\r\n    </ToolBar>\r\n\r\n}\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport ViewPortContainer from './ViewPortContainer';\r\nimport LeftSideBar from './LeftSideBar';\r\nimport MainToolBar from './MainToolBar';\r\n\r\nexport default function MainContainer(){\r\n    return <div className={'main-container'}>\r\n        <Header/>\r\n        <MainToolBar/>\r\n        <div className='work-container'>\r\n        \r\n           <LeftSideBar/>\r\n           \r\n            <div className={'viewport-container'}>\r\n                <ViewPortContainer/>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\nimport Modal from './Modal';\r\n\r\nexport default function Confirm(props){\r\n        const dispatch = useDispatch()\r\n        const appActions = useActions()\r\n        const captions = useSelector(store => store.captions)\r\n        return <Modal header={captions.messages[props.messageKey]}>\r\n                        <div className=\"flex-center\">\r\n                        {props.actions.map((action, index)=>\r\n                            <button key={index} \r\n                                    onClick={()=>{\r\n                                        dispatch(action.onClick());\r\n                                        appActions.showConfirm(false)}}>\r\n                                    {action.caption}\r\n                            </button>)}\r\n                        <button onClick={() => appActions.showConfirm(false)}>{captions.buttons.cancel}</button>\r\n                        </div>\r\n                </Modal>\r\n\r\n}","import React from 'react';\r\nimport useActions from '../customHooks/useActions';\r\nimport Modal from './Modal';\r\n\r\nexport default function Alert(props){\r\n    const appActions = useActions()\r\n    return <Modal header={props.message}>\r\n                    <hr/>\r\n                    <div className=\"flex-center\">\r\n                    <button onClick={()=>{\r\n                        appActions.showAlert(false)}}>OK</button>\r\n                    </div>    \r\n            </Modal>\r\n}","import React from 'react';\r\n\r\nconst Spinner = ()=>{\r\n        return <div className='modal-container  noselect'>\r\n                    <div className={\"lds-spinner\"}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                </div>\r\n}\r\nexport default Spinner;","import React, { Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useActions from '../customHooks/useActions';\r\n\r\nexport default function HelpSection(){\r\n    const appActions = useActions()\r\n    const captions = useSelector(store => store.captions)\r\n    const title = useSelector(store => store.captions.title)\r\n    const keys = captions.help.hotKeys.map((item,i)=><Fragment key={i}><span className='helpHotKey'>{item.key} </span> - {item.desc}<br/></Fragment>);\r\n    return <div className='modal-container help-container noselect' onClick={()=>{appActions.showHelp(false)}}>\r\n                <div className={\"toolbar help-section\"}>\r\n                    <div className={\"toolbar-header flex-center\"}>\r\n                        <span className={\"toolbarCaption\"}>{captions.help.title}</span>\r\n\r\n                    </div>\r\n                <hr/>\r\n                    <div style={{display:\"flex\", gap:\"1em\"}}>\r\n                    <span  style={{fontSize:\"medium\",fontWeight:\"bold\",color:\"blue\", textAlign:\"right\"}}>{title}</span>  \r\n                        <span>{captions.about.name}</span> \r\n                        <a href={`mailto: ${captions.about.email}`}>{captions.about.email}</a>\r\n                    </div>\r\n                <hr/>\r\n                \r\n                {keys}\r\n                </div>\r\n    </div>\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport MainContainer from './components/MainContainer';\r\nimport Confirm from './components/Confirm';\r\nimport Alert from './components/Alert';\r\nimport Spinner from './components/Spinner.js';\r\nimport HelpSection from './components/HelpSection.js';\r\nimport useActions from './customHooks/useActions.js';\r\nimport { captions } from './locale/ru.js';\r\n\r\nexport default function Body() {\r\n    const showHelp = useSelector(store => store.showHelp)\r\n    const showLoading = useSelector(store => store.showLoading)\r\n    const showConfirm = useSelector(store => store.showConfirm)\r\n    const showAlert = useSelector(store => store.showAlert)\r\n    const showDialog = useSelector(store => store.showDialog)\r\n    const appActions = useActions()\r\n    useEffect(() => {\r\n        appActions.setLanguage(captions)\r\n    }, [])\r\n    return <>\r\n        <MainContainer />\r\n        <div id=\"goTop\"><div></div></div>\r\n        {showLoading ? <Spinner /> : <></>}\r\n        {showHelp ? <HelpSection /> : <></>}\r\n        {showConfirm.show ? <Confirm messageKey={showConfirm.messageKey} actions={showConfirm.actions} /> : <></>}\r\n        {showAlert.show ? <Alert message={showAlert.message} /> : <></>}\r\n        {showDialog.show ? showDialog.dialog : <></>}\r\n    </>\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Spinner from './Spinner';\r\nimport { AppActions } from '../actions/AppActions';\r\nimport CheckBox from './CheckBox';\r\nimport useActions from '../customHooks/useActions';\r\nconst messages = require('../messages')\r\n\r\nexport default function Login(props) {\r\n    const refName = useRef();\r\n    const refPass = useRef();\r\n    const refDialog = useRef();\r\n    const [state, setState] = useState({ correct: true, logging: false, showPass: false, remember: false, message: \"\" })\r\n    const appActions = useActions()\r\n    const captions = useSelector(store => store.captions.loginForm)\r\n    const serverMessages = useSelector(store => store.captions.serverMessages)\r\n    const onRegClick = () => {\r\n        props.history.push('/register')\r\n    }\r\n    const onSubmit = (e) => {\r\n        if (state.logging) return;\r\n        const name = refName.current.value;\r\n        const pass = refPass.current.value;\r\n        requestLogin(name, pass);\r\n        e.preventDefault();\r\n    }\r\n    const cancel = () => {\r\n        props.history.push('/');\r\n    }\r\n    const requestLogin = (name, password)=>{\r\n        setState({ correct: true, logging: true });\r\n        fetch('/login',\r\n            {\r\n                method: 'POST', headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ name, password })\r\n            })\r\n            .then(res =>\r\n                res.json())\r\n            .then(res => {\r\n                setState({ correct: res.success, logging: false, message: serverMessages[res.message]});\r\n                if (res.success === true) {\r\n                    appActions.setToken(res.token, state.remember);\r\n                    props.history.push('/');\r\n                }\r\n            })\r\n            .catch(e => { console.error(e); setState({ correct: false, logging: false, message: serverMessages[messages.SERVER_ERROR]}); });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.KEYDOWNHANDLE = false\r\n        setTimeout(() => { refDialog.current.style.width = \"220px\";}, 10)\r\n        return ()=>{window.KEYDOWNHANDLE = true}\r\n    }, [])\r\n\r\n    const showPass = state.showPass ? \"text\" : \"password\"\r\n    const message = state.message\r\n    return <div className='modal-container noselect' onClick={AppActions.blink}>\r\n        <div ref={refDialog} className={\"toolbar-modal toolbar-animated shadow-box\"} onClick={(e) => { e.stopPropagation() }}>\r\n            <div className={\"toolbar-header\"}>\r\n                <span className={\"toolbarCaption\"}>{captions.title}</span>\r\n            </div>\r\n            <form onSubmit={onSubmit} className='login-form'>\r\n                <input name=\"nameOrEmail\" ref={refName} required placeholder={captions.name} />\r\n                <input name=\"password\" ref={refPass} required placeholder={captions.password} type={showPass} />\r\n                <input type='submit' value='OK' />\r\n                <input type='button' value={captions.cancel} onClick={cancel} />\r\n                <input type='button' value={captions.register} onClick={onRegClick} />\r\n            </form>\r\n            <CheckBox title={captions.showPass} value={state.showPass} onChange={(value) => { setState({...state, showPass: value }) }}/>\r\n            <CheckBox title={captions.remember} value={state.remember} onChange={(value) => { setState({...state, remember: value }) }}/>\r\n            <div className=\"flex-center\">{state.logging ? <Spinner /> : <></>}</div>\r\n            <span className={state.correct?\"successMessages\":\"errorMessages\"}>{message}</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Spinner from \"./Spinner\";\r\nimport { AppActions } from \"../actions/AppActions\";\r\nimport CheckBox from \"./CheckBox\";\r\nimport ToolButton from \"./ToolButton\";\r\nimport useActions from \"../customHooks/useActions\";\r\nconst messages = require('../messages')\r\n\r\nexport default function Register(props) {\r\n  const refName = useRef();\r\n  const refEmail = useRef();\r\n  const refPass1 = useRef();\r\n  const refPass2 = useRef();\r\n  const refDialog = useRef();\r\n  const appActions = useActions()\r\n  const captions = useSelector((store) => store.captions.registerForm);\r\n  const serverMessages = useSelector(store => store.captions.serverMessages);\r\n  const [state, setState] = useState({\r\n    correct: false,\r\n    errCode: 0,\r\n    fetching: false,\r\n    showPass: false,\r\n  });\r\n\r\n  const onSubmit = (e) => {\r\n    const name = refName.current.value;\r\n    const email = refEmail.current.value;\r\n    const pass1 = refPass1.current.value;\r\n    const pass2 = refPass2.current.value;\r\n    const checkResult = check(name, email, pass1, pass2);\r\n    checkResult.message = serverMessages[checkResult.message];\r\n    if (checkResult.correct) {\r\n      setState(prev => ({ ...prev, fetching: true }));\r\n      fetchData(\r\n        \"/register\",\r\n        { name: name, email: email, password: pass1 },\r\n        regSucceedCallback,\r\n        regFailCallback,\r\n        regErrorCallback\r\n      );\r\n    } else setState({ ...checkResult });\r\n    e.preventDefault();\r\n  };\r\n  const regSucceedCallback = (token) => {\r\n    appActions.showAlert(true, serverMessages[messages.REG_SUCCEED]);\r\n    appActions.setToken(token);\r\n    props.history.push(\"/\");\r\n    setState({ correct: true, fetching: false });\r\n  };\r\n  const regFailCallback = (message) => {\r\n    setState({ correct: false, fetching: false, message: serverMessages[message] });\r\n  };\r\n  const regErrorCallback = (err) => {\r\n    setState({\r\n      correct: false,\r\n      fetching: false,\r\n      message: serverMessages[messages.SERVER_ERROR],\r\n    });\r\n  };\r\n  const cancel = () => {\r\n    props.history.push(\"/\");\r\n  };\r\n  const login = () => {\r\n    props.history.push(\"/login\");\r\n  };\r\n  const changeInputs = () => {\r\n    setState((prev) => ({ ...prev, message: \"\" }));\r\n  };\r\n\r\n  const isNameExist = (name) => {\r\n    if (!checkName(name)) return setState(prev => ({ ...prev, correct: false, message: serverMessages[messages.INVALID_NAME] }))\r\n    setState(prev => ({ ...prev, fetching: true, message: \"\" }))\r\n    fetchData(\"/checkname\",\r\n      { name },\r\n      () => { setState(prev => ({ ...prev, correct: true, fetching: false, message: serverMessages[messages.USER_NAME_ALLOWED] })) },\r\n      () => { setState(prev => ({ ...prev, correct: false, fetching: false, message: serverMessages[messages.USER_NAME_EXIST] })) },\r\n      regErrorCallback\r\n    );\r\n  };\r\n  const isEmailExist = (email) => {\r\n    if (!checkEmail(email)) return setState(prev => ({ ...prev, correct: false, message: serverMessages[messages.INVALID_EMAIL] }))\r\n    setState(prev => ({ ...prev, fetching: true, message: \"\" }))\r\n    fetchData(\"/checkemail\",\r\n      { email },\r\n      () => { setState(prev => ({ ...prev, correct: true, fetching: false, message: serverMessages[messages.USER_EMAIL_ALLOWED] })) },\r\n      (message) => { setState(prev => ({ ...prev, correct: false, fetching: false, message: serverMessages[message] })) },\r\n      regErrorCallback\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    window.KEYDOWNHANDLE = false;\r\n    setTimeout(() => {\r\n      refDialog.current.style.width = \"220px\";\r\n    }, 10);\r\n    return () => {\r\n      window.KEYDOWNHANDLE = true;\r\n    };\r\n  }, []);\r\n\r\n  const showPass = state.showPass ? \"text\" : \"password\";\r\n  const message = state.message;\r\n  return (\r\n    <div className=\"modal-container noselect\" onClick={AppActions.blink}>\r\n      <div ref={refDialog} className={\"toolbar-modal toolbar-animated shadow-box\"} onClick={(e) => {e.stopPropagation();}}>\r\n        <div className={\"toolbar-header\"}>\r\n          <span className={\"toolbarCaption\"}>{captions.title}</span>\r\n        </div>\r\n        <form onSubmit={onSubmit} className=\"login-form\">\r\n          <div className=\"input-row\">\r\n            <input required ref={refName} placeholder={captions.name} onChange={changeInputs}/>\r\n            <ToolButton icon={\"refresh\"} title={captions.checkName} onClick={() => { isNameExist(refName.current.value) }} />\r\n          </div>\r\n          <div className=\"input-row\">\r\n            <input required ref={refEmail} placeholder={captions.email} type=\"email\" onChange={changeInputs}/>\r\n            <ToolButton icon={\"refresh\"} title={captions.checkEmail} onClick={() => { isEmailExist(refEmail.current.value) }} />\r\n          </div>\r\n          <input required ref={refPass1} placeholder={captions.password} type={showPass} onChange={changeInputs}/>\r\n          <input required ref={refPass2} placeholder={captions.passwordAgain} type={showPass} onChange={changeInputs}/>\r\n          <input type=\"submit\" value=\"OK\" />\r\n          <input type=\"button\" value={captions.cancel} onClick={cancel} />\r\n          <input type=\"button\" value={captions.login} onClick={login} />\r\n        </form>\r\n        <CheckBox title={captions.showPass} value={state.showPass} onChange={(value) => { setState({ showPass: value });}}/>\r\n        <div className=\"flex-center\">{state.fetching ? <Spinner /> : <></>}</div>\r\n        <span className={state.correct ? \"successMessages\" : \"errorMessages\"}>{message}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst fetchData = (url, data, onSuccess, onFail, onError) => {\r\n  fetch(url, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => {\r\n      if (res.success) onSuccess(res.token);\r\n      else onFail(res.message);\r\n    })\r\n    .catch((err) => {\r\n      onError(err);\r\n    });\r\n};\r\n\r\nconst check = (name, email, pass1, pass2) => {\r\n  let message = messages.NO_ERROR\r\n  let state = { correct: true };\r\n  if (pass2 !== pass1) message = messages.PASSWORDS_NOT_MATCH;\r\n  if (pass1.length < 6) message = messages.INVALID_PASSWORD\r\n  if (!checkEmail(email)) message = messages.INVALID_EMAIL\r\n  if (!checkName(name)) message = messages.INVALID_NAME\r\n  if (message !== messages.NO_ERROR) state = { correct: false, message };\r\n  return state;\r\n};\r\nconst checkName = (name) => {\r\n  return name.match(/^[a-zA-Z0-9]+([a-zA-Z0-9](_)[a-zA-Z0-9])*[a-zA-Z0-9]+$/) && (name.length >= 4)\r\n}\r\nconst checkEmail = (email) => {\r\n  return email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/)\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter,Route} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store/configureStore';\r\nimport Body from './Body';\r\nimport Login from './components/Login'\r\nimport Register from './components/Register';\r\nexport default function App(){\r\n        return <Provider store={store}>\r\n            <BrowserRouter>\r\n                <Route path='/' component={Body}/>\r\n                <Route path='/login' component={Login}/>\r\n                <Route path='/register' component={Register}/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n}\r\n","import React from 'react';\r\nimport {createRoot} from 'react-dom/client'\r\nimport App from './App';\r\nimport 'normalize.css';\r\nimport './styles/app.scss';\r\nimport './styles/buttons.scss';\r\nimport './styles/animation.scss';\r\nimport './styles/containers.scss';\r\nimport './styles/inputs.scss';\r\nimport './styles/toolbars.scss'\r\nconst container = document.getElementById('root')\r\n\r\ncreateRoot(container).render(<App />);\r\n\r\nfunction copy(){\r\n        function clone(obj){\r\n            const newObj={}\r\n            for(const prop in obj){\r\n                if(prop==='copy') continue;\r\n                let cloneProp;\r\n                if(typeof obj[prop] === 'object') cloneProp=clone(obj[prop]); else cloneProp=obj[prop];\r\n                newObj[prop]=cloneProp;\r\n                }\r\n            return newObj;\r\n        }\r\n    return clone(this);\r\n    }\r\n// eslint-disable-next-line\r\nObject.defineProperty(Object.prototype,'copy',{value:copy,enumerable:false});\r\n// eslint-disable-next-line\r\nNumber.prototype.round4=function(){return Math.round(this*10000)/10000}\r\nwindow.devicePixelRatio=2;\r\n\r\n"],"sourceRoot":""}